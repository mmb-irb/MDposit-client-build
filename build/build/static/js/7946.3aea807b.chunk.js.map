{"version":3,"file":"static/js/7946.3aea807b.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/Divider/dividerClasses.js","../node_modules/react-markdown/node_modules/react-is/cjs/react-is.production.min.js","../node_modules/@mui/material/List/listClasses.js","../node_modules/@mui/material/List/List.js","../node_modules/@mui/material/utils/getScrollbarSize.js","../node_modules/@mui/material/MenuList/MenuList.js","../node_modules/comma-separated-tokens/index.js","../node_modules/trough/lib/index.js","../node_modules/space-separated-tokens/index.js","../node_modules/@mui/material/ListItemText/listItemTextClasses.js","../node_modules/@mui/material/MenuItem/menuItemClasses.js","../node_modules/@mui/material/MenuItem/MenuItem.js","../node_modules/style-to-object/index.js","../node_modules/extend/index.js","../node_modules/react-markdown/node_modules/react-is/index.js","../node_modules/@mui/material/List/ListContext.js","../node_modules/is-buffer/index.js","../node_modules/@mui/utils/esm/getScrollbarSize/getScrollbarSize.js","../node_modules/decode-named-character-reference/index.dom.js","../node_modules/unist-util-stringify-position/lib/index.js","../node_modules/vfile-message/lib/index.js","../node_modules/vfile/lib/minpath.browser.js","../node_modules/vfile/lib/minproc.browser.js","../node_modules/vfile/lib/minurl.shared.js","../node_modules/vfile/lib/minurl.browser.js","../node_modules/vfile/lib/index.js","../node_modules/unified/lib/index.js","../node_modules/mdast-util-to-string/lib/index.js","../node_modules/micromark-util-chunked/index.js","../node_modules/micromark-util-combine-extensions/index.js","../node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","../node_modules/micromark-util-character/index.js","../node_modules/micromark-factory-space/index.js","../node_modules/micromark/lib/initialize/content.js","../node_modules/micromark/lib/initialize/document.js","../node_modules/micromark-core-commonmark/lib/blank-line.js","../node_modules/micromark-util-subtokenize/index.js","../node_modules/micromark-core-commonmark/lib/content.js","../node_modules/micromark/lib/initialize/flow.js","../node_modules/micromark/lib/initialize/text.js","../node_modules/micromark-util-resolve-all/index.js","../node_modules/micromark/lib/create-tokenizer.js","../node_modules/micromark-core-commonmark/lib/thematic-break.js","../node_modules/micromark-core-commonmark/lib/list.js","../node_modules/micromark-core-commonmark/lib/block-quote.js","../node_modules/micromark-factory-destination/index.js","../node_modules/micromark-factory-label/index.js","../node_modules/micromark-factory-title/index.js","../node_modules/micromark-factory-whitespace/index.js","../node_modules/micromark-util-normalize-identifier/index.js","../node_modules/micromark-core-commonmark/lib/definition.js","../node_modules/micromark-core-commonmark/lib/code-indented.js","../node_modules/micromark-core-commonmark/lib/heading-atx.js","../node_modules/micromark-core-commonmark/lib/setext-underline.js","../node_modules/micromark-util-html-tag-name/index.js","../node_modules/micromark-core-commonmark/lib/html-flow.js","../node_modules/micromark-core-commonmark/lib/code-fenced.js","../node_modules/micromark-core-commonmark/lib/character-reference.js","../node_modules/micromark-core-commonmark/lib/character-escape.js","../node_modules/micromark-core-commonmark/lib/line-ending.js","../node_modules/micromark-core-commonmark/lib/label-end.js","../node_modules/micromark-core-commonmark/lib/label-start-image.js","../node_modules/micromark-util-classify-character/index.js","../node_modules/micromark-core-commonmark/lib/attention.js","../node_modules/micromark-core-commonmark/lib/autolink.js","../node_modules/micromark-core-commonmark/lib/html-text.js","../node_modules/micromark-core-commonmark/lib/label-start-link.js","../node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../node_modules/micromark-core-commonmark/lib/code-text.js","../node_modules/micromark/lib/constructs.js","../node_modules/micromark/lib/parse.js","../node_modules/micromark/lib/preprocess.js","../node_modules/micromark-util-decode-numeric-character-reference/index.js","../node_modules/micromark-util-decode-string/index.js","../node_modules/mdast-util-from-markdown/lib/index.js","../node_modules/micromark/lib/postprocess.js","../node_modules/remark-parse/lib/index.js","../node_modules/micromark-util-sanitize-uri/index.js","../node_modules/unist-util-is/lib/index.js","../node_modules/unist-util-visit-parents/lib/index.js","../node_modules/unist-util-visit/lib/index.js","../node_modules/unist-util-position/lib/index.js","../node_modules/mdast-util-definitions/lib/index.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../node_modules/mdast-util-to-hast/lib/revert.js","../node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../node_modules/mdast-util-to-hast/lib/handlers/index.js","../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../node_modules/mdast-util-to-hast/lib/handlers/break.js","../node_modules/mdast-util-to-hast/lib/handlers/code.js","../node_modules/mdast-util-to-hast/lib/handlers/delete.js","../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote.js","../node_modules/mdast-util-to-hast/lib/handlers/heading.js","../node_modules/mdast-util-to-hast/lib/handlers/html.js","../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/image.js","../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/link.js","../node_modules/mdast-util-to-hast/lib/handlers/list.js","../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../node_modules/mdast-util-to-hast/lib/handlers/root.js","../node_modules/mdast-util-to-hast/lib/handlers/strong.js","../node_modules/mdast-util-to-hast/lib/handlers/table.js","../node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","../node_modules/mdast-util-to-hast/lib/handlers/table-row.js","../node_modules/mdast-util-to-hast/lib/handlers/text.js","../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../node_modules/mdast-util-to-hast/lib/state.js","../node_modules/unist-util-generated/lib/index.js","../node_modules/mdast-util-to-hast/lib/index.js","../node_modules/mdast-util-to-hast/lib/footer.js","../node_modules/remark-rehype/lib/index.js","../node_modules/property-information/lib/util/schema.js","../node_modules/property-information/lib/util/merge.js","../node_modules/property-information/lib/normalize.js","../node_modules/property-information/lib/util/info.js","../node_modules/property-information/lib/util/types.js","../node_modules/property-information/lib/util/defined-info.js","../node_modules/property-information/lib/util/create.js","../node_modules/property-information/lib/xlink.js","../node_modules/property-information/lib/xml.js","../node_modules/property-information/lib/util/case-sensitive-transform.js","../node_modules/property-information/lib/util/case-insensitive-transform.js","../node_modules/property-information/lib/xmlns.js","../node_modules/property-information/lib/aria.js","../node_modules/property-information/lib/html.js","../node_modules/property-information/lib/svg.js","../node_modules/property-information/index.js","../node_modules/react-markdown/lib/rehype-filter.js","../node_modules/hast-util-whitespace/index.js","../node_modules/property-information/lib/find.js","../node_modules/property-information/lib/hast-to-react.js","../node_modules/style-to-object/index.mjs","../node_modules/react-markdown/lib/uri-transformer.js","../node_modules/react-markdown/lib/ast-to-react.js","../node_modules/react-markdown/lib/react-markdown.js","../node_modules/is-plain-obj/index.js","../node_modules/@mui/material/ListItemIcon/listItemIconClasses.js","../node_modules/trim-lines/index.js","../node_modules/@mui/material/Typography/typographyClasses.js","../node_modules/@mui/material/Typography/Typography.js","../node_modules/bail/index.js","../node_modules/inline-style-parser/index.js"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getDividerUtilityClass(slot) {\n  return generateUtilityClass('MuiDivider', slot);\n}\nconst dividerClasses = generateUtilityClasses('MuiDivider', ['root', 'absolute', 'fullWidth', 'inset', 'middle', 'flexItem', 'light', 'vertical', 'withChildren', 'withChildrenVertical', 'textAlignRight', 'textAlignLeft', 'wrapper', 'wrapperVertical']);\nexport default dividerClasses;","/**\n * @license React\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=Symbol.for(\"react.element\"),c=Symbol.for(\"react.portal\"),d=Symbol.for(\"react.fragment\"),e=Symbol.for(\"react.strict_mode\"),f=Symbol.for(\"react.profiler\"),g=Symbol.for(\"react.provider\"),h=Symbol.for(\"react.context\"),k=Symbol.for(\"react.server_context\"),l=Symbol.for(\"react.forward_ref\"),m=Symbol.for(\"react.suspense\"),n=Symbol.for(\"react.suspense_list\"),p=Symbol.for(\"react.memo\"),q=Symbol.for(\"react.lazy\"),t=Symbol.for(\"react.offscreen\"),u;u=Symbol.for(\"react.module.reference\");\nfunction v(a){if(\"object\"===typeof a&&null!==a){var r=a.$$typeof;switch(r){case b:switch(a=a.type,a){case d:case f:case e:case m:case n:return a;default:switch(a=a&&a.$$typeof,a){case k:case h:case l:case q:case p:case g:return a;default:return r}}case c:return r}}}exports.ContextConsumer=h;exports.ContextProvider=g;exports.Element=b;exports.ForwardRef=l;exports.Fragment=d;exports.Lazy=q;exports.Memo=p;exports.Portal=c;exports.Profiler=f;exports.StrictMode=e;exports.Suspense=m;\nexports.SuspenseList=n;exports.isAsyncMode=function(){return!1};exports.isConcurrentMode=function(){return!1};exports.isContextConsumer=function(a){return v(a)===h};exports.isContextProvider=function(a){return v(a)===g};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===b};exports.isForwardRef=function(a){return v(a)===l};exports.isFragment=function(a){return v(a)===d};exports.isLazy=function(a){return v(a)===q};exports.isMemo=function(a){return v(a)===p};\nexports.isPortal=function(a){return v(a)===c};exports.isProfiler=function(a){return v(a)===f};exports.isStrictMode=function(a){return v(a)===e};exports.isSuspense=function(a){return v(a)===m};exports.isSuspenseList=function(a){return v(a)===n};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===d||a===f||a===e||a===m||a===n||a===t||\"object\"===typeof a&&null!==a&&(a.$$typeof===q||a.$$typeof===p||a.$$typeof===g||a.$$typeof===h||a.$$typeof===l||a.$$typeof===u||void 0!==a.getModuleId)?!0:!1};exports.typeOf=v;\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getListUtilityClass(slot) {\n  return generateUtilityClass('MuiList', slot);\n}\nconst listClasses = generateUtilityClasses('MuiList', ['root', 'padding', 'dense', 'subheader']);\nexport default listClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"dense\", \"disablePadding\", \"subheader\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport ListContext from './ListContext';\nimport { getListUtilityClass } from './listClasses';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePadding,\n    dense,\n    subheader\n  } = ownerState;\n  const slots = {\n    root: ['root', !disablePadding && 'padding', dense && 'dense', subheader && 'subheader']\n  };\n  return composeClasses(slots, getListUtilityClass, classes);\n};\nconst ListRoot = styled('ul', {\n  name: 'MuiList',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disablePadding && styles.padding, ownerState.dense && styles.dense, ownerState.subheader && styles.subheader];\n  }\n})(({\n  ownerState\n}) => _extends({\n  listStyle: 'none',\n  margin: 0,\n  padding: 0,\n  position: 'relative'\n}, !ownerState.disablePadding && {\n  paddingTop: 8,\n  paddingBottom: 8\n}, ownerState.subheader && {\n  paddingTop: 0\n}));\nconst List = /*#__PURE__*/React.forwardRef(function List(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiList'\n  });\n  const {\n      children,\n      className,\n      component = 'ul',\n      dense = false,\n      disablePadding = false,\n      subheader\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const context = React.useMemo(() => ({\n    dense\n  }), [dense]);\n  const ownerState = _extends({}, props, {\n    component,\n    dense,\n    disablePadding\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListContext.Provider, {\n    value: context,\n    children: /*#__PURE__*/_jsxs(ListRoot, _extends({\n      as: component,\n      className: clsx(classes.root, className),\n      ref: ref,\n      ownerState: ownerState\n    }, other, {\n      children: [subheader, children]\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? List.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input is used for\n   * the list and list items.\n   * The prop is available to descendant components as the `dense` context.\n   * @default false\n   */\n  dense: PropTypes.bool,\n  /**\n   * If `true`, vertical padding is removed from the list.\n   * @default false\n   */\n  disablePadding: PropTypes.bool,\n  /**\n   * The content of the subheader, normally `ListSubheader`.\n   */\n  subheader: PropTypes.node,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default List;","import getScrollbarSize from '@mui/utils/getScrollbarSize';\nexport default getScrollbarSize;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"actions\", \"autoFocus\", \"autoFocusItem\", \"children\", \"className\", \"disabledItemsFocusable\", \"disableListWrap\", \"onKeyDown\", \"variant\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport ownerDocument from '../utils/ownerDocument';\nimport List from '../List';\nimport getScrollbarSize from '../utils/getScrollbarSize';\nimport useForkRef from '../utils/useForkRef';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction nextItem(list, item, disableListWrap) {\n  if (list === item) {\n    return list.firstChild;\n  }\n  if (item && item.nextElementSibling) {\n    return item.nextElementSibling;\n  }\n  return disableListWrap ? null : list.firstChild;\n}\nfunction previousItem(list, item, disableListWrap) {\n  if (list === item) {\n    return disableListWrap ? list.firstChild : list.lastChild;\n  }\n  if (item && item.previousElementSibling) {\n    return item.previousElementSibling;\n  }\n  return disableListWrap ? null : list.lastChild;\n}\nfunction textCriteriaMatches(nextFocus, textCriteria) {\n  if (textCriteria === undefined) {\n    return true;\n  }\n  let text = nextFocus.innerText;\n  if (text === undefined) {\n    // jsdom doesn't support innerText\n    text = nextFocus.textContent;\n  }\n  text = text.trim().toLowerCase();\n  if (text.length === 0) {\n    return false;\n  }\n  if (textCriteria.repeating) {\n    return text[0] === textCriteria.keys[0];\n  }\n  return text.indexOf(textCriteria.keys.join('')) === 0;\n}\nfunction moveFocus(list, currentFocus, disableListWrap, disabledItemsFocusable, traversalFunction, textCriteria) {\n  let wrappedOnce = false;\n  let nextFocus = traversalFunction(list, currentFocus, currentFocus ? disableListWrap : false);\n  while (nextFocus) {\n    // Prevent infinite loop.\n    if (nextFocus === list.firstChild) {\n      if (wrappedOnce) {\n        return false;\n      }\n      wrappedOnce = true;\n    }\n\n    // Same logic as useAutocomplete.js\n    const nextFocusDisabled = disabledItemsFocusable ? false : nextFocus.disabled || nextFocus.getAttribute('aria-disabled') === 'true';\n    if (!nextFocus.hasAttribute('tabindex') || !textCriteriaMatches(nextFocus, textCriteria) || nextFocusDisabled) {\n      // Move to the next element.\n      nextFocus = traversalFunction(list, nextFocus, disableListWrap);\n    } else {\n      nextFocus.focus();\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * A permanently displayed menu following https://www.w3.org/WAI/ARIA/apg/patterns/menu-button/.\n * It's exposed to help customization of the [`Menu`](/material-ui/api/menu/) component if you\n * use it separately you need to move focus into the component manually. Once\n * the focus is placed inside the component it is fully keyboard accessible.\n */\nconst MenuList = /*#__PURE__*/React.forwardRef(function MenuList(props, ref) {\n  const {\n      // private\n      // eslint-disable-next-line react/prop-types\n      actions,\n      autoFocus = false,\n      autoFocusItem = false,\n      children,\n      className,\n      disabledItemsFocusable = false,\n      disableListWrap = false,\n      onKeyDown,\n      variant = 'selectedMenu'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const listRef = React.useRef(null);\n  const textCriteriaRef = React.useRef({\n    keys: [],\n    repeating: true,\n    previousKeyMatched: true,\n    lastTime: null\n  });\n  useEnhancedEffect(() => {\n    if (autoFocus) {\n      listRef.current.focus();\n    }\n  }, [autoFocus]);\n  React.useImperativeHandle(actions, () => ({\n    adjustStyleForScrollbar: (containerElement, {\n      direction\n    }) => {\n      // Let's ignore that piece of logic if users are already overriding the width\n      // of the menu.\n      const noExplicitWidth = !listRef.current.style.width;\n      if (containerElement.clientHeight < listRef.current.clientHeight && noExplicitWidth) {\n        const scrollbarSize = `${getScrollbarSize(ownerDocument(containerElement))}px`;\n        listRef.current.style[direction === 'rtl' ? 'paddingLeft' : 'paddingRight'] = scrollbarSize;\n        listRef.current.style.width = `calc(100% + ${scrollbarSize})`;\n      }\n      return listRef.current;\n    }\n  }), []);\n  const handleKeyDown = event => {\n    const list = listRef.current;\n    const key = event.key;\n    /**\n     * @type {Element} - will always be defined since we are in a keydown handler\n     * attached to an element. A keydown event is either dispatched to the activeElement\n     * or document.body or document.documentElement. Only the first case will\n     * trigger this specific handler.\n     */\n    const currentFocus = ownerDocument(list).activeElement;\n    if (key === 'ArrowDown') {\n      // Prevent scroll of the page\n      event.preventDefault();\n      moveFocus(list, currentFocus, disableListWrap, disabledItemsFocusable, nextItem);\n    } else if (key === 'ArrowUp') {\n      event.preventDefault();\n      moveFocus(list, currentFocus, disableListWrap, disabledItemsFocusable, previousItem);\n    } else if (key === 'Home') {\n      event.preventDefault();\n      moveFocus(list, null, disableListWrap, disabledItemsFocusable, nextItem);\n    } else if (key === 'End') {\n      event.preventDefault();\n      moveFocus(list, null, disableListWrap, disabledItemsFocusable, previousItem);\n    } else if (key.length === 1) {\n      const criteria = textCriteriaRef.current;\n      const lowerKey = key.toLowerCase();\n      const currTime = performance.now();\n      if (criteria.keys.length > 0) {\n        // Reset\n        if (currTime - criteria.lastTime > 500) {\n          criteria.keys = [];\n          criteria.repeating = true;\n          criteria.previousKeyMatched = true;\n        } else if (criteria.repeating && lowerKey !== criteria.keys[0]) {\n          criteria.repeating = false;\n        }\n      }\n      criteria.lastTime = currTime;\n      criteria.keys.push(lowerKey);\n      const keepFocusOnCurrent = currentFocus && !criteria.repeating && textCriteriaMatches(currentFocus, criteria);\n      if (criteria.previousKeyMatched && (keepFocusOnCurrent || moveFocus(list, currentFocus, false, disabledItemsFocusable, nextItem, criteria))) {\n        event.preventDefault();\n      } else {\n        criteria.previousKeyMatched = false;\n      }\n    }\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n  const handleRef = useForkRef(listRef, ref);\n\n  /**\n   * the index of the item should receive focus\n   * in a `variant=\"selectedMenu\"` it's the first `selected` item\n   * otherwise it's the very first item.\n   */\n  let activeItemIndex = -1;\n  // since we inject focus related props into children we have to do a lookahead\n  // to check if there is a `selected` item. We're looking for the last `selected`\n  // item and use the first valid item as a fallback\n  React.Children.forEach(children, (child, index) => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      if (activeItemIndex === index) {\n        activeItemIndex += 1;\n        if (activeItemIndex >= children.length) {\n          // there are no focusable items within the list.\n          activeItemIndex = -1;\n        }\n      }\n      return;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The Menu component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n    if (!child.props.disabled) {\n      if (variant === 'selectedMenu' && child.props.selected) {\n        activeItemIndex = index;\n      } else if (activeItemIndex === -1) {\n        activeItemIndex = index;\n      }\n    }\n    if (activeItemIndex === index && (child.props.disabled || child.props.muiSkipListHighlight || child.type.muiSkipListHighlight)) {\n      activeItemIndex += 1;\n      if (activeItemIndex >= children.length) {\n        // there are no focusable items within the list.\n        activeItemIndex = -1;\n      }\n    }\n  });\n  const items = React.Children.map(children, (child, index) => {\n    if (index === activeItemIndex) {\n      const newChildProps = {};\n      if (autoFocusItem) {\n        newChildProps.autoFocus = true;\n      }\n      if (child.props.tabIndex === undefined && variant === 'selectedMenu') {\n        newChildProps.tabIndex = 0;\n      }\n      return /*#__PURE__*/React.cloneElement(child, newChildProps);\n    }\n    return child;\n  });\n  return /*#__PURE__*/_jsx(List, _extends({\n    role: \"menu\",\n    ref: handleRef,\n    className: className,\n    onKeyDown: handleKeyDown,\n    tabIndex: autoFocus ? 0 : -1\n  }, other, {\n    children: items\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuList.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, will focus the `[role=\"menu\"]` container and move into tab order.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * If `true`, will focus the first menuitem if `variant=\"menu\"` or selected item\n   * if `variant=\"selectedMenu\"`.\n   * @default false\n   */\n  autoFocusItem: PropTypes.bool,\n  /**\n   * MenuList contents, normally `MenuItem`s.\n   */\n  children: PropTypes.node,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, will allow focus on disabled items.\n   * @default false\n   */\n  disabledItemsFocusable: PropTypes.bool,\n  /**\n   * If `true`, the menu items will not wrap focus.\n   * @default false\n   */\n  disableListWrap: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n  /**\n   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus\n   * and the vertical alignment relative to the anchor element.\n   * @default 'selectedMenu'\n   */\n  variant: PropTypes.oneOf(['menu', 'selectedMenu'])\n} : void 0;\nexport default MenuList;","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","// To do: remove `void`s\n// To do: remove `null` from output of our APIs, allow it as user APIs.\n\n/**\n * @typedef {(error?: Error | null | undefined, ...output: Array<any>) => void} Callback\n *   Callback.\n *\n * @typedef {(...input: Array<any>) => any} Middleware\n *   Ware.\n *\n * @typedef Pipeline\n *   Pipeline.\n * @property {Run} run\n *   Run the pipeline.\n * @property {Use} use\n *   Add middleware.\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n *\n *   Calls `done` on completion with either an error or the output of the\n *   last middleware.\n *\n *   > 👉 **Note**: as the length of input defines whether async functions get a\n *   > `next` function,\n *   > it’s recommended to keep `input` at one value normally.\n\n *\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n *   Pipeline.\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error | null | undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware` into a uniform interface.\n *\n * You can pass all input to the resulting function.\n * `callback` is then called with the output of `middleware`.\n *\n * If `middleware` accepts more arguments than the later given in input,\n * an extra `done` function is passed to it after that input,\n * which must be called by `middleware`.\n *\n * The first value in `input` is the main input value.\n * All other input values are the rest input values.\n * The values given to `callback` are the input values,\n * merged with every non-nullish output value.\n *\n * * if `middleware` throws an error,\n *   returns a promise that is rejected,\n *   or calls the given `done` function with an error,\n *   `callback` is called with that error\n * * if `middleware` returns a value or returns a promise that is resolved,\n *   that value is the main output value\n * * if `middleware` calls `done`,\n *   all non-nullish values except for the first one (the error) overwrite the\n *   output values\n *\n * @param {Middleware} middleware\n *   Function to wrap.\n * @param {Callback} callback\n *   Callback called with the output of `middleware`.\n * @returns {Run}\n *   Wrapped middleware.\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result && result.then && typeof result.then === 'function') {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   *\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getListItemTextUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemText', slot);\n}\nconst listItemTextClasses = generateUtilityClasses('MuiListItemText', ['root', 'multiline', 'dense', 'inset', 'primary', 'secondary']);\nexport default listItemTextClasses;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getMenuItemUtilityClass(slot) {\n  return generateUtilityClass('MuiMenuItem', slot);\n}\nconst menuItemClasses = generateUtilityClasses('MuiMenuItem', ['root', 'focusVisible', 'dense', 'disabled', 'divider', 'gutters', 'selected']);\nexport default menuItemClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"component\", \"dense\", \"divider\", \"disableGutters\", \"focusVisibleClassName\", \"role\", \"tabIndex\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport ListContext from '../List/ListContext';\nimport ButtonBase from '../ButtonBase';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport useForkRef from '../utils/useForkRef';\nimport { dividerClasses } from '../Divider';\nimport { listItemIconClasses } from '../ListItemIcon';\nimport { listItemTextClasses } from '../ListItemText';\nimport menuItemClasses, { getMenuItemUtilityClass } from './menuItemClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, ownerState.dense && styles.dense, ownerState.divider && styles.divider, !ownerState.disableGutters && styles.gutters];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    disabled,\n    dense,\n    divider,\n    disableGutters,\n    selected,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', dense && 'dense', disabled && 'disabled', !disableGutters && 'gutters', divider && 'divider', selected && 'selected']\n  };\n  const composedClasses = composeClasses(slots, getMenuItemUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst MenuItemRoot = styled(ButtonBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiMenuItem',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({}, theme.typography.body1, {\n  display: 'flex',\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n  position: 'relative',\n  textDecoration: 'none',\n  minHeight: 48,\n  paddingTop: 6,\n  paddingBottom: 6,\n  boxSizing: 'border-box',\n  whiteSpace: 'nowrap'\n}, !ownerState.disableGutters && {\n  paddingLeft: 16,\n  paddingRight: 16\n}, ownerState.divider && {\n  borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`,\n  backgroundClip: 'padding-box'\n}, {\n  '&:hover': {\n    textDecoration: 'none',\n    backgroundColor: (theme.vars || theme).palette.action.hover,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  },\n  [`&.${menuItemClasses.selected}`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    [`&.${menuItemClasses.focusVisible}`]: {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  },\n  [`&.${menuItemClasses.selected}:hover`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n    }\n  },\n  [`&.${menuItemClasses.focusVisible}`]: {\n    backgroundColor: (theme.vars || theme).palette.action.focus\n  },\n  [`&.${menuItemClasses.disabled}`]: {\n    opacity: (theme.vars || theme).palette.action.disabledOpacity\n  },\n  [`& + .${dividerClasses.root}`]: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  [`& + .${dividerClasses.inset}`]: {\n    marginLeft: 52\n  },\n  [`& .${listItemTextClasses.root}`]: {\n    marginTop: 0,\n    marginBottom: 0\n  },\n  [`& .${listItemTextClasses.inset}`]: {\n    paddingLeft: 36\n  },\n  [`& .${listItemIconClasses.root}`]: {\n    minWidth: 36\n  }\n}, !ownerState.dense && {\n  [theme.breakpoints.up('sm')]: {\n    minHeight: 'auto'\n  }\n}, ownerState.dense && _extends({\n  minHeight: 32,\n  // https://m2.material.io/components/menus#specs > Dense\n  paddingTop: 4,\n  paddingBottom: 4\n}, theme.typography.body2, {\n  [`& .${listItemIconClasses.root} svg`]: {\n    fontSize: '1.25rem'\n  }\n})));\nconst MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiMenuItem'\n  });\n  const {\n      autoFocus = false,\n      component = 'li',\n      dense = false,\n      divider = false,\n      disableGutters = false,\n      focusVisibleClassName,\n      role = 'menuitem',\n      tabIndex: tabIndexProp,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const context = React.useContext(ListContext);\n  const childContext = React.useMemo(() => ({\n    dense: dense || context.dense || false,\n    disableGutters\n  }), [context.dense, dense, disableGutters]);\n  const menuItemRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (autoFocus) {\n      if (menuItemRef.current) {\n        menuItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('MUI: Unable to set focus to a MenuItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n  const ownerState = _extends({}, props, {\n    dense: childContext.dense,\n    divider,\n    disableGutters\n  });\n  const classes = useUtilityClasses(props);\n  const handleRef = useForkRef(menuItemRef, ref);\n  let tabIndex;\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n  return /*#__PURE__*/_jsx(ListContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/_jsx(MenuItemRoot, _extends({\n      ref: handleRef,\n      role: role,\n      tabIndex: tabIndex,\n      component: component,\n      focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n      className: clsx(classes.root, className)\n    }, other, {\n      ownerState: ownerState,\n      classes: classes\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the list item is focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input is used.\n   * The prop defaults to the value inherited from the parent Menu component.\n   * @default false\n   */\n  dense: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * If `true`, a 1px light border is added to the bottom of the menu item.\n   * @default false\n   */\n  divider: PropTypes.bool,\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * @ignore\n   */\n  role: PropTypes /* @typescript-to-proptypes-ignore */.string,\n  /**\n   * If `true`, the component is selected.\n   * @default false\n   */\n  selected: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * @default 0\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default MenuItem;","var parse = require('inline-style-parser');\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;\nmodule.exports.default = StyleToObject; // ESM support\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","'use client';\n\nimport * as React from 'react';\n\n/**\n * @ignore - internal component.\n */\nconst ListContext = /*#__PURE__*/React.createContext({});\nif (process.env.NODE_ENV !== 'production') {\n  ListContext.displayName = 'ListContext';\n}\nexport default ListContext;","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","// A change of the browser zoom change the scrollbar size.\n// Credit https://github.com/twbs/bootstrap/blob/488fd8afc535ca3a6ad4dc581f5e89217b6a36ac/js/src/util/scrollbar.js#L14-L18\nexport default function getScrollbarSize(doc) {\n  // https://developer.mozilla.org/en-US/docs/Web/API/Window/innerWidth#usage_notes\n  const documentWidth = doc.documentElement.clientWidth;\n  return Math.abs(window.innerWidth - documentWidth);\n}","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string | false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const character = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  if (\n    // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n    // yield `null`.\n    character.charCodeAt(character.length - 1) === 59 /* `;` */ &&\n    value !== 'semi'\n  ) {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return character === characterReference ? false : character\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Position | PositionLike | Point | PointLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason` at `place` from `origin`.\n   *\n   * When an error is passed in as `reason`, the `stack` is copied.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   *\n   *   > 👉 **Note**: you should use markdown.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // To do: next major: expose `undefined` everywhere instead of `null`.\n  constructor(reason, place, origin) {\n    /** @type {[string | null, string | null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          // To do: next major: deep clone.\n          // @ts-expect-error: looks like a position.\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        // @ts-expect-error: looks like a position.\n        // To do: next major: deep clone.\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        // To do: next major: deep clone.\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`.\n    /**\n     * Serialized positional info of error.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(place) || '1:1'\n\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = typeof reason === 'object' ? reason.message : reason\n\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack = ''\n\n    if (typeof reason === 'object' && reason.stack) {\n      this.stack = reason.stack\n    }\n\n    /**\n     * Reason for message.\n     *\n     * > 👉 **Note**: you should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * State of problem.\n     *\n     * * `true` — marks associated file as no longer processable (error)\n     * * `false` — necessitates a (potential) change (warning)\n     * * `null | undefined` — for things that might not need changing (info)\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | null}\n     */\n    this.line = position.start.line\n\n    /**\n     * Starting column of error.\n     *\n     * @type {number | null}\n     */\n    this.column = position.start.column\n\n    /**\n     * Full unist position.\n     *\n     * @type {Position | null}\n     */\n    this.position = position\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | null}\n     */\n    this.source = parts[0]\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | null}\n     */\n    this.ruleId = parts[1]\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | null}\n     */\n    this.file\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | null}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | null}\n     */\n    this.expected\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | null}\n     */\n    this.url\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | null}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | undefined} [ext]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * Check if `fileUrlOrPath` looks like a URL.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileUrlOrPath) {\n  return (\n    fileUrlOrPath !== null &&\n    typeof fileUrlOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileUrlOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileUrlOrPath.origin\n  )\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string | URL} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n\nexport {isUrl} from './minurl.shared.js'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n */\n\n/**\n * @typedef {Record<string, unknown> & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef {'ascii' | 'utf8' | 'utf-8' | 'utf16le' | 'ucs2' | 'ucs-2' | 'base64' | 'base64url' | 'latin1' | 'binary' | 'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *\n *   This is a copy of the types from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Options | URL | Value | VFile} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n *   Set multiple values.\n * @property {Value | null | undefined} [value]\n *   Set `value`.\n * @property {string | null | undefined} [cwd]\n *   Set `cwd`.\n * @property {Array<string> | null | undefined} [history]\n *   Set `history`.\n * @property {URL | string | null | undefined} [path]\n *   Set `path`.\n * @property {string | null | undefined} [basename]\n *   Set `basename`.\n * @property {string | null | undefined} [stem]\n *   Set `stem`.\n * @property {string | null | undefined} [extname]\n *   Set `extname`.\n * @property {string | null | undefined} [dirname]\n *   Set `dirname`.\n * @property {Data | null | undefined} [data]\n *   Set `data`.\n *\n * @typedef Map\n *   Raw source map.\n *\n *   See:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n *   Which version of the source map spec this map is following.\n * @property {Array<string>} sources\n *   An array of URLs to the original source files.\n * @property {Array<string>} names\n *   An array of identifiers which can be referenced by individual mappings.\n * @property {string | undefined} [sourceRoot]\n *   The URL root from which all sources are relative.\n * @property {Array<string> | undefined} [sourcesContent]\n *   An array of contents of the original source files.\n * @property {string} mappings\n *   A string of base64 VLQs which contain the actual mappings.\n * @property {string} file\n *   The generated file this source map is associated with.\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration.\n *\n *   A bunch of keys that will be shallow copied over to the new file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n *   Configuration for reporters.\n */\n\n/**\n * @template {ReporterSettings} Settings\n *   Options type.\n * @callback Reporter\n *   Type for a reporter.\n * @param {Array<VFile>} files\n *   Files to report.\n * @param {Settings} options\n *   Configuration.\n * @returns {string}\n *   Report.\n */\n\nimport bufferLike from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n *\n * @type {Array<'basename' | 'dirname' | 'extname' | 'history' | 'path' | 'stem'>}\n */\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Buffer` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      options = value\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of filepaths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        prop in options &&\n        options[prop] !== undefined &&\n        options[prop] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) {\n        // @ts-expect-error: fine to set other things.\n        this[prop] = options[prop]\n      }\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {string | URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Buffer`\n   *   (default: `'utf8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding || undefined)\n  }\n\n  /**\n   * Create a warning message associated with the file.\n   *\n   * Its `fatal` is set to `false` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Create an info message associated with the file.\n   *\n   * Its `fatal` is set to `null` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Create a fatal error associated with the file.\n   *\n   * Its `fatal` is set to `true` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * > 👉 **Note**: a fatal error means that a file is no longer processable.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Message.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {void}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is a buffer.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Buffer}\n *   Whether `value` is a Node.js buffer.\n */\nfunction buffer(value) {\n  return bufferLike(value)\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s.\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML.\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} value\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Node}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {void}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {Array<unknown>} */\n  let parameters\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n  remove = remove > 0 ? remove : 0\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    // @ts-expect-error Hush, it’s fine.\n    list.splice(...parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove)\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0)\n      // @ts-expect-error Hush, it’s fine.\n      list.splice(...parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Handles} Handles\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {Array<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {})\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = []\n        const value = right[code]\n        constructs(\n          // @ts-expect-error Looks like a list.\n          left[code],\n          Array.isArray(value) ? value : value ? [value] : []\n        )\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n * @param {Array<unknown>} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {Array<unknown>} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {Array<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   A single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {keyof Handles} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\n\n/**\n * Regular expression that matches a unicode punctuation character.\n */\nexport const unicodePunctuationRegex =\n  /[!-\\/:-@\\[-`\\{-~\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061D-\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1B7D\\u1B7E\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52-\\u2E5D\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/)\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/)\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownSpace} from 'micromark-util-character'\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n    return ok(code)\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n  let previous\n  return contentStart\n\n  /** @type {State} */\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n\n  /** @type {State} */\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n    if (previous) {\n      previous.next = token\n    }\n    previous = token\n    return data(code)\n  }\n\n  /** @type {State} */\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    }\n\n    // Data.\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\n/**\n * @typedef {[Construct, ContainerState]} StackItem\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\nexport const document = {\n  tokenize: initializeDocument\n}\n\n/** @type {Construct} */\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext | undefined} */\n  let childFlow\n  /** @type {Token | undefined} */\n  let childToken\n  /** @type {number} */\n  let lineStartOffset\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    }\n\n    // Done.\n    return checkNewContainers(code)\n  }\n\n  /** @type {State} */\n  function documentContinue(code) {\n    continued++\n\n    // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n      if (childFlow) {\n        closeFlow()\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the flow chunk.\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n      exitContainers(continued)\n\n      // Fix positions.\n      let index = indexBeforeExits\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n    return start(code)\n  }\n\n  /** @type {State} */\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      }\n\n      // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      }\n\n      // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n      // To do: next major: remove `_gfmTableDynamicInterruptHack` (no longer\n      // needed in micromark-extension-gfm-table@1.0.6).\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    }\n\n    // Check if there is a new container.\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n\n  /** @type {State} */\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n\n  /** @type {State} */\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n\n  /** @type {State} */\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState])\n    // Try another.\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n\n  /** @type {State} */\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow'))\n      // Get ready for the next line.\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n    effects.consume(code)\n    return flowContinue\n  }\n\n  /**\n   * @param {Token} token\n   * @param {boolean | undefined} [eof]\n   * @returns {void}\n   */\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream)\n\n    // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset &&\n          // …and either is not ended yet…\n          (!childFlow.events[index][1].end ||\n            // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean | undefined} */\n      let seen\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the previous chunk (the one before the lazy line).\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n          seen = true\n        }\n      }\n      exitContainers(continued)\n\n      // Fix positions.\n      index = indexBeforeExits\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n    }\n  }\n\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n  function exitContainers(size) {\n    let index = stack.length\n\n    // Exit open containers.\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n    stack.length = size\n  }\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContainer(effects, ok, nok) {\n  // Always populated by defaults.\n\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of blank line.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *     ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, after, 'linePrefix')(code)\n      : after(code)\n  }\n\n  /**\n   * At eof/eol, after optional whitespace.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *       ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n */\n\nimport {splice} from 'micromark-util-chunked'\n/**\n * Tokenize subcontent.\n *\n * @param {Array<Event>} events\n *   List of events.\n * @returns {boolean}\n *   Whether subtokens were found.\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n  let event\n  /** @type {number | undefined} */\n  let lineIndex\n  /** @type {number} */\n  let otherIndex\n  /** @type {Event} */\n  let otherEvent\n  /** @type {Array<Event>} */\n  let parameters\n  /** @type {Array<Event>} */\n  let subevents\n  /** @type {boolean | undefined} */\n  let more\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n    event = events[index]\n\n    // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    }\n\n    // Enter.\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    }\n    // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start)\n\n        // Switch container exit w/ line endings.\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n  return !more\n}\n\n/**\n * Tokenize embedded tokens.\n *\n * @param {Array<Event>} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {Array<number>} */\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {Array<[number, number]>} */\n  const jumps = []\n  /** @type {Record<string, number>} */\n  const gaps = {}\n  /** @type {Array<Chunk>} */\n  let stream\n  /** @type {Token | undefined} */\n  let previous\n  let index = -1\n  /** @type {Token | undefined} */\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start]\n\n  // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n    startPositions.push(startPosition)\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n      if (!current.next) {\n        stream.push(null)\n      }\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n      tokenizer.write(stream)\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    }\n\n    // Unravel the next token.\n    previous = current\n    current = current.next\n  }\n\n  // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n  current = token\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start)\n      // Help GC.\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = []\n\n  // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  }\n\n  // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n  index = breaks.length\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n  index = -1\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n\n/** @type {Construct} */\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token | undefined} */\n  let previous\n  return chunkStart\n\n  /**\n   * Before a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkStart(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return chunkInside(code)\n  }\n\n  /**\n   * In a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkInside(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    // To do: in `markdown-rs`, each line is parsed on its own, and everything\n    // is stitched together resolving.\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    }\n\n    // Data.\n    effects.consume(code)\n    return chunkInside\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return chunkInside\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    // Always populated by defaults.\n\n    const tail = self.events[self.events.length - 1]\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding,\n    // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n\n  /** @type {State} */\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n\n  /** @type {State} */\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n\n/**\n * @param {'string' | 'text'} field\n * @returns {InitialConstruct}\n */\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Initializer}\n   */\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n\n    /** @type {State} */\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n\n    /** @type {State} */\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n\n    /** @type {State} */\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      }\n\n      // Data.\n      effects.consume(code)\n      return data\n    }\n\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n      const list = constructs[code]\n      let index = -1\n      if (list) {\n        // Always populated by defaults.\n\n        while (++index < list.length) {\n          const item = list[index]\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n      return false\n    }\n  }\n}\n\n/**\n * @param {Resolver | undefined} [extraResolver]\n * @returns {Resolver}\n */\nfunction createResolver(extraResolver) {\n  return resolveAllText\n\n  /** @type {Resolver} */\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number | undefined} */\n    let enter\n\n    // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n        enter = undefined\n      }\n    }\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean | undefined} */\n      let tabs\n      while (index--) {\n        const chunk = chunks[index]\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n          if (bufferIndex) break\n          bufferIndex = -1\n        }\n        // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n      eventIndex++\n    }\n  }\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {Array<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenType} TokenType\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * @callback Restore\n * @returns {void}\n *\n * @typedef Info\n * @property {Restore} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_bufferIndex' | '_index'> | undefined} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n  let chunks = []\n  /** @type {Array<Token>} */\n  let stack = []\n  /** @type {boolean | undefined} */\n  let consumed = true\n\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n\n  /**\n   * The state function.\n   *\n   * @type {State | void}\n   */\n  let state = initialize.tokenize.call(context, effects)\n\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n  let expectedCode\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n  return context\n\n  /** @type {TokenizeContext['write']} */\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main()\n\n    // Exit if we’re not done, resolve might change stuff.\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n    addResult(initialize, 0)\n\n    // Otherwise, resolve, and exit.\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  }\n\n  //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n\n  /** @type {TokenizeContext['sliceStream']} */\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n\n  /** @type {TokenizeContext['now']} */\n  function now() {\n    // This is a hot path, so we clone manually instead of `Object.assign({}, point)`\n    const {line, column, offset, _index, _bufferIndex} = point\n    return {\n      line,\n      column,\n      offset,\n      _index,\n      _bufferIndex\n    }\n  }\n\n  /** @type {TokenizeContext['defineSkip']} */\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  }\n\n  //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index]\n\n      // If we’re in a buffer chunk, loop through it.\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n\n  /** @type {Effects['consume']} */\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    }\n\n    // Not in a string chunk.\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++\n\n      // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    }\n\n    // Expose the previous character.\n    context.previous = code\n\n    // Mark as consumed.\n    consumed = true\n  }\n\n  /** @type {Effects['enter']} */\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n\n  /** @type {Effects['exit']} */\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {{interrupt?: boolean | undefined} | undefined} [fields]\n   */\n  function constructFactory(onreturn, fields) {\n    return hook\n\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Array<Construct> | Construct | ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State | undefined} [bogusState]\n     * @returns {State}\n     */\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n      let constructIndex\n      /** @type {Construct} */\n      let currentConstruct\n      /** @type {Info} */\n      let info\n      return Array.isArray(constructs) /* c8 ignore next 1 */\n        ? handleListOfConstructs(constructs)\n        : 'tokenize' in constructs\n        ? // @ts-expect-error Looks like a construct.\n          handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n      function handleMapOfConstructs(map) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n        if (list.length === 0) {\n          return bogusState\n        }\n        return handleConstruct(list[constructIndex])\n      }\n\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n      function handleConstruct(construct) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          // Always populated by defaults.\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n\n      /** @type {State} */\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n\n      /** @type {State} */\n      function nok(code) {\n        consumed = true\n        info.restore()\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n        return bogusState\n      }\n    }\n  }\n\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'end' | 'start'>} token\n * @returns {Array<Chunk>}\n */\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n  let view\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n    if (startBufferIndex > -1) {\n      const head = view[0]\n      if (typeof head === 'string') {\n        view[0] = head.slice(startBufferIndex)\n      } else {\n        view.shift()\n      }\n    }\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n  return view\n}\n\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean | undefined} [expandTabs=false]\n * @returns {string}\n */\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {boolean | undefined} */\n  let atTab\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n    let value\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n        case -4: {\n          value = '\\n'\n          break\n        }\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n    atTab = chunk === -2\n    result.push(value)\n  }\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of thematic break.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('thematicBreak')\n    // To do: parse indent like `markdown-rs`.\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at marker.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    marker = code\n    return atBreak(code)\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n    if (size >= 3 && (code === null || markdownLineEnding(code))) {\n      effects.exit('thematicBreak')\n      return ok(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n    effects.exit('thematicBreakSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, atBreak, 'whitespace')(code)\n      : atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/** @type {Construct} */\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n\n/** @type {Construct} */\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n\n/** @type {Construct} */\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n\n// To do: `markdown-rs` parses list items on their own and later stitches them\n// together.\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * @type {State}\n   **/\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine,\n      // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n\n  /** @type {State} */\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine\n\n    // We have a blank line.\n    // Still, try to consume at most the items size.\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n\n  /** @type {State} */\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n\n  /** @type {State} */\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true\n    // As we’re closing flow, we’re no longer interrupting.\n    self.interrupt = undefined\n    // Always populated by defaults.\n\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n\n/**\n * @type {Exiter}\n * @this {TokenizeContext}\n */\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n\n  // Always populated by defaults.\n\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of block quote.\n   *\n   * ```markdown\n   * > | > a\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `>`, before optional whitespace.\n   *\n   * ```markdown\n   * > | > a\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n\n/**\n * Start of block quote continuation.\n *\n * ```markdown\n *   | > a\n * > | > b\n *     ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  const self = this\n  return contStart\n\n  /**\n   * Start of block quote continuation.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contStart(code) {\n    if (markdownSpace(code)) {\n      // Always populated by defaults.\n\n      return factorySpace(\n        effects,\n        contBefore,\n        'linePrefix',\n        self.parser.constructs.disable.null.includes('codeIndented')\n          ? undefined\n          : 4\n      )(code)\n    }\n    return contBefore(code)\n  }\n\n  /**\n   * At `>`, after optional whitespace.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contBefore(code) {\n    return effects.attempt(blockQuote, ok, nok)(code)\n  }\n}\n\n/** @type {Exiter} */\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n/**\n * Parse destinations.\n *\n * ###### Examples\n *\n * ```markdown\n * <a>\n * <a\\>b>\n * <a b>\n * <a)>\n * a\n * a\\)b\n * a(b)c\n * a(b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type for whole (`<a>` or `b`).\n * @param {TokenType} literalType\n *   Type when enclosed (`<a>`).\n * @param {TokenType} literalMarkerType\n *   Type for enclosing (`<` and `>`).\n * @param {TokenType} rawType\n *   Type when not enclosed (`b`).\n * @param {TokenType} stringType\n *   Type for the value (`a` or `b`).\n * @param {number | undefined} [max=Infinity]\n *   Depth of nested parens (inclusive).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n\n  /**\n   * Start of destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *     ^\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return enclosedBefore\n    }\n\n    // ASCII control, space, closing paren.\n    if (code === null || code === 32 || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return raw(code)\n  }\n\n  /**\n   * After `<`, at an enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return enclosed(code)\n  }\n\n  /**\n   * In enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return enclosedBefore(code)\n    }\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? enclosedEscape : enclosed\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | <a\\*a>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return enclosed\n    }\n    return enclosed(code)\n  }\n\n  /**\n   * In raw destination.\n   *\n   * ```markdown\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function raw(code) {\n    if (\n      !balance &&\n      (code === null || code === 41 || markdownLineEndingOrSpace(code))\n    ) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n    if (balance < limit && code === 40) {\n      effects.consume(code)\n      balance++\n      return raw\n    }\n    if (code === 41) {\n      effects.consume(code)\n      balance--\n      return raw\n    }\n\n    // ASCII control (but *not* `\\0`) and space and `(`.\n    // Note: in `markdown-rs`, `\\0` exists in codes, in `micromark-js` it\n    // doesn’t.\n    if (code === null || code === 32 || code === 40 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? rawEscape : raw\n  }\n\n  /**\n   * After `\\`, at special character.\n   *\n   * ```markdown\n   * > | a\\*a\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function rawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return raw\n    }\n    return raw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/**\n * Parse labels.\n *\n * > 👉 **Note**: labels in markdown are capped at 999 characters in the string.\n *\n * ###### Examples\n *\n * ```markdown\n * [a]\n * [a\n * b]\n * [a\\]b]\n * ```\n *\n * @this {TokenizeContext}\n *   Tokenize context.\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole label (`[a]`).\n * @param {TokenType} markerType\n *   Type for the markers (`[` and `]`).\n * @param {TokenType} stringType\n *   Type for the identifier (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n  let seen\n  return start\n\n  /**\n   * Start of label.\n   *\n   * ```markdown\n   * > | [a]\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n\n  /**\n   * In label, at something, before something else.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (\n      size > 999 ||\n      code === null ||\n      code === 91 ||\n      (code === 93 && !seen) ||\n      // To do: remove in the future once we’ve switched from\n      // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n      // which doesn’t need this.\n      // Hidden footnotes hook.\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    // To do: indent? Link chunks and EOLs together?\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return labelInside(code)\n  }\n\n  /**\n   * In label, in text.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    if (!seen) seen = !markdownSpace(code)\n    return code === 92 ? labelEscape : labelInside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | [a\\*a]\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return labelInside\n    }\n    return labelInside(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/**\n * Parse titles.\n *\n * ###### Examples\n *\n * ```markdown\n * \"a\"\n * 'b'\n * (c)\n * \"a\n * b\"\n * 'a\n *     b'\n * (a\\)b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole title (`\"a\"`, `'b'`, `(c)`).\n * @param {TokenType} markerType\n *   Type for the markers (`\"`, `'`, `(`, and `)`).\n * @param {TokenType} stringType\n *   Type for the value (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of title.\n   *\n   * ```markdown\n   * > | \"a\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      effects.enter(type)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      marker = code === 40 ? 41 : code\n      return begin\n    }\n    return nok(code)\n  }\n\n  /**\n   * After opening marker.\n   *\n   * This is also used at the closing marker.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function begin(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    return atBreak(code)\n  }\n\n  /**\n   * At something, before something else.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return begin(marker)\n    }\n    if (code === null) {\n      return nok(code)\n    }\n\n    // Note: blank lines can’t exist in content.\n    if (markdownLineEnding(code)) {\n      // To do: use `space_or_tab_eol_with_options`, connect.\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atBreak, 'linePrefix')\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return inside(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return code === 92 ? escape : inside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | \"a\\*b\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function escape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return inside\n    }\n    return inside(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   line endings or spaces in markdown are often optional, in which case this\n *     factory can be used and `ok` will be switched to whether spaces were found\n *     or not\n * *   one line ending or space can be detected with\n *     `markdownLineEndingOrSpace(code)` right before using `factoryWhitespace`\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @returns\n *   Start state.\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n    return ok(code)\n  }\n}\n","/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value\n      // Collapse markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ')\n      // Trim.\n      .replace(/^ | $/g, '')\n      // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n\n/** @type {Construct} */\nconst titleBefore = {\n  tokenize: tokenizeTitleBefore,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n  let identifier\n  return start\n\n  /**\n   * At start of a definition.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Do not interrupt paragraphs (but do follow definitions).\n    // To do: do `interrupt` the way `markdown-rs` does.\n    // To do: parse whitespace the way `markdown-rs` does.\n    effects.enter('definition')\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at `[`.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    // To do: parse whitespace the way `markdown-rs` does.\n\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      // Note: we don’t need to reset the way `markdown-rs` does.\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n\n  /**\n   * After label.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker')\n      return markerAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After marker.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function markerAfter(code) {\n    // Note: whitespace is optional.\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, destinationBefore)(code)\n      : destinationBefore(code)\n  }\n\n  /**\n   * Before destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationBefore(code) {\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      // Note: we don’t need to reset the way `markdown-rs` does.\n      nok,\n      'definitionDestination',\n      'definitionDestinationLiteral',\n      'definitionDestinationLiteralMarker',\n      'definitionDestinationRaw',\n      'definitionDestinationString'\n    )(code)\n  }\n\n  /**\n   * After destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationAfter(code) {\n    return effects.attempt(titleBefore, after, after)(code)\n  }\n\n  /**\n   * After definition.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, afterWhitespace, 'whitespace')(code)\n      : afterWhitespace(code)\n  }\n\n  /**\n   * After definition, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterWhitespace(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      // Note: we don’t care about uniqueness.\n      // It’s likely that that doesn’t happen very frequently.\n      // It is more likely that it wastes precious time.\n      self.parser.defined.push(identifier)\n\n      // To do: `markdown-rs` interrupt.\n      // // You’d be interrupting.\n      // tokenizer.interrupt = true\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTitleBefore(effects, ok, nok) {\n  return titleBefore\n\n  /**\n   * After destination, at whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleBefore(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, beforeMarker)(code)\n      : nok(code)\n  }\n\n  /**\n   * At title.\n   *\n   * ```markdown\n   *   | [a]: b\n   * > | \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeMarker(code) {\n    return factoryTitle(\n      effects,\n      titleAfter,\n      nok,\n      'definitionTitle',\n      'definitionTitleMarker',\n      'definitionTitleString'\n    )(code)\n  }\n\n  /**\n   * After title.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfter(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, titleAfterOptionalWhitespace, 'whitespace')(code)\n      : titleAfterOptionalWhitespace(code)\n  }\n\n  /**\n   * After title, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfterOptionalWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n\n/** @type {Construct} */\nconst furtherStart = {\n  tokenize: tokenizeFurtherStart,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of code (indented).\n   *\n   * > **Parsing note**: it is not needed to check if this first line is a\n   * > filled line (that it has a non-whitespace character), because blank lines\n   * > are parsed already, so we never run into that.\n   *\n   * ```markdown\n   * > |     aaa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: manually check if interrupting like `markdown-rs`.\n\n    effects.enter('codeIndented')\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? atBreak(code)\n      : nok(code)\n  }\n\n  /**\n   * At a break.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === null) {\n      return after(code)\n    }\n    if (markdownLineEnding(code)) {\n      return effects.attempt(furtherStart, atBreak, after)(code)\n    }\n    effects.enter('codeFlowValue')\n    return inside(code)\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return inside\n  }\n\n  /** @type {State} */\n  function after(code) {\n    effects.exit('codeIndented')\n    // To do: allow interrupting like `markdown-rs`.\n    // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeFurtherStart(effects, ok, nok) {\n  const self = this\n  return furtherStart\n\n  /**\n   * At eol, trying to parse another indent.\n   *\n   * ```markdown\n   * > |     aaa\n   *            ^\n   *   |     bbb\n   * ```\n   *\n   * @type {State}\n   */\n  function furtherStart(code) {\n    // To do: improve `lazy` / `pierce` handling.\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return furtherStart\n    }\n\n    // To do: the code here in `micromark-js` is a bit different from\n    // `markdown-rs` because there it can attempt spaces.\n    // We can’t yet.\n    //\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? furtherStart(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n\n/** @type {Resolver} */\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n  let content\n  /** @type {Token} */\n  let text\n\n  // Prefix whitespace, part of the opening.\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  }\n\n  // Suffix whitespace, part of the closing.\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  let size = 0\n  return start\n\n  /**\n   * Start of a heading (atx).\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    effects.enter('atxHeading')\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at `#`.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('atxHeadingSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return sequenceOpen\n    }\n\n    // Always at least one `#`.\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return atBreak(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ## aa\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequenceFurther(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      // To do: interrupt like `markdown-rs`.\n      // // Feel free to interrupt.\n      // tokenizer.interrupt = false\n      return ok(code)\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    // To do: generate `data` tokens, add the `text` token later.\n    // Needs edit map, see: `markdown.rs`.\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n\n  /**\n   * In further sequence (after whitespace).\n   *\n   * Could be normal “visible” hashes in the heading or a final sequence.\n   *\n   * ```markdown\n   * > | ## aa ##\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceFurther(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequenceFurther\n    }\n    effects.exit('atxHeadingSequence')\n    return atBreak(code)\n  }\n\n  /**\n   * In text.\n   *\n   * ```markdown\n   * > | ## aa\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n\n/** @type {Resolver} */\nfunction resolveToSetextUnderline(events, context) {\n  // To do: resolve like `markdown-rs`.\n  let index = events.length\n  /** @type {number | undefined} */\n  let content\n  /** @type {number | undefined} */\n  let text\n  /** @type {number | undefined} */\n  let definition\n\n  // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    }\n    // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n\n  // Change the paragraph to setext heading text.\n  events[text][1].type = 'setextHeadingText'\n\n  // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  }\n\n  // Add the heading exit at the end.\n  events.push(['exit', heading, context])\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * At start of heading (setext) underline.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length\n    /** @type {boolean | undefined} */\n    let paragraph\n    // Find an opening.\n    while (index--) {\n      // Skip enter/exit of line ending, line prefix, and content.\n      // We can now either have a definition or a paragraph.\n      if (\n        self.events[index][1].type !== 'lineEnding' &&\n        self.events[index][1].type !== 'linePrefix' &&\n        self.events[index][1].type !== 'content'\n      ) {\n        paragraph = self.events[index][1].type === 'paragraph'\n        break\n      }\n    }\n\n    // To do: handle lazy/pierce like `markdown-rs`.\n    // To do: parse indent like `markdown-rs`.\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      marker = code\n      return before(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * After optional whitespace, at `-` or `=`.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('setextHeadingLineSequence')\n    return inside(code)\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return inside\n    }\n    effects.exit('setextHeadingLineSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, after, 'lineSuffix')(code)\n      : after(code)\n  }\n\n  /**\n   * After sequence, after optional whitespace.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML “block” tag names.\n *\n * The list, when parsing HTML (flow), results in more relaxed rules (condition\n * 6).\n * Because they are known blocks, the HTML-like syntax doesn’t have to be\n * strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `search` was added in `CommonMark@0.31`.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML “raw” tag names.\n *\n * The list, when parsing HTML (flow), results in HTML that can include lines\n * without exiting, until a closing tag also in this list is found (condition\n * 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n\n/** @type {Construct} */\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n\n/** @type {Construct} */\nconst blankLineBefore = {\n  tokenize: tokenizeBlankLineBefore,\n  partial: true\n}\nconst nonLazyContinuationStart = {\n  tokenize: tokenizeNonLazyContinuationStart,\n  partial: true\n}\n\n/** @type {Resolver} */\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start\n    // Add the prefix start to the HTML line token.\n    events[index + 1][1].start = events[index - 2][1].start\n    // Remove the line prefix.\n    events.splice(index - 2, 2)\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n  let marker\n  /** @type {boolean} */\n  let closingTag\n  /** @type {string} */\n  let buffer\n  /** @type {number} */\n  let index\n  /** @type {Code} */\n  let markerB\n  return start\n\n  /**\n   * Start of HTML (flow).\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    return before(code)\n  }\n\n  /**\n   * At `<`, after optional whitespace.\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | <x />\n   *      ^\n   * > | <!doctype>\n   *      ^\n   * > | <!--xxx-->\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n    if (code === 47) {\n      effects.consume(code)\n      closingTag = true\n      return tagCloseStart\n    }\n    if (code === 63) {\n      effects.consume(code)\n      marker = 3\n      // To do:\n      // tokenizer.concrete = true\n      // To do: use `markdown-rs` style interrupt.\n      // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *       ^\n   * > | <!--xxx-->\n   *       ^\n   * > | <![CDATA[>&<]]>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      marker = 2\n      return commentOpenInside\n    }\n    if (code === 91) {\n      effects.consume(code)\n      marker = 5\n      index = 0\n      return cdataOpenInside\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      marker = 4\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!-`, inside a comment, at another `-`.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<![`, inside CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *        ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = 'CDATA['\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code)\n      if (index === value.length) {\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok : continuation\n      }\n      return cdataOpenInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | </x>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * In tag name.\n   *\n   * ```markdown\n   * > | <ab>\n   *      ^^\n   * > | </ab>\n   *       ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      const slash = code === 47\n      const name = buffer.toLowerCase()\n      if (!slash && !closingTag && htmlRawNames.includes(name)) {\n        marker = 1\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        marker = 6\n        if (slash) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n      marker = 7\n      // Do not support complete HTML when interrupting.\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : closingTag\n        ? completeClosingTagAfter(code)\n        : completeAttributeNameBefore(code)\n    }\n\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * After closing slash of a basic tag name.\n   *\n   * ```markdown\n   * > | <div/>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuation\n    }\n    return nok(code)\n  }\n\n  /**\n   * After closing slash of a complete tag name.\n   *\n   * ```markdown\n   * > | <x/>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n    return completeEnd(code)\n  }\n\n  /**\n   * At an attribute name.\n   *\n   * At first, this state is used after a complete tag name, after whitespace,\n   * where it expects optional attributes or the end of the tag.\n   * It is also reused after attributes, when expecting more optional\n   * attributes.\n   *\n   * ```markdown\n   * > | <a />\n   *        ^\n   * > | <a :b>\n   *        ^\n   * > | <a _b>\n   *        ^\n   * > | <a b>\n   *        ^\n   * > | <a >\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    // ASCII alphanumerical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n    return completeEnd(code)\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | <a :b>\n   *         ^\n   * > | <a _b>\n   *         ^\n   * > | <a b>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeName(code) {\n    // ASCII alphanumerical and `-`, `.`, `:`, and `_`.\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n    return completeAttributeNameAfter(code)\n  }\n\n  /**\n   * After attribute name, at an optional initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b>\n   *         ^\n   * > | <a b=c>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n    return completeAttributeNameBefore(code)\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * > | <a b=\"c\">\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      markerB = code\n      return completeAttributeValueQuoted\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n    return completeAttributeValueUnquoted(code)\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *           ^\n   * > | <a b='c'>\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuoted(code) {\n    if (code === markerB) {\n      effects.consume(code)\n      markerB = null\n      return completeAttributeValueQuotedAfter\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 47 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the\n   * end of the tag.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In certain circumstances of a complete tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `>` in a complete tag.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return continuation(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * In continuation of any HTML kind.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuation(code) {\n    if (code === 45 && marker === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n    if (code === 60 && marker === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n    if (code === 62 && marker === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n    if (code === 63 && marker === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    if (code === 93 && marker === 5) {\n      effects.consume(code)\n      return continuationCdataInside\n    }\n    if (markdownLineEnding(code) && (marker === 6 || marker === 7)) {\n      effects.exit('htmlFlowData')\n      return effects.check(\n        blankLineBefore,\n        continuationAfter,\n        continuationStart\n      )(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return continuationStart(code)\n    }\n    effects.consume(code)\n    return continuation\n  }\n\n  /**\n   * In continuation, at eol.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStart(code) {\n    return effects.check(\n      nonLazyContinuationStart,\n      continuationStartNonLazy,\n      continuationAfter\n    )(code)\n  }\n\n  /**\n   * In continuation, at eol, before non-lazy content.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStartNonLazy(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return continuationBefore\n  }\n\n  /**\n   * In continuation, before non-lazy content.\n   *\n   * ```markdown\n   *   | <x>\n   * > | asd\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return continuationStart(code)\n    }\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n\n  /**\n   * In comment continuation, after one `-`, expecting another.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In raw continuation, after `<`, at `/`.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In raw continuation, after `</`, in a raw tag name.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                             ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawEndTag(code) {\n    if (code === 62) {\n      const name = buffer.toLowerCase()\n      if (htmlRawNames.includes(name)) {\n        effects.consume(code)\n        return continuationClose\n      }\n      return continuation(code)\n    }\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In cdata continuation, after `]`, expecting `]>`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *                  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCdataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In declaration or instruction continuation, at `>`.\n   *\n   * ```markdown\n   * > | <!-->\n   *         ^\n   * > | <?>\n   *       ^\n   * > | <!q>\n   *        ^\n   * > | <!--ab-->\n   *             ^\n   * > | <![CDATA[>&<]]>\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    // More dashes.\n    if (code === 45 && marker === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In closed continuation: everything we get until the eol/eof is part of it.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return continuationAfter(code)\n    }\n    effects.consume(code)\n    return continuationClose\n  }\n\n  /**\n   * Done.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationAfter(code) {\n    effects.exit('htmlFlow')\n    // // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    // // No longer concrete.\n    // tokenizer.concrete = false\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuationStart(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * At eol, before continuation.\n   *\n   * ```markdown\n   * > | * ```js\n   *            ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * A continuation.\n   *\n   * ```markdown\n   *   | * ```js\n   * > | b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLineBefore(effects, ok, nok) {\n  return start\n\n  /**\n   * Before eol, expecting blank line.\n   *\n   * ```markdown\n   * > | <div>\n   *          ^\n   *   |\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nconst nonLazyContinuation = {\n  tokenize: tokenizeNonLazyContinuation,\n  partial: true\n}\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n  const closeStart = {\n    tokenize: tokenizeCloseStart,\n    partial: true\n  }\n  let initialPrefix = 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of code.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse whitespace like `markdown-rs`.\n    return beforeSequenceOpen(code)\n  }\n\n  /**\n   * In opening fence, after prefix, at sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeSequenceOpen(code) {\n    const tail = self.events[self.events.length - 1]\n    initialPrefix =\n      tail && tail[1].type === 'linePrefix'\n        ? tail[2].sliceSerialize(tail[1], true).length\n        : 0\n    marker = code\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening fence sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *      ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === marker) {\n      sizeOpen++\n      effects.consume(code)\n      return sequenceOpen\n    }\n    if (sizeOpen < 3) {\n      return nok(code)\n    }\n    effects.exit('codeFencedFenceSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, infoBefore, 'whitespace')(code)\n      : infoBefore(code)\n  }\n\n  /**\n   * In opening fence, after the sequence (and optional whitespace), before info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function infoBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFencedFence')\n      return self.interrupt\n        ? ok(code)\n        : effects.check(nonLazyContinuation, atNonLazyBreak, after)(code)\n    }\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n\n  /**\n   * In info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function info(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return infoBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, metaBefore, 'whitespace')(code)\n    }\n    if (code === 96 && code === marker) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return info\n  }\n\n  /**\n   * In opening fence, after info and whitespace, before meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function metaBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return infoBefore(code)\n    }\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n\n  /**\n   * In meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return infoBefore(code)\n    }\n    if (code === 96 && code === marker) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return meta\n  }\n\n  /**\n   * At eol/eof in code, before a non-lazy closing fence or content.\n   *\n   * ```markdown\n   * > | ~~~js\n   *          ^\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function atNonLazyBreak(code) {\n    return effects.attempt(closeStart, after, contentBefore)(code)\n  }\n\n  /**\n   * Before code content, not a closing fence, at eol.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentBefore(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return contentStart\n  }\n\n  /**\n   * Before code content, not a closing fence.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentStart(code) {\n    return initialPrefix > 0 && markdownSpace(code)\n      ? factorySpace(\n          effects,\n          beforeContentChunk,\n          'linePrefix',\n          initialPrefix + 1\n        )(code)\n      : beforeContentChunk(code)\n  }\n\n  /**\n   * Before code content, after optional prefix.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeContentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return effects.check(nonLazyContinuation, atNonLazyBreak, after)(code)\n    }\n    effects.enter('codeFlowValue')\n    return contentChunk(code)\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^^^^^^^^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return beforeContentChunk(code)\n    }\n    effects.consume(code)\n    return contentChunk\n  }\n\n  /**\n   * After code.\n   *\n   * ```markdown\n   *   | ~~~js\n   *   | alert(1)\n   * > | ~~~\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeCloseStart(effects, ok, nok) {\n    let size = 0\n    return startBefore\n\n    /**\n     *\n     *\n     * @type {State}\n     */\n    function startBefore(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    /**\n     * Before closing fence, at optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      // Always populated by defaults.\n\n      // To do: `enter` here or in next state?\n      effects.enter('codeFencedFence')\n      return markdownSpace(code)\n        ? factorySpace(\n            effects,\n            beforeSequenceClose,\n            'linePrefix',\n            self.parser.constructs.disable.null.includes('codeIndented')\n              ? undefined\n              : 4\n          )(code)\n        : beforeSequenceClose(code)\n    }\n\n    /**\n     * In closing fence, after optional whitespace, at sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function beforeSequenceClose(code) {\n      if (code === marker) {\n        effects.enter('codeFencedFenceSequence')\n        return sequenceClose(code)\n      }\n      return nok(code)\n    }\n\n    /**\n     * In closing fence sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceClose(code) {\n      if (code === marker) {\n        size++\n        effects.consume(code)\n        return sequenceClose\n      }\n      if (size >= sizeOpen) {\n        effects.exit('codeFencedFenceSequence')\n        return markdownSpace(code)\n          ? factorySpace(effects, sequenceCloseAfter, 'whitespace')(code)\n          : sequenceCloseAfter(code)\n      }\n      return nok(code)\n    }\n\n    /**\n     * After closing fence sequence, after optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceCloseAfter(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n      return nok(code)\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuation(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return lineStart\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function lineStart(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n  let max\n  /** @type {(code: Code) => boolean} */\n  let test\n  return start\n\n  /**\n   * Start of character reference.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *      ^\n   * > | a&#123;b\n   *      ^\n   * > | a&#x9;b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n\n  /**\n   * After `&`, at `#` for numeric references or alphanumeric for named\n   * references.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^\n   * > | a&#123;b\n   *       ^\n   * > | a&#x9;b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n\n  /**\n   * After `#`, at `x` for hexadecimals or digit for decimals.\n   *\n   * ```markdown\n   * > | a&#123;b\n   *        ^\n   * > | a&#x9;b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n\n  /**\n   * After markers (`&#x`, `&#`, or `&`), in value, before `;`.\n   *\n   * The character reference kind defines what and how many characters are\n   * allowed.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^^^\n   * > | a&#123;b\n   *        ^^^\n   * > | a&#x9;b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function value(code) {\n    if (code === 59 && size) {\n      const token = effects.exit('characterReferenceValue')\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      // To do: `markdown-rs` uses a different name:\n      // `CharacterReferenceMarkerSemi`.\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {asciiPunctuation} from 'micromark-util-character'\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of character escape.\n   *\n   * ```markdown\n   * > | a\\*b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return inside\n  }\n\n  /**\n   * After `\\`, at punctuation.\n   *\n   * ```markdown\n   * > | a\\*b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // ASCII punctuation.\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n\n/** @type {Construct} */\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\nconst referenceFullConstruct = {\n  tokenize: tokenizeReferenceFull\n}\n/** @type {Construct} */\nconst referenceCollapsedConstruct = {\n  tokenize: tokenizeReferenceCollapsed\n}\n\n/** @type {Resolver} */\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  while (++index < events.length) {\n    const token = events[index][1]\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n  return events\n}\n\n/** @type {Resolver} */\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n  let token\n  /** @type {number | undefined} */\n  let open\n  /** @type {number | undefined} */\n  let close\n  /** @type {Array<Event>} */\n  let media\n\n  // Find an opening.\n  while (index--) {\n    token = events[index][1]\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      }\n\n      // Mark other link openings as inactive, as we can’t have links in\n      // links.\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ]\n\n  // Opening marker.\n  media = push(media, events.slice(open + 1, open + offset + 3))\n\n  // Text open.\n  media = push(media, [['enter', text, context]])\n\n  // Always populated by defaults.\n\n  // Between.\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  )\n\n  // Text close, marker close, label close.\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ])\n\n  // Reference, resource, or so.\n  media = push(media, events.slice(close + 1))\n\n  // Media close.\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n  let labelStart\n  /** @type {boolean} */\n  let defined\n\n  // Find an opening.\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n  return start\n\n  /**\n   * Start of label end.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // If there is not an okay opening.\n    if (!labelStart) {\n      return nok(code)\n    }\n\n    // If the corresponding label (link) start is marked as inactive,\n    // it means we’d be wrapping a link, like this:\n    //\n    // ```markdown\n    // > | a [b [c](d) e](f) g.\n    //                  ^\n    // ```\n    //\n    // We can’t have that, so it’s just balanced brackets.\n    if (labelStart._inactive) {\n      return labelEndNok(code)\n    }\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return after\n  }\n\n  /**\n   * After `]`.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Note: `markdown-rs` also parses GFM footnotes here, which for us is in\n    // an extension.\n\n    // Resource (`[asd](fgh)`)?\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        labelEndOk,\n        defined ? labelEndOk : labelEndNok\n      )(code)\n    }\n\n    // Full (`[asd][fgh]`) or collapsed (`[asd][]`) reference?\n    if (code === 91) {\n      return effects.attempt(\n        referenceFullConstruct,\n        labelEndOk,\n        defined ? referenceNotFull : labelEndNok\n      )(code)\n    }\n\n    // Shortcut (`[asd]`) reference?\n    return defined ? labelEndOk(code) : labelEndNok(code)\n  }\n\n  /**\n   * After `]`, at `[`, but not at a full reference.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] b\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceNotFull(code) {\n    return effects.attempt(\n      referenceCollapsedConstruct,\n      labelEndOk,\n      labelEndNok\n    )(code)\n  }\n\n  /**\n   * Done, we found something.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *           ^\n   * > | [a][b] c\n   *           ^\n   * > | [a][] b\n   *          ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndOk(code) {\n    // Note: `markdown-rs` does a bunch of stuff here.\n    return ok(code)\n  }\n\n  /**\n   * Done, it’s nothing.\n   *\n   * There was an okay opening, but we didn’t match anything.\n   *\n   * ```markdown\n   * > | [a](b c\n   *        ^\n   * > | [a][b c\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndNok(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeResource(effects, ok, nok) {\n  return resourceStart\n\n  /**\n   * At a resource.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceStart(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return resourceBefore\n  }\n\n  /**\n   * In resource, after `(`, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBefore(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceOpen)(code)\n      : resourceOpen(code)\n  }\n\n  /**\n   * In resource, after optional whitespace, at `)` or a destination.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceOpen(code) {\n    if (code === 41) {\n      return resourceEnd(code)\n    }\n    return factoryDestination(\n      effects,\n      resourceDestinationAfter,\n      resourceDestinationMissing,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n\n  /**\n   * In resource, after destination, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceBetween)(code)\n      : resourceEnd(code)\n  }\n\n  /**\n   * At invalid destination.\n   *\n   * ```markdown\n   * > | [a](<<) b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationMissing(code) {\n    return nok(code)\n  }\n\n  /**\n   * In resource, after destination and whitespace, at `(` or title.\n   *\n   * ```markdown\n   * > | [a](b ) c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBetween(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        resourceTitleAfter,\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n    return resourceEnd(code)\n  }\n\n  /**\n   * In resource, after title, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b \"c\") d\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceTitleAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceEnd)(code)\n      : resourceEnd(code)\n  }\n\n  /**\n   * In resource, at `)`.\n   *\n   * ```markdown\n   * > | [a](b) d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceEnd(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceFull(effects, ok, nok) {\n  const self = this\n  return referenceFull\n\n  /**\n   * In a reference (full), at the `[`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFull(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      referenceFullAfter,\n      referenceFullMissing,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n\n  /**\n   * In a reference (full), after `]`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullAfter(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n\n  /**\n   * In reference (full) that was missing.\n   *\n   * ```markdown\n   * > | [a][b d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullMissing(code) {\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceCollapsed(effects, ok, nok) {\n  return referenceCollapsedStart\n\n  /**\n   * In reference (collapsed), at `[`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceCollapsedStart(code) {\n    // We only attempt a collapsed label if there’s a `[`.\n\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return referenceCollapsedOpen\n  }\n\n  /**\n   * In reference (collapsed), at `]`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *         ^\n   * ```\n   *\n   *  @type {State}\n   */\n  function referenceCollapsedOpen(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {labelEnd} from './label-end.js'\n\n/** @type {Construct} */\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of label (image) start.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n\n  /**\n   * After `!`, at `[`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `![`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *         ^\n   * ```\n   *\n   * This is needed in because, when GFM footnotes are enabled, images never\n   * form when started with a `^`.\n   * Instead, links form:\n   *\n   * ```markdown\n   * ![^a](b)\n   *\n   * ![^a][b]\n   *\n   * [b]: c\n   * ```\n   *\n   * ```html\n   * <p>!<a href=\\\"b\\\">^a</a></p>\n   * <p>!<a href=\\\"c\\\">^a</a></p>\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // To do: use a new field to do this, this is still needed for\n    // `micromark-extension-gfm-footnote`, but the `label-start-link`\n    // behavior isn’t.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n/**\n * Classify whether a code represents whitespace, punctuation, or something\n * else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * > 👉 **Note**: eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n *   Code.\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\n *   Group.\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n  let open\n  /** @type {Token} */\n  let group\n  /** @type {Token} */\n  let text\n  /** @type {Token} */\n  let openingSequence\n  /** @type {Token} */\n  let closingSequence\n  /** @type {number} */\n  let use\n  /** @type {Array<Event>} */\n  let nextEvents\n  /** @type {number} */\n  let offset\n\n  // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index\n\n      // Now walk back to find an opener.\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open &&\n          // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          }\n\n          // Number of markers to use from the sequence.\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = []\n\n          // If there are more markers in the opening, add them before.\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          }\n\n          // Opening.\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ])\n\n          // Always populated by defaults.\n\n          // Between.\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          )\n\n          // Closing.\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ])\n\n          // If there are more markers in the closing, add them after.\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  }\n\n  // Remove remaining sequences.\n  index = -1\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Before a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    marker = code\n    effects.enter('attentionSequence')\n    return inside(code)\n  }\n\n  /**\n   * In a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return inside\n    }\n    const token = effects.exit('attentionSequence')\n\n    // To do: next major: move this to resolver, just like `markdown-rs`.\n    const after = classifyCharacter(code)\n\n    // Always populated by defaults.\n\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 0\n  return start\n\n  /**\n   * Start of an autolink.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *      ^\n   * > | a<user@example.com>b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n\n  /**\n   * After `<`, at protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *       ^\n   * > | a<user@example.com>b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n    return emailAtext(code)\n  }\n\n  /**\n   * At second byte of protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeOrEmailAtext(code) {\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) {\n      // Count the previous alphabetical from `open` too.\n      size = 1\n      return schemeInsideOrEmailAtext(code)\n    }\n    return emailAtext(code)\n  }\n\n  /**\n   * In ambiguous protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      size = 0\n      return urlInside\n    }\n\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n    size = 0\n    return emailAtext(code)\n  }\n\n  /**\n   * After protocol, in URL.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      effects.enter('autolinkMarker')\n      effects.consume(code)\n      effects.exit('autolinkMarker')\n      effects.exit('autolink')\n      return ok\n    }\n\n    // ASCII control, space, or `<`.\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return urlInside\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      return emailAtSignOrDot\n    }\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n    return nok(code)\n  }\n\n  /**\n   * In label, after at-sign or dot.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                 ^       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n\n  /**\n   * In label, where `.` and `>` are allowed.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n    if (code === 62) {\n      // Exit, then change the token type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      effects.enter('autolinkMarker')\n      effects.consume(code)\n      effects.exit('autolinkMarker')\n      effects.exit('autolink')\n      return ok\n    }\n    return emailValue(code)\n  }\n\n  /**\n   * In label, where `.` and `>` are *not* allowed.\n   *\n   * Though, this is also used in `emailLabel` to parse other values.\n   *\n   * ```markdown\n   * > | a<user.name@ex-ample.com>b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailValue(code) {\n    // ASCII alphanumeric or `-`.\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      const next = code === 45 ? emailValue : emailLabel\n      effects.consume(code)\n      return next\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code> | undefined} */\n  let marker\n  /** @type {number} */\n  let index\n  /** @type {State} */\n  let returnState\n  return start\n\n  /**\n   * Start of HTML (text).\n   *\n   * ```markdown\n   * > | a <b> c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | a <b> c\n   *        ^\n   * > | a <!doctype> c\n   *        ^\n   * > | a <!--b--> c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | a <!doctype> c\n   *         ^\n   * > | a <!--b--> c\n   *         ^\n   * > | a <![CDATA[>&<]]> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpenInside\n    }\n    if (code === 91) {\n      effects.consume(code)\n      index = 0\n      return cdataOpenInside\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n    return nok(code)\n  }\n\n  /**\n   * In a comment, after `<!-`, at another `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentEnd\n    }\n    return nok(code)\n  }\n\n  /**\n   * In comment.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return comment\n  }\n\n  /**\n   * In comment, after `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentEnd\n    }\n    return comment(code)\n  }\n\n  /**\n   * In comment, after `--`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentEnd(code) {\n    return code === 62\n      ? end(code)\n      : code === 45\n      ? commentClose(code)\n      : comment(code)\n  }\n\n  /**\n   * After `<![`, in CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *          ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = 'CDATA['\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === value.length ? cdata : cdataOpenInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * In CDATA.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return cdata\n  }\n\n  /**\n   * In CDATA, after `]`, at another `]`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n    return cdata(code)\n  }\n\n  /**\n   * In CDATA, after `]]`, at `>`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n    return cdata(code)\n  }\n\n  /**\n   * In declaration.\n   *\n   * ```markdown\n   * > | a <!b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return declaration\n  }\n\n  /**\n   * In instruction.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return instruction\n  }\n\n  /**\n   * In instruction, after `?`, at `>`.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `</x`, in a tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagClose(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n    return tagCloseBetween(code)\n  }\n\n  /**\n   * In closing tag, after tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n    return end(code)\n  }\n\n  /**\n   * After `<x`, in opening tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpen(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In opening tag, after tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    // ASCII alphabetical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n    return end(code)\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeName(code) {\n    // ASCII alphabetical and `-`, `.`, `:`, and `_`.\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n    return tagOpenAttributeNameAfter(code)\n  }\n\n  /**\n   * After attribute name, before initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n    return tagOpenBetween(code)\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      marker = undefined\n      return tagOpenAttributeValueQuotedAfter\n    }\n    if (code === null) {\n      return nok(code)\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the end\n   * of the tag.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In certain circumstances of a tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n    return nok(code)\n  }\n\n  /**\n   * At eol.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   * > | a <!--a\n   *            ^\n   *   | b-->\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingBefore(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return lineEndingAfter\n  }\n\n  /**\n   * After eol, at optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfter(code) {\n    // Always populated by defaults.\n\n    return markdownSpace(code)\n      ? factorySpace(\n          effects,\n          lineEndingAfterPrefix,\n          'linePrefix',\n          self.parser.constructs.disable.null.includes('codeIndented')\n            ? undefined\n            : 4\n        )(code)\n      : lineEndingAfterPrefix(code)\n  }\n\n  /**\n   * After eol, after optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {labelEnd} from './label-end.js'\n\n/** @type {Construct} */\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of label (link) start.\n   *\n   * ```markdown\n   * > | a [b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n\n  /** @type {State} */\n  function after(code) {\n    // To do: this isn’t needed in `micromark-extension-gfm-footnote`,\n    // remove.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of a hard break (escape).\n   *\n   * ```markdown\n   * > | a\\\n   *      ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.consume(code)\n    return after\n  }\n\n  /**\n   * After `\\`, at eol.\n   *\n   * ```markdown\n   * > | a\\\n   *       ^\n   *   | b\n   * ```\n   *\n   *  @type {State}\n   */\n  function after(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n\n// To do: next major: don’t resolve, like `markdown-rs`.\n/** @type {Resolver} */\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n  let index\n  /** @type {number | undefined} */\n  let enter\n\n  // If we start and end with an EOL or a space.\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex\n\n    // And we have data.\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  }\n\n  // Merge adjacent spaces and data.\n  index = headEnterIndex - 1\n  tailExitIndex++\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n      enter = undefined\n    }\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n  let size\n  /** @type {Token} */\n  let token\n  return start\n\n  /**\n   * Start of code (text).\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * > | \\`a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n    effects.exit('codeTextSequence')\n    return between(code)\n  }\n\n  /**\n   * Between something and something else.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function between(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    }\n\n    // To do: next major: don’t do spaces in resolve, but when compiling,\n    // like `markdown-rs`.\n    // Tabs don’t work, and virtual spaces don’t make sense.\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return between\n    }\n\n    // Closing fence? Could also be data.\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return sequenceClose(code)\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return between\n    }\n\n    // Data.\n    effects.enter('codeTextData')\n    return data(code)\n  }\n\n  /**\n   * In data.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return between(code)\n    }\n    effects.consume(code)\n    return data\n  }\n\n  /**\n   * In closing sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceClose(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return sequenceClose\n    }\n\n    // Done!\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    }\n\n    // More or less accents: mark as data.\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\n\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n\n/** @satisfies {Extension['document']} */\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n\n/** @satisfies {Extension['contentInitial']} */\nexport const contentInitial = {\n  [91]: definition\n}\n\n/** @satisfies {Extension['flowInitial']} */\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n\n/** @satisfies {Extension['flow']} */\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n\n/** @satisfies {Extension['string']} */\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n\n/** @satisfies {Extension['text']} */\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n\n/** @satisfies {Extension['insideSpan']} */\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n\n/** @satisfies {Extension['attentionMarkers']} */\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n\n/** @satisfies {Extension['disable']} */\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Create} Create\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n */\n\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n\n/**\n * @param {ParseOptions | null | undefined} [options]\n * @returns {ParseContext}\n */\nexport function parse(options) {\n  const settings = options || {}\n  const constructs =\n    /** @type {FullNormalizedExtension} */\n    combineExtensions([defaultConstructs, ...(settings.extensions || [])])\n\n  /** @type {ParseContext} */\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n\n  /**\n   * @param {InitialConstruct} initial\n   */\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {boolean | null | undefined} [end=false]\n * @returns {Array<Chunk>}\n */\n\nconst search = /[\\0\\t\\n\\r]/g\n\n/**\n * @returns {Preprocessor}\n */\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean | undefined} */\n  let start = true\n  /** @type {boolean | undefined} */\n  let atCarriageReturn\n  return preprocessor\n\n  /** @type {Preprocessor} */\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray | null} */\n    let match\n    /** @type {number} */\n    let next\n    /** @type {number} */\n    let startPosition\n    /** @type {number} */\n    let endPosition\n    /** @type {Code} */\n    let code\n\n    // @ts-expect-error `Buffer` does allow an encoding.\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n    if (start) {\n      // To do: `markdown-rs` actually parses BOMs (byte order mark).\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n      start = undefined\n    }\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n            while (column++ < next) chunks.push(-1)\n            break\n          }\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n      startPosition = endPosition + 1\n    }\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n    return chunks\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * Sort of like `String.fromCharCode(Number.parseInt(value, base))`, but makes\n * non-characters and control characters safe.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n *   Character.\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n  if (\n    // C0 except for HT, LF, FF, CR, space.\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) ||\n    // Control character (DEL) of C0, and C1 controls.\n    (code > 126 && code < 160) ||\n    // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) ||\n    // Noncharacters.\n    (code > 64975 && code < 65008) /* eslint-disable no-bitwise */ ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 /* eslint-enable no-bitwise */ ||\n    // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n  return String.fromCharCode(code)\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n\n/**\n * Decode markdown strings (which occur in places such as fenced code info\n * strings, destinations, labels, and titles).\n *\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n *   Value to decode.\n * @returns {string}\n *   Decoded value.\n */\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  }\n\n  // Reference.\n  const head = $2.charCodeAt(0)\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n *\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').StaticPhrasingContent} StaticPhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('mdast').ReferenceType} ReferenceType\n * @typedef {import('../index.js').CompileData} CompileData\n */\n\n/**\n * @typedef {Root | Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n *\n * @typedef {Omit<UnistParent, 'type' | 'children'> & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @callback Transform\n *   Extra transform, to change the AST afterwards.\n * @param {Root} tree\n *   Tree to transform.\n * @returns {Root | undefined | null | void}\n *   New tree or nothing (in which case the current tree is used).\n *\n * @callback Handle\n *   Handle a token.\n * @param {CompileContext} this\n *   Context.\n * @param {Token} token\n *   Current token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n *\n * @callback OnEnterError\n *   Handle the case where the `right` token is open, but it is closed (by the\n *   `left` token) or because we reached the end of the document.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token | undefined} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @callback OnExitError\n *   Handle the case where the `right` token is open but it is closed by\n *   exiting the `left` token.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {[Token, OnEnterError | undefined]} TokenTuple\n *   Open token on the stack, with an optional error handler for when\n *   that token isn’t closed properly.\n */\n\n/**\n * @typedef Config\n *   Configuration.\n *\n *   We have our defaults, but extensions will add more.\n * @property {Array<string>} canContainEols\n *   Token types where line endings are used.\n * @property {Handles} enter\n *   Opening handles.\n * @property {Handles} exit\n *   Closing handles.\n * @property {Array<Transform>} transforms\n *   Tree transforms.\n *\n * @typedef {Partial<Config>} Extension\n *   Change how markdown tokens from micromark are turned into mdast.\n *\n * @typedef CompileContext\n *   mdast compiler context.\n * @property {Array<Node | Fragment>} stack\n *   Stack of nodes.\n * @property {Array<TokenTuple>} tokenStack\n *   Stack of tokens.\n * @property {<Key extends keyof CompileData>(key: Key) => CompileData[Key]} getData\n *   Get data from the key/value store.\n * @property {<Key extends keyof CompileData>(key: Key, value?: CompileData[Key]) => void} setData\n *   Set data into the key/value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<Kind extends Node>(this: CompileContext, node: Kind, token: Token, onError?: OnEnterError) => Kind} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {Config} config\n *   Configuration.\n *\n * @typedef FromMarkdownOptions\n *   Configuration for how to build mdast.\n * @property {Array<Extension | Array<Extension>> | null | undefined} [mdastExtensions]\n *   Extensions for this utility to change how tokens are turned into a tree.\n *\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n *   Configuration.\n */\n\n// To do: micromark: create a registry of tokens?\n// To do: next major: don’t return given `Node` from `enter`.\n// To do: next major: remove setter/getter.\n\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n\n/**\n * @param value\n *   Markdown to parse.\n * @param encoding\n *   Character encoding for when `value` is `Buffer`.\n * @param options\n *   Configuration.\n * @returns\n *   mdast tree.\n */\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options | null | undefined) => Root) &\n   *   ((value: Value, options?: Options | null | undefined) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding | Options | null | undefined} [encoding]\n   * @param {Options | null | undefined} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n    return compiler(options)(\n      postprocess(\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  }\n  configure(config, (options || {}).mdastExtensions || [])\n\n  /** @type {CompileData} */\n  const data = {}\n  return compile\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    /** @type {Array<number>} */\n    const listStack = []\n    let index = -1\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n    index = -1\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n\n    // Call transforms.\n    index = -1\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n    return tree\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token | undefined} */\n    let listItem\n    /** @type {number | undefined} */\n    let lineIndex\n    /** @type {number | undefined} */\n    let firstBlankLineIndex\n    /** @type {boolean | undefined} */\n    let atMarker\n    while (++index <= length) {\n      const event = events[index]\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            listItem._spread = true\n          }\n\n          // Fix position.\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        }\n\n        // Create a new list item.\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            _spread: false,\n            start: Object.assign({}, event[1].start),\n            // @ts-expect-error: we’ll add `end` in a second.\n            end: undefined\n          }\n          // @ts-expect-error: `listItem` is most definitely defined, TS...\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    }\n    events[start][1]._spread = listSpread\n    return length\n  }\n\n  /**\n   * Set data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @param {CompileData[Key]} [value]\n   *   New value.\n   * @returns {void}\n   *   Nothing.\n   */\n  function setData(key, value) {\n    data[key] = value\n  }\n\n  /**\n   * Get data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @returns {CompileData[Key]}\n   *   Value.\n   */\n  function getData(key) {\n    return data[key]\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Node} create\n   *   Create a node.\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {void}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n\n  /**\n   * @template {Node} Kind\n   *   Node type.\n   * @this {CompileContext}\n   *   Context.\n   * @param {Kind} node\n   *   Node to enter.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnEnterError | undefined} [errorHandler]\n   *   Handle the case where this token is open, but it is closed by something else.\n   * @returns {Kind}\n   *   The given node.\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler])\n    // @ts-expect-error: `end` will be patched later.\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnExitError | undefined} [onExitError]\n   *   Handle the case where another token is open.\n   * @returns {Node}\n   *   The closed node.\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n    node.position.end = point(token.end)\n    return node\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n  function resume() {\n    return toString(this.stack.pop())\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor = this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      setData('expectingFirstListItemValue')\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1]\n    let tail = node.children[node.children.length - 1]\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text()\n      // @ts-expect-error: we’ll add `end` later.\n      tail.position = {\n        start: point(token.start)\n      }\n      // @ts-expect-error: Assume `parent` accepts `text`.\n      node.children.push(tail)\n    }\n    this.stack.push(tail)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      const referenceType = getData('referenceType') || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    setData('referenceType')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      const referenceType = getData('referenceType') || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    setData('referenceType')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token)\n    const ancestor = this.stack[this.stack.length - 2]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string)\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // Assume a reference.\n    setData('inReference', true)\n    if (node.type === 'link') {\n      /** @type {Array<StaticPhrasingContent>} */\n      // @ts-expect-error: Assume static phrasing content.\n      const children = fragment.children\n      node.children = children\n    } else {\n      node.alt = value\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n    let value\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      const result = decodeNamedCharacterReference(data)\n      value = result\n    }\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n\n  /** @returns {HTML} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Extension | Array<Extension>>} extensions\n * @returns {void}\n */\nfunction configure(combined, extensions) {\n  let index = -1\n  while (++index < extensions.length) {\n    const value = extensions[index]\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {void}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      if (key === 'canContainEols') {\n        const right = extension[key]\n        if (right) {\n          combined[key].push(...right)\n        }\n      } else if (key === 'transforms') {\n        const right = extension[key]\n        if (right) {\n          combined[key].push(...right)\n        }\n      } else if (key === 'enter' || key === 'exit') {\n        const right = extension[key]\n        if (right) {\n          Object.assign(combined[key], right)\n        }\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\n\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n  return events\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/**\n * @this {import('unified').Processor}\n * @type {import('unified').Plugin<[Options?] | void[], string, Root>}\n */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri`).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * A regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`, or\n * `/^https?$/i` for `img[src]` (this is what `github.com` allows).\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string | undefined} url\n *   URI to sanitize.\n * @param {RegExp | null | undefined} [protocol]\n *   Allowed protocols.\n * @returns {string}\n *   Sanitized URI.\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n  if (!protocol) {\n    return value\n  }\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n  return ''\n}\n\n/**\n * Normalize a URL.\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n *   URI to normalize.\n * @returns {string}\n *   Normalized URI.\n */\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n    let replace = ''\n\n    // A correct percent encoded value.\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    }\n    // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    }\n    // Astral.\n    else if (code > 55295 && code < 57344) {\n      const next = value.charCodeAt(index + 1)\n\n      // A correct surrogate pair.\n      if (code < 56320 && next > 56319 && next < 57344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      }\n      // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    }\n    // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @typedef {Record<string, unknown>} Props\n * @typedef {null | undefined | string | Props | TestFunctionAnything | Array<string | Props | TestFunctionAnything>} Test\n *   Check for an arbitrary node, unaware of TypeScript inferral.\n *\n * @callback TestFunctionAnything\n *   Check if a node passes a test, unaware of TypeScript inferral.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | void}\n *   Whether this node passes the test.\n */\n\n/**\n * @template {Node} Kind\n *   Node type.\n * @typedef {Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind> | Array<Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind>>} PredicateTest\n *   Check for a node that can be inferred by TypeScript.\n */\n\n/**\n * Check if a node passes a certain test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback TestFunctionPredicate\n *   Complex test function for a node that can be inferred by TypeScript.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this node passes the test.\n */\n\n/**\n * @callback AssertAnything\n *   Check that an arbitrary value is a node, unaware of TypeScript inferral.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if a node is a node and passes a certain node test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback AssertPredicate\n *   Check that an arbitrary value is a specific node, aware of TypeScript.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @param test\n *   A check for a specific node.\n * @param index\n *   The node’s position in its parent.\n * @param parent\n *   The node’s parent.\n * @returns\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  /**\n   * @type {(\n   *   (() => false) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index: number, parent: Parent, context?: unknown) => node is Kind) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index?: null | undefined, parent?: null | undefined, context?: unknown) => node is Kind) &\n   *   ((node: unknown, test: Test, index: number, parent: Parent, context?: unknown) => boolean) &\n   *   ((node: unknown, test?: Test, index?: null | undefined, parent?: null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns\n *   An assertion.\n */\nexport const convert =\n  /**\n   * @type {(\n   *   (<Kind extends Node>(test: PredicateTest<Kind>) => AssertPredicate<Kind>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<string | Props | TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    return Boolean(\n      node &&\n        typeof node === 'object' &&\n        'type' in node &&\n        // @ts-expect-error: fine.\n        Boolean(check.call(this, node, ...parameters))\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * @typedef {boolean | 'skip'} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<Ancestor>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   Tree type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {Visitor<import('./complex-types.js').Matches<import('./complex-types.js').InclusiveDescendant<Tree>, Check>, Extract<import('./complex-types.js').InclusiveDescendant<Tree>, Parent>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor<Node>} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, undefined, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number | undefined} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = node && typeof node === 'object' ? node : {}\n\n        if (typeof value.type === 'string') {\n          const name =\n            // `hast`\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : // `xast`\n              typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {ActionTuple}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Check if `Child` can be a child of `Ancestor`.\n *\n * Returns the ancestor when `Child` can be a child of `Ancestor`, or returns\n * `never`.\n *\n * @template {Node} Ancestor\n *   Node type.\n * @template {Node} Child\n *   Node type.\n * @typedef {(\n *   Ancestor extends Parent\n *     ? Child extends Ancestor['children'][number]\n *       ? Ancestor\n *       : never\n *     : never\n * )} ParentsOf\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends Node ? number | null : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends Node ? Ancestor | null : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * Build a typed `Visitor` function from a node and all possible parents.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Visited\n *   Node type.\n * @template {Parent} Ancestor\n *   Parent type.\n * @typedef {Visitor<Visited, ParentsOf<Ancestor, Visited>>} BuildVisitorFromMatch\n */\n\n/**\n * Build a typed `Visitor` function from a list of descendants and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     import('unist-util-visit-parents/complex-types.js').Matches<Descendant, Check>,\n *     Extract<Descendant, Parent>\n *   >\n * )} BuildVisitorFromDescendants\n */\n\n/**\n * Build a typed `Visitor` function from a tree and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} [Tree=Node]\n *   Node type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     import('unist-util-visit-parents/complex-types.js').InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike | Node | null | undefined} [node]\n *   Node.\n * @returns {Position}\n *   Position.\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start' | 'end'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {NodeLike | Node | null | undefined} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    // To do: next major: don’t return points when invalid.\n    return {\n      // @ts-expect-error: in practice, null is allowed.\n      line: point.line || null,\n      // @ts-expect-error: in practice, null is allowed.\n      column: point.column || null,\n      // @ts-expect-error: in practice, null is allowed.\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Definition} Definition\n */\n\n/**\n * @typedef {Root | Content} Node\n *\n * @callback GetDefinition\n *   Get a definition by identifier.\n * @param {string | null | undefined} [identifier]\n *   Identifier of definition.\n * @returns {Definition | null}\n *   Definition corresponding to `identifier` or `null`.\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `tree`.\n *\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} tree\n *   Tree to check.\n * @returns {GetDefinition}\n *   Getter.\n */\nexport function definitions(tree) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!tree || !tree.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(tree, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /** @type {GetDefinition} */\n  function definition(identifier) {\n    const id = clean(identifier)\n    // To do: next major: return `undefined` when not found.\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string | null | undefined} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('hast').Element} Element\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  if (index === -1) {\n    state.footnoteOrder.push(id)\n    state.footnoteCounts[id] = 1\n    counter = state.footnoteOrder.length\n  } else {\n    state.footnoteCounts[id]++\n    counter = index + 1\n  }\n\n  const reuseCounter = state.footnoteCounts[id]\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + state.clobberPrefix + 'fn-' + safeId,\n      id:\n        state.clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Reference} Reference\n * @typedef {import('mdast').Root} Root\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Reference>} References\n */\n\n// To do: next major: always return array.\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {References} node\n *   Reference node (image, link).\n * @returns {ElementContent | Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return {type: 'text', value: '![' + node.alt + suffix}\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Parent>} Parents\n */\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | null | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  // To do: next major: return `undefined`.\n  return null\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n\n */\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang ? node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/) : null\n  /** @type {Properties} */\n  const properties = {}\n\n  if (lang) {\n    properties.className = ['language-' + lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n\n */\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../state.js').State} State\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n// To do: when both:\n// * <https://github.com/micromark/micromark-extension-footnote>\n// * <https://github.com/syntax-tree/mdast-util-footnote>\n// …are archived, remove this (also from mdast).\n// These inline notes are not used in GFM.\n\n/**\n * Turn an mdast `footnote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Footnote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnote(state, node) {\n  const footnoteById = state.footnoteById\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(state, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').HTML} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Raw | Element | null}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.dangerous) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  // To do: next major: return `undefined`.\n  return null\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {ElementContent | Array<ElementContent>}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const def = state.definition(node.identifier)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {ElementContent | Array<ElementContent>}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const def = state.definition(node.identifier)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastRoot | HastElement}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start.line && end.line) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Parent>} Parents\n */\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | null | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(node, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastText | HastElement}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Content} HastContent\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Content} MdastContent\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Parent} MdastParent\n * @typedef {import('mdast').Root} MdastRoot\n */\n\n/**\n * @typedef {HastRoot | HastContent} HastNodes\n * @typedef {MdastRoot | MdastContent} MdastNodes\n * @typedef {Extract<MdastNodes, MdastParent>} MdastParents\n *\n * @typedef EmbeddedHastFields\n *   hast fields.\n * @property {string | null | undefined} [hName]\n *   Generate a specific element with this tag name instead.\n * @property {HastProperties | null | undefined} [hProperties]\n *   Generate an element with these properties instead.\n * @property {Array<HastElementContent> | null | undefined} [hChildren]\n *   Generate an element with this content instead.\n *\n * @typedef {Record<string, unknown> & EmbeddedHastFields} MdastData\n *   mdast data with embedded hast fields.\n *\n * @typedef {MdastNodes & {data?: MdastData | null | undefined}} MdastNodeWithData\n *   mdast node with embedded hast data.\n *\n * @typedef PointLike\n *   Point-like value.\n * @property {number | null | undefined} [line]\n *   Line.\n * @property {number | null | undefined} [column]\n *   Column.\n * @property {number | null | undefined} [offset]\n *   Offset.\n *\n * @typedef PositionLike\n *   Position-like value.\n * @property {PointLike | null | undefined} [start]\n *   Point-like value.\n * @property {PointLike | null | undefined} [end]\n *   Point-like value.\n *\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | null | undefined} parent\n *   Parent of `node`.\n * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n *   hast node.\n *\n * @callback HFunctionProps\n *   Signature of `state` for when props are passed.\n * @param {MdastNodes | PositionLike | null | undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {HastProperties} props\n *   Properties.\n * @param {Array<HastElementContent> | null | undefined} [children]\n *   hast content.\n * @returns {HastElement}\n *   Compiled element.\n *\n * @callback HFunctionNoProps\n *   Signature of `state` for when no props are passed.\n * @param {MdastNodes | PositionLike | null | undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Array<HastElementContent> | null | undefined} [children]\n *   hast content.\n * @returns {HastElement}\n *   Compiled element.\n *\n * @typedef HFields\n *   Info on `state`.\n * @property {boolean} dangerous\n *   Whether HTML is allowed.\n * @property {string} clobberPrefix\n *   Prefix to use to prevent DOM clobbering.\n * @property {string} footnoteLabel\n *   Label to use to introduce the footnote section.\n * @property {string} footnoteLabelTagName\n *   HTML used for the footnote label.\n * @property {HastProperties} footnoteLabelProperties\n *   Properties on the HTML tag used for the footnote label.\n * @property {string} footnoteBackLabel\n *   Label to use from backreferences back to their footnote call.\n * @property {(identifier: string) => MdastDefinition | null} definition\n *   Definition cache.\n * @property {Record<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Record<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {Handler} unknownHandler\n *   Handler for any none not in `passThrough` or otherwise handled.\n * @property {(from: MdastNodes, node: HastNodes) => void} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => Type | HastElement} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {(node: MdastNodes, parent: MdastParents | null | undefined) => HastElementContent | Array<HastElementContent> | null | undefined} one\n *   Transform an mdast node to hast.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastContent>(nodes: Array<Type>, loose?: boolean | null | undefined) => Array<Type | HastText>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n * @property {(left: MdastNodeWithData | PositionLike | null | undefined, right: HastElementContent) => HastElementContent} augment\n *   Like `state` but lower-level and usable on non-elements.\n *   Deprecated: use `patch` and `applyData`.\n * @property {Array<string>} passThrough\n *   List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree.\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` attribute on footnotes to prevent it from\n *   *clobbering*.\n * @property {string | null | undefined} [footnoteBackLabel='Back to content']\n *   Label to use from backreferences back to their footnote call (affects\n *   screen readers).\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Label to use for the footnotes section (affects screen readers).\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (note that `id: 'footnote-label'`\n *   is always added as footnote calls use it with `aria-describedby` to\n *   provide an accessible label).\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   Tag name to use for the footnote label.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes.\n * @property {Array<string> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes.\n *\n * @typedef {Record<string, Handler>} Handlers\n *   Handle nodes.\n *\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} State\n *   Info passed around.\n */\n\nimport {visit} from 'unist-util-visit'\nimport {position, pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Record<string, MdastFootnoteDefinition>} */\n  const footnoteById = {}\n\n  // To do: next major: add `options` to state, remove:\n  // `dangerous`, `clobberPrefix`, `footnoteLabel`, `footnoteLabelTagName`,\n  // `footnoteLabelProperties`, `footnoteBackLabel`, `passThrough`,\n  // `unknownHandler`.\n\n  // To do: next major: move to `state.options.allowDangerousHtml`.\n  state.dangerous = dangerous\n  // To do: next major: move to `state.options`.\n  state.clobberPrefix =\n    settings.clobberPrefix === undefined || settings.clobberPrefix === null\n      ? 'user-content-'\n      : settings.clobberPrefix\n  // To do: next major: move to `state.options`.\n  state.footnoteLabel = settings.footnoteLabel || 'Footnotes'\n  // To do: next major: move to `state.options`.\n  state.footnoteLabelTagName = settings.footnoteLabelTagName || 'h2'\n  // To do: next major: move to `state.options`.\n  state.footnoteLabelProperties = settings.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  // To do: next major: move to `state.options`.\n  state.footnoteBackLabel = settings.footnoteBackLabel || 'Back to content'\n  // To do: next major: move to `state.options`.\n  state.unknownHandler = settings.unknownHandler\n  // To do: next major: move to `state.options`.\n  state.passThrough = settings.passThrough\n\n  state.handlers = {...handlers, ...settings.handlers}\n\n  // To do: next major: replace utility with `definitionById` object, so we\n  // only walk once (as we need footnotes too).\n  state.definition = definitions(tree)\n  state.footnoteById = footnoteById\n  /** @type {Array<string>} */\n  state.footnoteOrder = []\n  /** @type {Record<string, number>} */\n  state.footnoteCounts = {}\n\n  state.patch = patch\n  state.applyData = applyData\n  state.one = oneBound\n  state.all = allBound\n  state.wrap = wrap\n  // To do: next major: remove `augment`.\n  state.augment = augment\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it’s fine!\n  return state\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   *\n   * @param {MdastNodeWithData | PositionLike | null | undefined} left\n   * @param {HastElementContent} right\n   * @returns {HastElementContent}\n   */\n  /* c8 ignore start */\n  // To do: next major: remove.\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {MdastData} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        // @ts-expect-error: fine.\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n  /* c8 ignore stop */\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  /* c8 ignore start */\n  // To do: next major: remove.\n  function state(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n  /* c8 ignore stop */\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | null | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n   *   Resulting hast node.\n   */\n  function oneBound(node, parent) {\n    // @ts-expect-error: that’s a state :)\n    return one(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function allBound(parent) {\n    // @ts-expect-error: that’s a state :)\n    return all(state, parent)\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {void}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {Type | HastElement}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {Type | HastElement} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent is likely to keep the content around (otherwise: pass\n      // `hChildren`).\n      else {\n        result = {\n          type: 'element',\n          tagName: hName,\n          properties: {},\n          children: []\n        }\n\n        // To do: next major: take the children from the `root`, or inject the\n        // raw/text/comment or so into the element?\n        // if ('children' in node) {\n        //   // @ts-expect-error: assume `children` are allowed in elements.\n        //   result.children = node.children\n        // } else {\n        //   // @ts-expect-error: assume `node` is allowed in elements.\n        //   result.children.push(node)\n        // }\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      result.properties = {...result.properties, ...hProperties}\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      // @ts-expect-error: assume valid children are defined.\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an mdast node into a hast node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   mdast node.\n * @param {MdastParents | null | undefined} [parent]\n *   Parent of `node`.\n * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n *   Resulting hast node.\n */\n// To do: next major: do not expose, keep bound.\nexport function one(state, node, parent) {\n  const type = node && node.type\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(state.handlers, type)) {\n    return state.handlers[type](state, node, parent)\n  }\n\n  if (state.passThrough && state.passThrough.includes(type)) {\n    // To do: next major: deep clone.\n    // @ts-expect-error: types of passed through nodes are expected to be added manually.\n    return 'children' in node ? {...node, children: all(state, node)} : node\n  }\n\n  if (state.unknownHandler) {\n    return state.unknownHandler(state, node, parent)\n  }\n\n  return defaultUnknownHandler(state, node)\n}\n\n/**\n * Transform the children of an mdast node into hast nodes.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} parent\n *   mdast node to compile\n * @returns {Array<HastElementContent>}\n *   Resulting hast nodes.\n */\n// To do: next major: do not expose, keep bound.\nexport function all(state, parent) {\n  /** @type {Array<HastElementContent>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n    while (++index < nodes.length) {\n      const result = one(state, nodes[index], parent)\n\n      // To do: see if we van clean this? Can we merge texts?\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastText | HastElement}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastText | HastElement} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: all(state, node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | null | undefined} [loose=false]\n *   Whether to add line endings at start and end.\n * @returns {Array<Type | HastText>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<Type | HastText>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n","/**\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef NodeLike\n * @property {PositionLike | null | undefined} [position]\n */\n\n/**\n * Check if `node` is generated.\n *\n * @param {NodeLike | null | undefined} [node]\n *   Node to check.\n * @returns {boolean}\n *   Whether `node` is generated (does not have positional info).\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n","/**\n * @typedef {import('hast').Content} HastContent\n * @typedef {import('hast').Root} HastRoot\n *\n * @typedef {import('mdast').Content} MdastContent\n * @typedef {import('mdast').Root} MdastRoot\n *\n * @typedef {import('./state.js').Options} Options\n */\n\n/**\n * @typedef {HastRoot | HastContent} HastNodes\n * @typedef {MdastRoot | MdastContent} MdastNodes\n */\n\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {HastNodes | null | undefined}\n *   hast tree.\n */\n// To do: next major: always return a single `root`.\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, null)\n  const foot = footer(state)\n\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  // To do: next major: always return root?\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\nexport function footer(state) {\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let index = -1\n\n  while (++index < state.footnoteOrder.length) {\n    const def = state.footnoteById[state.footnoteOrder[index]]\n\n    if (!def) {\n      continue\n    }\n\n    const content = state.all(def)\n    const id = String(def.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let referenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n\n    while (++referenceIndex <= state.footnoteCounts[id]) {\n      /** @type {Element} */\n      const backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            state.clobberPrefix +\n            'fnref-' +\n            safeId +\n            (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: state.footnoteBackLabel\n        },\n        children: [{type: 'text', value: '↩'}]\n      }\n\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{type: 'text', value: String(referenceIndex)}]\n        })\n      }\n\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      backReferences.push(backReference)\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: state.clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(def, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: state.footnoteLabelTagName,\n        properties: {\n          // To do: use structured clone.\n          ...JSON.parse(JSON.stringify(state.footnoteLabelProperties)),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: state.footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\n\n/**\n * Plugin that turns markdown into HTML to support rehype.\n *\n * *   If a destination processor is given, that processor runs with a new HTML\n *     (hast) tree (bridge-mode).\n *     As the given processor runs with a hast tree, and rehype plugins support\n *     hast, that means rehype plugins can be used with the given processor.\n *     The hast tree is discarded in the end.\n *     It’s highly unlikely that you want to do this.\n * *   The common case is to not pass a destination processor, in which case the\n *     current processor continues running with a new HTML (hast) tree\n *     (mutate-mode).\n *     As the current processor continues with a hast tree, and rehype plugins\n *     support hast, that means rehype plugins can be used after\n *     `remark-rehype`.\n *     It’s likely that this is what you want to do.\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype =\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[null|undefined, Options?]|[Options]|[], MdastRoot>)} */\n  (\n    function (destination, options) {\n      return destination && 'run' in destination\n        ? bridge(destination, options)\n        : mutate(destination || options)\n    }\n  )\n\nexport default remarkRehype\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further plugins run on the hast tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned by `toHast`.\n  return (node) => toHast(node, options)\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: null,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootClonable: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n    writingSuggestions: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","import {visit} from 'unist-util-visit'\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n *\n * @callback AllowElement\n * @param {Element} element\n * @param {number} index\n * @param {Element|Root} parent\n * @returns {boolean|undefined}\n *\n * @typedef Options\n * @property {Array<string>} [allowedElements]\n * @property {Array<string>} [disallowedElements=[]]\n * @property {AllowElement} [allowElement]\n * @property {boolean} [unwrapDisallowed=false]\n */\n\n/**\n * @type {import('unified').Plugin<[Options], Root>}\n */\nexport default function rehypeFilter(options) {\n  if (options.allowedElements && options.disallowedElements) {\n    throw new TypeError(\n      'Only one of `allowedElements` and `disallowedElements` should be defined'\n    )\n  }\n\n  if (\n    options.allowedElements ||\n    options.disallowedElements ||\n    options.allowElement\n  ) {\n    return (tree) => {\n      visit(tree, 'element', (node, index, parent_) => {\n        const parent = /** @type {Element|Root} */ (parent_)\n        /** @type {boolean|undefined} */\n        let remove\n\n        if (options.allowedElements) {\n          remove = !options.allowedElements.includes(node.tagName)\n        } else if (options.disallowedElements) {\n          remove = options.disallowedElements.includes(node.tagName)\n        }\n\n        if (!remove && options.allowElement && typeof index === 'number') {\n          remove = !options.allowElement(node, index, parent)\n        }\n\n        if (remove && typeof index === 'number') {\n          if (options.unwrapDisallowed && node.children) {\n            parent.children.splice(index, 1, ...node.children)\n          } else {\n            parent.children.splice(index, 1)\n          }\n\n          return index\n        }\n\n        return undefined\n      })\n    }\n  }\n}\n","/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {unknown} thing\n *   Thing to check (typically `Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`).\n *   If a node is passed it must be a `Text` node, whose `value` field is\n *   checked.\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  const value =\n    // @ts-expect-error looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-expect-error looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://infra.spec.whatwg.org/#ascii-whitespace>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","import StyleToObject from './index.js';\n\nexport default StyleToObject;\n","const protocols = ['http', 'https', 'mailto', 'tel']\n\n/**\n * @param {string} uri\n * @returns {string}\n */\nexport function uriTransformer(uri) {\n  const url = (uri || '').trim()\n  const first = url.charAt(0)\n\n  if (first === '#' || first === '/') {\n    return url\n  }\n\n  const colon = url.indexOf(':')\n  if (colon === -1) {\n    return url\n  }\n\n  let index = -1\n\n  while (++index < protocols.length) {\n    const protocol = protocols[index]\n\n    if (\n      colon === protocol.length &&\n      url.slice(0, protocol.length).toLowerCase() === protocol\n    ) {\n      return url\n    }\n  }\n\n  index = url.indexOf('?')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  index = url.indexOf('#')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  // eslint-disable-next-line no-script-url\n  return 'javascript:void(0)'\n}\n","/**\n * @template T\n * @typedef {import('react').ComponentType<T>} ComponentType<T>\n */\n\n/**\n * @template {import('react').ElementType} T\n * @typedef {import('react').ComponentPropsWithoutRef<T>} ComponentPropsWithoutRef<T>\n */\n\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('./complex-types.js').ReactMarkdownProps} ReactMarkdownProps\n *\n * @typedef Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef Context\n * @property {Options} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @typedef {import('react').HTMLAttributeAnchorTarget} TransformLinkTargetType\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {TransformLinkTargetType|undefined}\n *\n * @typedef {keyof JSX.IntrinsicElements} ReactMarkdownNames\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef {ComponentPropsWithoutRef<'code'> & ReactMarkdownProps & {inline?: boolean}} CodeProps\n * @typedef {ComponentPropsWithoutRef<'h1'> & ReactMarkdownProps & {level: number}} HeadingProps\n * @typedef {ComponentPropsWithoutRef<'li'> & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} LiProps\n * @typedef {ComponentPropsWithoutRef<'ol'> & ReactMarkdownProps & {depth: number, ordered: true}} OrderedListProps\n * @typedef {ComponentPropsWithoutRef<'td'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: false}} TableDataCellProps\n * @typedef {ComponentPropsWithoutRef<'th'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: true}} TableHeaderCellProps\n * @typedef {ComponentPropsWithoutRef<'tr'> & ReactMarkdownProps & {isHeader: boolean}} TableRowProps\n * @typedef {ComponentPropsWithoutRef<'ul'> & ReactMarkdownProps & {depth: number, ordered: false}} UnorderedListProps\n *\n * @typedef {ComponentType<CodeProps>} CodeComponent\n * @typedef {ComponentType<HeadingProps>} HeadingComponent\n * @typedef {ComponentType<LiProps>} LiComponent\n * @typedef {ComponentType<OrderedListProps>} OrderedListComponent\n * @typedef {ComponentType<TableDataCellProps>} TableDataCellComponent\n * @typedef {ComponentType<TableHeaderCellProps>} TableHeaderCellComponent\n * @typedef {ComponentType<TableRowProps>} TableRowComponent\n * @typedef {ComponentType<UnorderedListProps>} UnorderedListComponent\n *\n * @typedef SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableDataCellComponent|ReactMarkdownNames} td\n * @property {TableHeaderCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {Partial<Omit<import('./complex-types.js').NormalComponents, keyof SpecialComponents> & SpecialComponents>} Components\n *\n * @typedef Options\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {null|false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {TransformLinkTargetType|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nimport React from 'react'\nimport ReactIs from 'react-is'\nimport {whitespace} from 'hast-util-whitespace'\nimport {svg, find, hastToReact} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport style from 'style-to-object'\nimport {uriTransformer} from './uri-transformer.js'\n\nconst own = {}.hasOwnProperty\n\n// The table-related elements that must not contain whitespace text according\n// to React.\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr'])\n\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\nexport function childrenToReact(context, node) {\n  /** @type {Array<ReactNode>} */\n  const children = []\n  let childIndex = -1\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n  let child\n\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex]\n\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node))\n    } else if (child.type === 'text') {\n      // Currently, a warning is triggered by react for *any* white space in\n      // tables.\n      // So we drop it.\n      // See: <https://github.com/facebook/react/pull/7081>.\n      // See: <https://github.com/facebook/react/pull/7515>.\n      // See: <https://github.com/remarkjs/remark-react/issues/64>.\n      // See: <https://github.com/remarkjs/react-markdown/issues/576>.\n      if (\n        node.type !== 'element' ||\n        !tableElements.has(node.tagName) ||\n        !whitespace(child)\n      ) {\n        children.push(child.value)\n      }\n    } else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      children.push(child.value)\n    }\n  }\n\n  return children\n}\n\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\nfunction toReact(context, node, index, parent) {\n  const options = context.options\n  const transform =\n    options.transformLinkUri === undefined\n      ? uriTransformer\n      : options.transformLinkUri\n  const parentSchema = context.schema\n  /** @type {ReactMarkdownNames} */\n  // @ts-expect-error assume a known HTML/SVG element.\n  const name = node.tagName\n  /** @type {Record<string, unknown>} */\n  const properties = {}\n  let schema = parentSchema\n  /** @type {string} */\n  let property\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg\n    context.schema = schema\n  }\n\n  if (node.properties) {\n    for (property in node.properties) {\n      if (own.call(node.properties, property)) {\n        addProperty(properties, property, node.properties[property], context)\n      }\n    }\n  }\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++\n  }\n\n  const children = childrenToReact(context, node)\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--\n  }\n\n  // Restore parent schema.\n  context.schema = parentSchema\n\n  // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the position interface.\n  const position = node.position || {\n    start: {line: null, column: null, offset: null},\n    end: {line: null, column: null, offset: null}\n  }\n  const component =\n    options.components && own.call(options.components, name)\n      ? options.components[name]\n      : name\n  const basic = typeof component === 'string' || component === React.Fragment\n\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(\n      `Component for name \\`${name}\\` not defined or is not renderable`\n    )\n  }\n\n  properties.key = index\n\n  if (name === 'a' && options.linkTarget) {\n    properties.target =\n      typeof options.linkTarget === 'function'\n        ? options.linkTarget(\n            String(properties.href || ''),\n            node.children,\n            typeof properties.title === 'string' ? properties.title : null\n          )\n        : options.linkTarget\n  }\n\n  if (name === 'a' && transform) {\n    properties.href = transform(\n      String(properties.href || ''),\n      node.children,\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (\n    !basic &&\n    name === 'code' &&\n    parent.type === 'element' &&\n    parent.tagName !== 'pre'\n  ) {\n    properties.inline = true\n  }\n\n  if (\n    !basic &&\n    (name === 'h1' ||\n      name === 'h2' ||\n      name === 'h3' ||\n      name === 'h4' ||\n      name === 'h5' ||\n      name === 'h6')\n  ) {\n    properties.level = Number.parseInt(name.charAt(1), 10)\n  }\n\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri(\n      String(properties.src || ''),\n      String(properties.alt || ''),\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (!basic && name === 'li' && parent.type === 'element') {\n    const input = getInputElement(node)\n    properties.checked =\n      input && input.properties ? Boolean(input.properties.checked) : null\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.ordered = parent.tagName === 'ol'\n  }\n\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol'\n    properties.depth = context.listDepth\n  }\n\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {}\n      // @ts-expect-error assume `style` is an object\n      properties.style.textAlign = properties.align\n      delete properties.align\n    }\n\n    if (!basic) {\n      properties.isHeader = name === 'th'\n    }\n  }\n\n  if (!basic && name === 'tr' && parent.type === 'element') {\n    properties.isHeader = Boolean(parent.tagName === 'thead')\n  }\n\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position)\n  }\n\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position\n  }\n\n  // If `includeElementIndex` is given, pass node index info to components.\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.siblingCount = getElementsBeforeCount(parent)\n  }\n\n  if (!basic) {\n    properties.node = node\n  }\n\n  // Ensure no React warnings are emitted for void elements w/ children.\n  return children.length > 0\n    ? React.createElement(component, properties, children)\n    : React.createElement(component, properties)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\nfunction getInputElement(node) {\n  let index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child\n    }\n  }\n\n  return null\n}\n\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1\n  let count = 0\n\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break\n    if (parent.children[index].type === 'element') count++\n  }\n\n  return count\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\nfunction addProperty(props, prop, value, ctx) {\n  const info = find(ctx.schema, prop)\n  let result = value\n\n  // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n  if (result === null || result === undefined || result !== result) {\n    return\n  }\n\n  // Accept `array`.\n  // Most props are space-separated.\n  if (Array.isArray(result)) {\n    result = info.commaSeparated ? commas(result) : spaces(result)\n  }\n\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result)\n  }\n\n  if (info.space && info.property) {\n    props[\n      own.call(hastToReact, info.property)\n        ? hastToReact[info.property]\n        : info.property\n    ] = result\n  } else if (info.attribute) {\n    props[info.attribute] = result\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Record<string, string>}\n */\nfunction parseStyle(value) {\n  /** @type {Record<string, string>} */\n  const result = {}\n\n  try {\n    style(value, iterator)\n  } catch {\n    // Silent.\n  }\n\n  return result\n\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? `ms-${name.slice(4)}` : name\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v\n  }\n}\n\n/**\n * @param {unknown} _\n * @param {string} $1\n */\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * @param {Position|{start: {line: null, column: null, offset: null}, end: {line: null, column: null, offset: null}}} pos\n * @returns {string}\n */\nfunction flattenPosition(pos) {\n  return [\n    pos.start.line,\n    ':',\n    pos.start.column,\n    '-',\n    pos.end.line,\n    ':',\n    pos.end.column\n  ]\n    .map(String)\n    .join('')\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('react').ReactElement<{}>} ReactElement\n * @typedef {import('unified').PluggableList} PluggableList\n * @typedef {import('hast').Root} Root\n * @typedef {import('./rehype-filter.js').Options} FilterOptions\n * @typedef {import('./ast-to-react.js').Options} TransformOptions\n *\n * @typedef CoreOptions\n * @property {string} children\n *\n * @typedef PluginOptions\n * @property {PluggableList} [remarkPlugins=[]]\n * @property {PluggableList} [rehypePlugins=[]]\n * @property {import('remark-rehype').Options | undefined} [remarkRehypeOptions={}]\n *\n * @typedef LayoutOptions\n * @property {string} [className]\n *\n * @typedef {CoreOptions & PluginOptions & LayoutOptions & FilterOptions & TransformOptions} ReactMarkdownOptions\n *\n * @typedef Deprecation\n * @property {string} id\n * @property {string} [to]\n */\n\nimport React from 'react'\nimport {VFile} from 'vfile'\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport PropTypes from 'prop-types'\nimport {html} from 'property-information'\nimport rehypeFilter from './rehype-filter.js'\nimport {childrenToReact} from './ast-to-react.js'\n\nconst own = {}.hasOwnProperty\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {Record<string, Deprecation>} */\nconst deprecated = {\n  plugins: {to: 'remarkPlugins', id: 'change-plugins-to-remarkplugins'},\n  renderers: {to: 'components', id: 'change-renderers-to-components'},\n  astPlugins: {id: 'remove-buggy-html-in-markdown-parser'},\n  allowDangerousHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  escapeHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  source: {to: 'children', id: 'change-source-to-children'},\n  allowNode: {\n    to: 'allowElement',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  allowedTypes: {\n    to: 'allowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  disallowedTypes: {\n    to: 'disallowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  includeNodeIndex: {\n    to: 'includeElementIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  }\n}\n\n/**\n * React component to render markdown.\n *\n * @param {ReactMarkdownOptions} options\n * @returns {ReactElement}\n */\nexport function ReactMarkdown(options) {\n  for (const key in deprecated) {\n    if (own.call(deprecated, key) && own.call(options, key)) {\n      const deprecation = deprecated[key]\n      console.warn(\n        `[react-markdown] Warning: please ${\n          deprecation.to ? `use \\`${deprecation.to}\\` instead of` : 'remove'\n        } \\`${key}\\` (see <${changelog}#${deprecation.id}> for more info)`\n      )\n      delete deprecated[key]\n    }\n  }\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(options.remarkPlugins || [])\n    .use(remarkRehype, {\n      ...options.remarkRehypeOptions,\n      allowDangerousHtml: true\n    })\n    .use(options.rehypePlugins || [])\n    .use(rehypeFilter, options)\n\n  const file = new VFile()\n\n  if (typeof options.children === 'string') {\n    file.value = options.children\n  } else if (options.children !== undefined && options.children !== null) {\n    console.warn(\n      `[react-markdown] Warning: please pass a string as \\`children\\` (not: \\`${options.children}\\`)`\n    )\n  }\n\n  const hastNode = processor.runSync(processor.parse(file), file)\n\n  if (hastNode.type !== 'root') {\n    throw new TypeError('Expected a `root` node')\n  }\n\n  /** @type {ReactElement} */\n  let result = React.createElement(\n    React.Fragment,\n    {},\n    childrenToReact({options, schema: html, listDepth: 0}, hastNode)\n  )\n\n  if (options.className) {\n    result = React.createElement('div', {className: options.className}, result)\n  }\n\n  return result\n}\n\nReactMarkdown.propTypes = {\n  // Core options:\n  children: PropTypes.string,\n  // Layout options:\n  className: PropTypes.string,\n  // Filter options:\n  allowElement: PropTypes.func,\n  allowedElements: PropTypes.arrayOf(PropTypes.string),\n  disallowedElements: PropTypes.arrayOf(PropTypes.string),\n  unwrapDisallowed: PropTypes.bool,\n  // Plugin options:\n  remarkPlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  rehypePlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  // Transform options:\n  sourcePos: PropTypes.bool,\n  rawSourcePos: PropTypes.bool,\n  skipHtml: PropTypes.bool,\n  includeElementIndex: PropTypes.bool,\n  transformLinkUri: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  linkTarget: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  transformImageUri: PropTypes.func,\n  components: PropTypes.object\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getListItemIconUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemIcon', slot);\n}\nconst listItemIconClasses = generateUtilityClasses('MuiListItemIcon', ['root', 'alignItemsFlexStart']);\nexport default listItemIconClasses;","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTypographyUtilityClass(slot) {\n  return generateUtilityClass('MuiTypography', slot);\n}\nconst typographyClasses = generateUtilityClasses('MuiTypography', ['root', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'inherit', 'button', 'caption', 'overline', 'alignLeft', 'alignRight', 'alignCenter', 'alignJustify', 'noWrap', 'gutterBottom', 'paragraph']);\nexport default typographyClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"align\", \"className\", \"component\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { extendSxProp } from '@mui/system/styleFunctionSx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport capitalize from '../utils/capitalize';\nimport { getTypographyUtilityClass } from './typographyClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, ownerState.align !== 'inherit' && `align${capitalize(align)}`, gutterBottom && 'gutterBottom', noWrap && 'noWrap', paragraph && 'paragraph']\n  };\n  return composeClasses(slots, getTypographyUtilityClass, classes);\n};\nexport const TypographyRoot = styled('span', {\n  name: 'MuiTypography',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.variant && styles[ownerState.variant], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.noWrap && styles.noWrap, ownerState.gutterBottom && styles.gutterBottom, ownerState.paragraph && styles.paragraph];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 0\n}, ownerState.variant === 'inherit' && {\n  // Some elements, like <button> on Chrome have default font that doesn't inherit, reset this.\n  font: 'inherit'\n}, ownerState.variant !== 'inherit' && theme.typography[ownerState.variant], ownerState.align !== 'inherit' && {\n  textAlign: ownerState.align\n}, ownerState.noWrap && {\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap'\n}, ownerState.gutterBottom && {\n  marginBottom: '0.35em'\n}, ownerState.paragraph && {\n  marginBottom: 16\n}));\nconst defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p',\n  inherit: 'p'\n};\n\n// TODO v6: deprecate these color values in v5.x and remove the transformation in v6\nconst colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\nconst Typography = /*#__PURE__*/React.forwardRef(function Typography(inProps, ref) {\n  const themeProps = useDefaultProps({\n    props: inProps,\n    name: 'MuiTypography'\n  });\n  const color = transformDeprecatedColors(themeProps.color);\n  const props = extendSxProp(_extends({}, themeProps, {\n    color\n  }));\n  const {\n      align = 'inherit',\n      className,\n      component,\n      gutterBottom = false,\n      noWrap = false,\n      paragraph = false,\n      variant = 'body1',\n      variantMapping = defaultVariantMapping\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    align,\n    color,\n    className,\n    component,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    variantMapping\n  });\n  const Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TypographyRoot, _extends({\n    as: Component,\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Set the text-align on the component.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the text will have a bottom margin.\n   * @default false\n   */\n  gutterBottom: PropTypes.bool,\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   * @default false\n   */\n  noWrap: PropTypes.bool,\n  /**\n   * If `true`, the element will be a paragraph element.\n   * @default false\n   */\n  paragraph: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Applies the theme typography styles.\n   * @default 'body1'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string]),\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   * @default {\n   *   h1: 'h1',\n   *   h2: 'h2',\n   *   h3: 'h3',\n   *   h4: 'h4',\n   *   h5: 'h5',\n   *   h6: 'h6',\n   *   subtitle1: 'h6',\n   *   subtitle2: 'h6',\n   *   body1: 'p',\n   *   body2: 'p',\n   *   inherit: 'p',\n   * }\n   */\n  variantMapping: PropTypes /* @typescript-to-proptypes-ignore */.object\n} : void 0;\nexport default Typography;","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n"],"names":["getDividerUtilityClass","slot","generateUtilityClass","generateUtilityClasses","u","b","Symbol","for","c","d","e","f","g","h","k","l","m","n","p","q","t","v","a","r","$$typeof","type","exports","ContextConsumer","ContextProvider","Element","ForwardRef","Fragment","Lazy","Memo","Portal","Profiler","StrictMode","Suspense","SuspenseList","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isMemo","isPortal","isProfiler","isStrictMode","isSuspense","isSuspenseList","isValidElementType","getModuleId","typeOf","getListUtilityClass","_excluded","ListRoot","styled","name","overridesResolver","props","styles","ownerState","root","disablePadding","padding","dense","subheader","_ref","_extends","listStyle","margin","position","paddingTop","paddingBottom","React","inProps","ref","useDefaultProps","children","className","component","other","_objectWithoutPropertiesLoose","context","classes","slots","composeClasses","useUtilityClasses","_jsx","ListContext","Provider","value","_jsxs","as","clsx","nextItem","list","item","disableListWrap","firstChild","nextElementSibling","previousItem","lastChild","previousElementSibling","textCriteriaMatches","nextFocus","textCriteria","undefined","text","innerText","textContent","trim","toLowerCase","length","repeating","keys","indexOf","join","moveFocus","currentFocus","disabledItemsFocusable","traversalFunction","wrappedOnce","nextFocusDisabled","disabled","getAttribute","hasAttribute","focus","actions","autoFocus","autoFocusItem","onKeyDown","variant","listRef","textCriteriaRef","previousKeyMatched","lastTime","useEnhancedEffect","current","adjustStyleForScrollbar","containerElement","direction","noExplicitWidth","style","width","clientHeight","scrollbarSize","getScrollbarSize","ownerDocument","handleRef","useForkRef","activeItemIndex","forEach","child","index","selected","muiSkipListHighlight","items","map","newChildProps","tabIndex","List","role","event","key","activeElement","preventDefault","criteria","lowerKey","currTime","performance","now","push","keepFocusOnCurrent","stringify","values","options","settings","padRight","padLeft","trough","fns","pipeline","run","_len","arguments","Array","_key","middlewareIndex","callback","pop","TypeError","next","error","fn","_len2","output","_key2","middleware","called","wrapped","_len3","parameters","_key3","fnExpectsCallback","result","done","apply","this","then","Error","_len4","_key4","wrap","use","middelware","getListItemTextUtilityClass","getMenuItemUtilityClass","MenuItemRoot","ButtonBase","shouldForwardProp","prop","rootShouldForwardProp","divider","disableGutters","gutters","theme","typography","body1","display","justifyContent","alignItems","textDecoration","minHeight","boxSizing","whiteSpace","paddingLeft","paddingRight","borderBottom","vars","palette","backgroundClip","backgroundColor","action","hover","menuItemClasses","primary","mainChannel","selectedOpacity","alpha","main","focusVisible","focusOpacity","hoverOpacity","opacity","disabledOpacity","dividerClasses","marginTop","spacing","marginBottom","inset","marginLeft","listItemTextClasses","listItemIconClasses","minWidth","breakpoints","up","body2","fontSize","focusVisibleClassName","tabIndexProp","childContext","menuItemRef","composedClasses","parse","require","StyleToObject","iterator","declaration","property","declarations","hasIterator","i","len","module","hasOwn","Object","prototype","hasOwnProperty","toStr","toString","defineProperty","gOPD","getOwnPropertyDescriptor","isArray","arr","call","isPlainObject","obj","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","enumerable","configurable","newValue","writable","getProperty","extend","src","copy","copyIsArray","clone","deep","isBuffer","doc","documentWidth","documentElement","clientWidth","Math","abs","window","innerWidth","element","document","createElement","decodeNamedCharacterReference","characterReference","innerHTML","character","charCodeAt","stringifyPosition","point","line","column","pos","start","end","VFileMessage","reason","place","origin","parts","super","slice","message","stack","fatal","source","ruleId","file","actual","expected","url","note","path","basename","ext","assertPath","seenNonSlash","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","code","joined","segments","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","lastIndexOf","normalizeString","normalize","sep","JSON","proc","cwd","isUrl","fileUrlOrPath","href","urlToPath","URL","protocol","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","order","VFile","bufferLike","buffer","data","messages","history","stored","includes","assertNonEmpty","assertPart","stem","encoding","info","fail","part","unified","base","transformers","attachers","frozen","namespace","freezeIndex","processor","assertUnfrozen","own","Parser","Compiler","freeze","attacher","transformer","Number","POSITIVE_INFINITY","addPlugin","addList","addPreset","assign","add","plugin","plugins","entry","isPlainObj","vfile","assertParser","newable","String","node","assertCompiler","assertNode","compile","Promise","executor","resolve","reject","tree","runSync","complete","assertDone","bail","process","processSync","destination","asyncName","Boolean","looksLikeAVFile","emptyOptions","one","includeImageAlt","includeHtml","alt","all","splice","remove","chunkStart","from","unshift","syntaxExtension","extension","hook","left","right","constructs","existing","before","asciiAlpha","regexCheck","asciiAlphanumeric","asciiAtext","asciiControl","asciiDigit","asciiHexDigit","asciiPunctuation","markdownLineEnding","markdownLineEndingOrSpace","markdownSpace","unicodePunctuation","unicodeWhitespace","regex","test","fromCharCode","factorySpace","effects","ok","max","limit","size","enter","prefix","consume","exit","content","tokenize","contentStart","attempt","parser","contentInitial","lineStart","previous","token","contentType","self","childFlow","childToken","lineStartOffset","continued","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","events","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","check","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","offset","containerContinue","flow","_tokenizer","flowContinue","writeToChild","eof","stream","sliceStream","defineSkip","write","seen","nok","disable","null","blankLine","after","partial","subtokenize","jumps","lineIndex","otherIndex","otherEvent","subevents","more","_isInFirstContentOfListItem","subcontent","_container","eventIndex","startPosition","startPositions","tokenizer","childEvents","gaps","adjust","breaks","_gfmTasklistFirstContentOfListItem","chunkInside","contentEnd","continuationConstruct","contentContinue","prefixed","tail","sliceSerialize","initial","flowInitial","afterConstruct","resolver","resolveAll","createResolver","string","initializeFactory","field","notText","atBreak","resolveAllLineSuffixes","extraResolver","chunks","tabs","bufferIndex","chunk","_index","_bufferIndex","createTokenizer","initialize","columnStart","resolveAllConstructs","consumed","accountForPotentialSkip","fields","constructFactory","construct","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","expectedCode","state","startIndex","startBufferIndex","endIndex","endBufferIndex","view","head","shift","sliceChunks","chunkIndex","go","_","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","create","resolveTo","thematicBreak","marker","sequence","initialSize","kind","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","notBlank","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","open","contBefore","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","enclosedBefore","raw","enclosed","enclosedEscape","rawEscape","factoryLabel","markerType","labelInside","labelEscape","factoryTitle","begin","escape","factoryWhitespace","normalizeIdentifier","replace","toUpperCase","definition","identifier","labelAfter","markerAfter","destinationBefore","destinationAfter","titleBefore","afterWhitespace","defined","beforeMarker","titleAfter","titleAfterOptionalWhitespace","codeIndented","afterPrefix","furtherStart","headingAtx","sequenceOpen","sequenceFurther","setextUnderline","paragraph","heading","htmlBlockNames","htmlRawNames","htmlFlow","closingTag","markerB","declarationOpen","tagCloseStart","continuationDeclarationInside","tagName","commentOpenInside","cdataOpenInside","slash","basicSelfClosing","completeClosingTagAfter","completeAttributeNameBefore","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCdataInside","continuationStart","blankLineBefore","continuationAfter","nonLazyContinuationStart","continuationStartNonLazy","continuationBefore","continuationRawEndTag","nonLazyContinuation","codeFenced","closeStart","startBefore","beforeSequenceClose","sequenceClose","sizeOpen","sequenceCloseAfter","initialPrefix","beforeSequenceOpen","infoBefore","atNonLazyBreak","metaBefore","meta","contentBefore","beforeContentChunk","contentChunk","numeric","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","labelEndNok","resourceConstruct","labelEndOk","referenceFullConstruct","referenceNotFull","referenceCollapsedConstruct","close","media","group","label","insideSpan","resourceBefore","resourceOpen","resourceEnd","resourceDestinationAfter","resourceDestinationMissing","resourceBetween","resourceTitleAfter","referenceFullAfter","referenceFullMissing","referenceCollapsedOpen","labelStartImage","classifyCharacter","attention","attentionMarkers","_open","_close","openingSequence","closingSequence","nextEvents","movePoint","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","instruction","tagOpen","commentEnd","comment","commentClose","lineEndingBefore","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","lineEndingAfter","lineEndingAfterPrefix","labelStartLink","hardBreakEscape","codeText","between","tailExitIndex","headEnterIndex","resolveText","extensions","combineExtensions","defaultConstructs","search","decodeNumericCharacterReference","parseInt","characterEscapeOrReference","decode","$0","$1","$2","hex","fromMarkdown","config","transforms","canContainEols","opener","link","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","html","htmlFlowData","htmlTextData","image","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","resource","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","configure","mdastExtensions","tokenStack","resume","setData","getData","listStack","prepareList","handler","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","and","errorHandler","onExitError","lang","title","depth","referenceType","ancestor","decodeString","fragment","ordered","spread","checked","compiler","postprocess","atCarriageReturn","match","endPosition","lastIndex","exec","ceil","preprocess","combined","remarkParse","normalizeUri","skip","encodeURIComponent","convert","castFactory","typeFactory","tests","checks","any","anyFactory","propsFactory","CONTINUE","EXIT","visitParents","visitor","reverse","is","step","factory","parents","visit","subresult","grandparents","toResult","concat","parent","pointStart","pointEnd","clean","footnoteReference","id","safeId","footnoteOrder","counter","footnoteCounts","reuseCounter","properties","clobberPrefix","dataFootnoteRef","ariaDescribedBy","patch","sup","applyData","revert","subtype","suffix","contents","listItemLoose","handlers","blockquote","break","delete","footnote","footnoteById","no","dangerous","imageReference","inlineCode","linkReference","results","loose","listLoose","table","rows","firstRow","tableContent","body","tableCell","tableRow","siblings","align","cellIndex","cells","cell","alignValue","trimLines","toml","ignore","yaml","footnoteDefinition","createState","allowDangerousHtml","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","footnoteBackLabel","unknownHandler","passThrough","cache","definitions","augment","hName","hProperties","hChildren","ctx","generated","to","defaultUnknownHandler","nodes","toHast","foot","listItems","referenceIndex","backReferences","backReference","dataFootnoteBackref","ariaLabel","tailTail","dataFootnotes","footer","bridge","mutate","Schema","normal","space","merge","Info","attribute","boolean","booleanish","overloadedBoolean","number","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","powers","increment","types","DefinedInfo","mask","mark","transform","attributes","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","async","autoCapitalize","autoComplete","autoPlay","blocking","capture","charSet","cite","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","default","defer","dir","dirName","download","draggable","encType","enterKeyHint","fetchPriority","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inert","inputMode","integrity","isMap","itemId","itemProp","itemRef","itemScope","itemType","language","loading","loop","low","manifest","maxLength","method","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeToggle","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","pattern","ping","placeholder","playsInline","popover","popoverTarget","popoverTargetAction","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rowSpan","sandbox","scope","scoped","seamless","shadowRootClonable","shadowRootDelegatesFocus","shadowRootMode","shape","sizes","span","spellCheck","srcDoc","srcLang","srcSet","translate","typeMustMatch","useMap","writingSuggestions","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","char","charOff","classId","clear","codeBase","codeType","color","compact","declare","face","frame","frameBorder","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","object","profile","prompt","rev","rightMargin","rules","scheme","scrolling","standby","summary","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textRendering","transformOrigin","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filter","filterRes","filterUnits","focusable","focusHighlight","format","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","operator","orient","orientation","overflow","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","htmlBase","svgBase","rehypeFilter","allowedElements","disallowedElements","allowElement","parent_","unwrapDisallowed","whitespace","thing","valid","dash","cap","kebab","camelcase","charAt","hastToReact","protocols","uriTransformer","uri","first","colon","tableElements","Set","childrenToReact","childIndex","toReact","has","skipHtml","transformLinkUri","parentSchema","schema","addProperty","listDepth","components","basic","ReactIs","linkTarget","inline","level","transformImageUri","input","getInputElement","getElementsBeforeCount","textAlign","isHeader","sourcePos","rawSourcePos","sourcePosition","includeElementIndex","siblingCount","count","Type","rest","dashes","find","commas","spaces","styleReplacer","parseStyle","changelog","deprecated","renderers","astPlugins","escapeHtml","allowNode","allowedTypes","disallowedTypes","includeNodeIndex","ReactMarkdown","deprecation","console","warn","remarkPlugins","remarkRehype","remarkRehypeOptions","rehypePlugins","hastNode","propTypes","PropTypes","getPrototypeOf","toStringTag","getListItemIconUtilityClass","tab","last","lines","trimLine","codePointAt","getTypographyUtilityClass","TypographyRoot","capitalize","gutterBottom","font","textOverflow","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","inherit","colorTransformations","textPrimary","secondary","textSecondary","themeProps","transformDeprecatedColors","extendSxProp","variantMapping","Component","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","str","lineno","updatePosition","Position","errorsList","msg","err","filename","silent","re","comments","val","ret","decl","decls"],"sourceRoot":""}