{"version":3,"file":"static/js/trajectory.2598163a.chunk.js","mappings":"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","sources":["webpack://mdposit/./src/components/animated-card/style.module.css?d4d9","components/animated-card/index.js","components/ngl-viewer/use-epitopes-representations/index.js","components/ngl-viewer/use-mutations-representations/index.js","utils/load-custom-element/index.js","utils/hash-from-string/index.js","utils/color-from-string/index.js","utils/merge-intervals/index.js","components/chain-analyses/process-ipscan-results/index.js","components/chain-analyses/react-interpro-track/index.js","webpack://mdposit/./src/components/chain-analyses/style.module.css?fa4e","components/chain-analyses/index.js","webpack://mdposit/./src/components/domains/style.module.css?a054","components/domains/index.js","webpack://mdposit/./src/pages/accession/trajectory/style.module.css?3307","pages/accession/trajectory/index.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","../node_modules/@mui/material/InputAdornment/inputAdornmentClasses.js","../node_modules/@mui/material/InputAdornment/InputAdornment.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"style_container__M9GCG\"};","import React, { useLayoutEffect, useRef, forwardRef } from 'react';\nimport { Card } from '@mui/material';\n\nimport reducedMotion from '../../utils/reduced-motion';\n\nimport style from './style.module.css';\n\nconst KEYFRAMES = { opacity: [0, 1] };\n\nif (!reducedMotion()) {\n  KEYFRAMES.transform = ['translateY(50px)', 'translateY(0)'];\n}\n\nconst ANIMATION_OPTIONS = {\n  fill: 'both',\n  easing: 'cubic-bezier(0, .99, .56, 1.1)',\n  duration: 500,\n};\n\n// Make the card appear and slide softly from down to up when the page is loaded\nconst AnimatedCard = forwardRef(({ overrideComponent, ...props }, ref) => {\n  const containerRef = useRef(null);\n\n  useLayoutEffect(() => {\n    const node = containerRef.current && containerRef.current.firstElementChild;\n    if (!(node && node.animate)) return;\n\n    const index = Array.from(\n      document.querySelectorAll('main section'),\n    ).findIndex(section => node === section);\n\n    const animation = node.animate(KEYFRAMES, {\n      ...ANIMATION_OPTIONS,\n      delay: index * 150,\n    });\n\n    return () => animation.cancel();\n  }, []);\n\n  const Component = overrideComponent ? 'section' : Card;\n\n  return (\n    <div ref={containerRef} className={style.container}>\n      <Component component=\"section\" {...props} ref={ref} />\n    </div>\n  );\n});\n\nexport default AnimatedCard;\n","import { useContext, useMemo } from 'react';\n\nimport { ProjectCtx } from '../../../contexts';\n\n// Use this hook to get the memoized NGL default representations\nconst useEpitopesRepresentations = () => {\n  // Get the current project data\n  const { topology } = useContext(ProjectCtx);\n  // Set the representations for the NGL viewer\n  const epitopesRepresentations = useMemo(() => {\n    if (!topology) return;\n    // Check that at least one of the protein references has epitopes\n    const anyReferenceEpitopes = topology.proteinReferences.some(\n      reference => !!reference.epitopes,\n    );\n    if (!anyReferenceEpitopes) return;\n    // Get the residues on each reference epitopes in the current topology numeration\n    const mappedResiduesPerReference = topology.proteinReferences.map(reference => {\n      // Get the reference name and epitopes\n      const referenceId = reference.uniprot;\n      const referenceEpitopes = reference.epitopes;\n      if (!referenceEpitopes) return [];\n      // Save all epitope residues together and eliminate duplicates\n      const epitopeResidues = Object.values(referenceEpitopes).map(\n        epitope => epitope.residues,\n      );\n      const allResidues = [].concat.apply([], epitopeResidues);\n      const uniqueResidues = Array.from(new Set(allResidues));\n      const mappedResidues = topology.getReferenceResidueIndices(\n        referenceId,\n        uniqueResidues,\n      );\n      if (!mappedResidues) return [];\n      return mappedResidues;\n    });\n    // Join all previous mapped residues together\n    const allMappedResidues = [].concat.apply(\n      [],\n      Object.values(mappedResiduesPerReference),\n    );\n    // Transform mapped residues indices to an NGL selection\n    const { rangedSelection, small } = topology.residueIndices2Ngl(\n      allMappedResidues,\n    );\n    const reps = [\n      {\n        name: 'Epitopes',\n        selection: rangedSelection || 'none',\n        type: small ? 'licorice' : 'cartoon',\n        color: 'purple',\n      },\n    ];\n    return reps;\n  }, [topology]);\n\n  return epitopesRepresentations;\n};\n\nexport default useEpitopesRepresentations;\n","import { useContext, useMemo } from 'react';\n\nimport { ColormakerRegistry } from 'ngl';\n\nimport { color as d3color, scaleLinear } from 'd3';\n\nimport { ProjectCtx } from '../../../contexts';\n\n// Set the color of each residue in the NGL representation\n// WARNING: Grey looks better than white because the background may be white and resdiues are hard to see\nconst greyColorPlan = ['grey', 'yellow', 'red'];\n\n// Use this hook to get the memoized NGL default representations\nconst useMutationsRepresentations = () => {\n  // Get project data\n  const { topology: topologyManager } = useContext(ProjectCtx);\n\n  // Set the representations for the NGL viewer\n  const mutationRepresentations = useMemo(() => {\n    if (!topologyManager) return;\n    // Check that at least 1 of the references has entropies\n    const anyReferenceMutations = topologyManager.proteinReferences.some(\n      reference => !!reference.entropies,\n    );\n    if (!anyReferenceMutations) return;\n\n    // Get the entorpies of each reference\n    // Save the logarithmic values on each reference\n    const entropiesPerReference = topologyManager.proteinReferences.map(reference => {\n      if (!reference.entropies) return [];\n      const logarithmicEntropies = reference.entropies.map(entropy =>\n        Math.log(entropy + 0.0001),\n      );\n      reference.logarithmicEntropies = logarithmicEntropies;\n      return logarithmicEntropies;\n    });\n\n    // Save all array values together just to check the minimum and maximum values\n    const allEntropies = [].concat.apply([], entropiesPerReference);\n    const max = Math.max(...allEntropies);\n    const min = Math.min(...allEntropies);\n\n    // Set the color scale according to the maximum and minimum means\n    const colorScale = scaleLinear()\n      .range(greyColorPlan)\n      .domain([min, (min + max) / 2, max]);\n\n    const colorScheme = ColormakerRegistry.addScheme(function(params) {\n      this.atomColor = atom => {\n        // Find the residue index and then the entropy for this residue\n        // WARNING: atom.residueIndex starts the count at 0 although it may seem that starts at 1\n        // WARNING: It may happen that the first residue is a capping terminal and it is skipped\n        // WARNING: The cartoon representation would skip the non-standard residue and start by 1\n        const residueIndex = atom.residueIndex;\n        const residue = topologyManager.getResidueByIndex(residueIndex);\n        const referenceId = residue.referenceId;\n        // If no reference residue was found then paint it white\n        if (!referenceId) return parseInt('ffffff', 16);\n        // get the corresponding entropy\n        // -1 because the residue 'x' would be the index 'x-1' in the array\n        const reference = residue.referenceData;\n        const entropies = reference.logarithmicEntropies;\n        if (!entropies || entropies.length === 0) return parseInt('ffffff', 16);\n        const entropy = entropies[residue.referenceNumber - 1];\n        // If there is no entropy at this point probably there is something wrong with the map\n        if (!entropy) return parseInt('ffffff', 16);\n        // Calculate the interpolated rgb for this value\n        // The interpolated color comes in rbg format\n        const hexColor = d3color(colorScale(entropy)).formatHex();\n        // The color interpolation returns a string like '#000000'\n        // We remove the first character ('#') and parse it to integer from hexadecimal\n        const color = parseInt(hexColor.substring(1), 16);\n        return color;\n      };\n    });\n\n    const reps = [\n      { name: 'Mutations', color: 'custom', customScheme: colorScheme },\n    ];\n    return reps;\n  }, [topologyManager]);\n\n  return mutationRepresentations;\n};\n\nexport default useMutationsRepresentations;\n","const loadCustomElement = importer => ({\n  async as(namespace) {\n    let _namespace = namespace;\n    // load custom element script\n    let customElement = await importer();\n    if (customElement.default) customElement = customElement.default;\n    // if no name was specified, use default provided by the custom element\n    if (\n      !_namespace &&\n      customElement.is &&\n      typeof customElement.is === 'string'\n    ) {\n      _namespace = customElement.is;\n    }\n    // if we get to this point without any name, just give up\n    if (!_namespace) {\n      throw new Error('Please a specify a name for custom element');\n    }\n    // check if not already defined\n    const alreadyExisting = window.customElements.get(_namespace);\n    if (alreadyExisting) {\n      // if it was, with the same element, everything is fine\n      if (alreadyExisting === customElement) return _namespace;\n      throw new Error('This name is already used by another component');\n    }\n    window.customElements.define(_namespace, customElement);\n    return _namespace;\n  },\n});\n\nexport default loadCustomElement;\n","const hashFromString = string => {\n  let hash = 0;\n  for (let i = 0; i < string.length; i++) {\n    hash = (hash << 5) - hash + string.charCodeAt(i);\n    hash |= 0;\n  }\n  return hash;\n};\n\nexport default hashFromString;\n","import hashFromString from '../hash-from-string';\n\nconst colorFromString = string => {\n  const hash = hashFromString(string);\n  const hue = Math.abs(hash % 360);\n  const saturation = Math.abs(hash % 20) + 40; // 50% give or take 10%\n  const lightness = Math.abs(hash % 10) + 45; // 50% give or take 5%\n  return `hsla(${hue}, ${saturation}%, ${lightness}%, 1)`;\n};\n\nexport default colorFromString;\n","const startAccessorDefault = (interval, value) =>\n  Number.isFinite(value) ? (interval[0] = value) : interval[0];\nconst endAccessorDefault = (interval, value) =>\n  Number.isFinite(value) ? (interval[1] = value) : interval[1];\n\nconst mergeIntervals = (\n  intervals,\n  startAccessor = startAccessorDefault,\n  endAccessor = endAccessorDefault,\n) => {\n  const sortedIntervals = Array.from(intervals).sort(\n    (a, b) => startAccessor(a) - startAccessor(b),\n  );\n  let output = [];\n  let current;\n  for (const interval of sortedIntervals) {\n    if (!current) {\n      // first loop\n      current = interval;\n    } else if (endAccessor(current) < startAccessor(interval)) {\n      // current is not within interval\n      output.push(current);\n      current = interval;\n    } else {\n      // current is within, or contiguous to interval\n      endAccessor(\n        current,\n        Math.max(endAccessor(current), endAccessor(interval)),\n      );\n    }\n  }\n  if (current) output.push(current);\n  return output;\n};\n\nexport default mergeIntervals;\n","import colorFromString from '../../../utils/color-from-string';\nimport mergeIntervals from '../../../utils/merge-intervals';\n\n// Renumerate residue numbers to make them match the actual chain they come from\nconst shiftLocations = (fragments, shift) => {\n  fragments.forEach(fragment => {\n    fragment.start += shift;\n    fragment.end += shift;\n  })\n  return fragments;\n}\n\nconst processLocations = (locations, firstResidueNumber = 1) =>\n  locations.map(location => ({\n    fragments: shiftLocations(location['location-fragments'], firstResidueNumber),\n  }));\n\nconst processIPScanResults = (matches, firstResidueNumber) => {\n  const processed = [];\n  // for all the matches\n  for (const match of matches || []) {\n    // if the match has an entry, consider it as a signature of the entry\n    if (match.signature.entry) {\n      let existing = processed.find(\n        m => m.accession === match.signature.entry.accession,\n      );\n      // if the entry hadn't been stored yet, create it now\n      if (!existing) {\n        existing = {\n          accession: match.signature.entry.accession,\n          db: 'InterPro',\n          signatures: [],\n          locations: [],\n          color: colorFromString(match.signature.entry.accession),\n        };\n        processed.push(existing);\n      }\n      const locations = processLocations(match.locations, firstResidueNumber);\n      existing.locations = mergeIntervals(\n        [...existing.locations, ...locations],\n        (interval, value) =>\n          Number.isFinite(value)\n            ? (interval.fragments[0].start = value)\n            : interval.fragments[0].start,\n        (interval, value) =>\n          Number.isFinite(value)\n            ? (interval.fragments[0].end = value)\n            : interval.fragments[0].end,\n      );\n      // add the match as a signature of that entry\n      existing.signatures.push({\n        accession: match.signature.accession,\n        db: match.signature.signatureLibraryRelease.library,\n        locations,\n        color: existing.color.replace(', 1)', ', 0.25)'),\n      });\n    } else {\n      // the match doesn't have entry, it is not integrated\n      processed.push({\n        accession: match.signature.accession,\n        db: match.signature.signatureLibraryRelease.library,\n        locations: processLocations(match.locations, firstResidueNumber),\n        color: colorFromString(match['model-ac']),\n      });\n    }\n  }\n\n  // sort them\n  processed\n    // secondary sort by start position\n    .sort((a, b) => a.locations[0].fragments[0].start - b.locations[0].fragments[0].start)\n    // primary sort by number of signatures\n    .sort((a, b) => (b.signatures || []).length - (a.signatures || []).length);\n\n  return processed;\n};\n\nexport default processIPScanResults;\n","import React, { memo, useRef, useEffect } from 'react';\n\nimport loadCustomElement from '../../../utils/load-custom-element';\n\n// DANI: Esto lo hice mirando el código del antiguo ProperttySetter, pero no llegué a comprenderlo del todo\n// https://github.com/aurel-l/react-property-setter/blob/master/src/index.ts\n\n// The result of this function is memoized since it is a heavy work\nconst InterproTrack = memo(({ match, length, shape, classAttr }) => {\n\n    // Set a reference to the protvista element\n    const protvistaRef = useRef();\n\n    // Update element data after render\n    useEffect(() => {\n        const update = async () => {\n            await loadCustomElement(() => import(\n                /* webpackChunkName: \"protvista-interpro-track\" */ 'protvista-interpro-track'\n            )).as('protvista-interpro-track');\n            protvistaRef.current.data = [match];\n            protvistaRef.current.contributors = match.signatures || [];\n        }\n        update();\n    }, []);\n\n    //console.log(match.accession);\n\n    // Render the element\n    return (\n        <protvista-interpro-track\n            ref={protvistaRef}\n            length={length}\n            shape={shape}\n            class={classAttr}\n        />\n    );\n});\n\nexport default InterproTrack;\n","// extracted by mini-css-extract-plugin\nexport default {\"entries\":\"style_entries__pMg6Z\",\"has-signatures\":\"style_has-signatures__iLEx9\",\"label\":\"style_label__GbVwh\"};","import React, { memo, useEffect } from 'react';\n\nimport Loading from '../loading';\n\nimport useAPI from '../../hooks/use-api';\n\nimport loadCustomElement from '../../utils/load-custom-element';\n\nimport { BASE_PATH_PROJECTS } from '../../utils/constants';\n\nimport processIPScanResults from './process-ipscan-results';\nimport InterproTrack from './react-interpro-track';\n\nimport style from './style.module.css';\n\nconst customElements = [];\n\nconst loadProtVista = () => {\n  if (!customElements.length) {\n    customElements.push(\n      loadCustomElement(() =>\n        import(/* webpackChunkName: \"protvista-manager\" */ 'protvista-manager'),\n      ).as('protvista-manager'),\n    );\n    customElements.push(\n      loadCustomElement(() =>\n        import(\n          /* webpackChunkName: \"protvista-sequence\" */ 'protvista-sequence'\n        ),\n      ).as('protvista-sequence'),\n    );\n    customElements.push(\n      loadCustomElement(() =>\n        import(\n          /* webpackChunkName: \"protvista-navigation\" */ 'protvista-navigation'\n        ),\n      ).as('protvista-navigation'),\n    );\n    customElements.push(\n      loadCustomElement(() =>\n        import(\n          /* webpackChunkName: \"protvista-coloured-sequence\" */ 'protvista-coloured-sequence'\n        ),\n      ).as('protvista-coloured-sequence'),\n    );\n  }\n  return Promise.all(customElements);\n};\n\n// The result of this function is memoized since it is a heavy work\nconst ChainAnalyses = memo(({ accessionAndMdNumber, chain, firstResidueNumber }) => {\n  // Request the API for the chain data\n  const { loading, payload, error } = useAPI(\n    `${BASE_PATH_PROJECTS}/${accessionAndMdNumber}/chains/${chain}`,\n  );\n\n  // Load the protvista managers\n  useEffect(() => {\n    loadProtVista();\n  }, []);\n\n  // Wait for the chain data to be retrieved\n  if (loading) return <Loading />;\n  if (error) return error.toString();\n  if (!payload) return 'Chain analysis is not found';\n\n  // Mine payload data\n  const sequence = payload.sequence;\n  const sequenceLength = sequence.length;\n  const interproscanData = payload.interproscan;\n  // It may happen that interproscan data is missing when we have a small sequence\n  if (!interproscanData) return 'No InterProScan data';\n  const matches = interproscanData.results[0].matches;\n  const processedMatches = processIPScanResults(matches, firstResidueNumber);\n\n  // Set the end residue to be displayed\n  const displayEnd = firstResidueNumber + sequenceLength;\n  // Set an shifted sequence by adding null values at the begining\n  // This is the only way I figured out to offset the sequence\n  // Apparently protvista sequence components have no argument for this\n  const shiftedSequence = ' '.repeat(firstResidueNumber) + sequence;\n\n  return (\n    <protvista-manager\n      attributes=\"length displaystart displayend\"\n      length={sequenceLength}\n      chain={chain}\n    >\n      <protvista-navigation\n        rulerstart={firstResidueNumber}\n        displaystart={firstResidueNumber}\n        displayend={displayEnd}\n      />\n      <div className={style.entries}>\n        <protvista-sequence\n          sequence={shiftedSequence}\n          height=\"37\"\n        />\n        <protvista-coloured-sequence\n          sequence={shiftedSequence}\n          scale=\"hydrophobicity-scale\"\n          height=\"15\"\n        />\n        { processedMatches.length\n          ? processedMatches.map((match, index) => {\n            return (\n              <div key={index} >\n                <span className={style.label}>{match.accession}</span>\n                <InterproTrack\n                  match={match}\n                  shape=\"roundRectangle\"\n                  classAttr={match.signatures ? style['has-signatures'] : undefined}\n                />\n              </div>\n            )})\n          : 'No entry was found for this sequence'\n        }\n      </div>\n    </protvista-manager>\n  );\n});\n\nexport default ChainAnalyses;\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"style_card__Ocl+v\",\"chips\":\"style_chips__40Fvj\",\"title\":\"style_title__tHkJW\"};","import React, {\n  useContext,\n  useState,\n  useMemo,\n  useEffect,\n  Suspense,\n} from 'react';\n\nimport Card from '../animated-card';\nimport { CardContent, Chip } from '@mui/material';\n\nimport { ProjectCtx } from '../../contexts';\n\nimport useDefaultRepresentations from '../ngl-viewer/use-default-representations';\nimport useMutationsRepresentations from '../ngl-viewer/use-mutations-representations';\nimport useEpitopesRepresentations from '../ngl-viewer/use-epitopes-representations';\n\nimport style from './style.module.css';\n\nimport Loading from '../loading';\n\nimport { rangedSelectionParser } from '../../utils/topology-manager';\n\n// Show floatting bubles with domain names\n// When a bubble is selected the domain is represented\nconst Domains = ({ setRepresentations, setInitialFocus }) => {\n  // Get the current project data\n  const {\n    metadata,\n    proteinReferences,\n    ligandReferences,\n    topology,\n    interactions\n  } = useContext(ProjectCtx);\n\n  // Set the first domain (the overall) as the default selected domain\n  const [selectedDomain, setSelectedDomain] = useState(0);\n  const [overlapedDomain, setOverlapedDomain] = useState(null);\n\n  // Get pre-build representations\n  const defaultRepresentations = useDefaultRepresentations();\n  const mutationsRepresentation = useMutationsRepresentations();\n  const epitopesRepresentation = useEpitopesRepresentations();\n\n  // The domains strucutre is:\n  // domains: [\n  //    {\n  //      \"name\" : \"Example domain name\",\n  //      \"description\": \"Example domain description\"\n  //      \"representations\" : [\n  //        {\n  //          \"name\" : \"Region 1\",\n  //          \"selection\" : \"16-316\",\n  //          \"type\": \"ball+stick\",\n  //          \"color\": \"element\",\n  //          \"opacity\": 0.5,\n  //          ...\n  //        },\n  //        {\n  //          \"name\" : \"Region 2\",\n  //          \"selection\" : \"418-439\"\n  //        }\n  //      ]\n  //    },\n  // ]\n  const domains = useMemo(() => {\n    if (!topology) return;\n    // Set the overall domain\n    const overallDomain = {\n      name: 'Overall',\n      representations: defaultRepresentations,\n    };\n    // Get custom domains in metadata\n    const customDomains = metadata.CUSTOMS || [];\n    // Get domains constructed from interactions\n    const interactionDomains = [];\n    if (interactions) {\n      interactions.forEach(interaction => {\n        if (interaction.failed) return;\n        // Add a new domain for each new agent and skip repeated agents\n        const agent1 = { name: interaction.agent_1, residues: interaction.residue_indices_1 };\n        const agent2 = { name: interaction.agent_2, residues: interaction.residue_indices_2 };\n        [agent1, agent2].forEach(agent => {\n          const current = interactionDomains.find(domain => domain.name === agent.name);\n          if (current) return;\n          const { rangedSelection: nglSelection } = topology.residueIndices2Ngl(agent.residues);\n          interactionDomains.push({\n            name: agent.name,\n            representations: [\n              {\n                name: agent.name,\n                selection: nglSelection,\n                type: 'licorice',\n              },\n            ],\n          });\n        });\n      });\n    }\n    // Get domains from protein references\n    // Skip those whose name matches with an interacting agent or custom domain\n    const referenceDomains = [];\n    proteinReferences && proteinReferences.forEach(proteinReference => {\n      const referenceId = proteinReference.uniprot;\n      // Collect all domains in protein reference data\n      let referenceDataDomains = [];\n      // Domains in the 'domains' filed are automatically mined from uniprot\n      if (proteinReference.domains) referenceDataDomains = referenceDataDomains.concat(proteinReference.domains);\n      // Domains in the 'custom_domains' filed are added by hand in the database and they are not common\n      if (proteinReference.custom_domains) referenceDataDomains = referenceDataDomains.concat(proteinReference.custom_domains);\n      // If there are not domains at all then stop here\n      if (referenceDataDomains.length === 0) return;\n      // ----------------------------------------------------------------------------------------\n      // These domains are only specified for the protein reference sequence\n      // Residue selections must be mapped back to the current topology for each domain\n      // Custom reference domains may contain a 'representations' field instead of a 'selection' field\n      referenceDataDomains.forEach(domain => {\n        const domainName = domain.name;\n        // Discard the domain if its name matches an already existing domain\n        if (customDomains.find(domain => domain.name === domainName)) return;\n        if (interactionDomains.find(domain => domain.name === domainName))\n          return;\n        // Discard the domain if its name matches the reference name\n        // This is quite usual: some references have domains which are basically the whole thing\n        // There may be a difference in the pole residues, but it is redundant anyway\n        if (proteinReference.name === domainName) return;\n        const mappedDomain = {\n          name: proteinReference.name + ' - ' + domainName,\n          description: domain.description, // It may not have description\n          representations: [],\n        };\n        // Set a function to modify a representation by parsing its selections to NGL\n        const parseRepresentationSelection = representation => {\n          const selection = representation.selection;\n          const parsedSelection = rangedSelectionParser(selection);\n          // WARNING: A single protein reference residue may correspond to multiple topology residues\n          const mappedSelection = topology.getReferenceResidueIndices(referenceId, parsedSelection);\n          // Representations with a selection not present in topology are discarded\n          if (!mappedSelection || mappedSelection.length === 0) return;\n          // Transform the residue indices to a NGL selection\n          const { rangedSelection: nglSelection, small } = topology.residueIndices2Ngl(mappedSelection);\n          const newRepresentation = { ...representation };\n          newRepresentation.selection = nglSelection;\n          // parsedSelectionRanger returns 'small' = true when there are series of 3 residues or less\n          // These small residue selections will be not represented in cartoon due to an NGL bug\n          // https://github.com/nglviewer/ngl/issues/223\n          if (small) newRepresentation.type = 'licorice';\n          mappedDomain.representations.push(newRepresentation);\n        };\n        if (domain.selection) {\n          const domainRepresentation = { name: domainName, selection: domain.selection };\n          parseRepresentationSelection(domainRepresentation);\n        }\n        if (domain.representations) {\n          domain.representations.forEach(parseRepresentationSelection);\n        }\n        // Domains whose representatios have been all discarded are also discarded\n        if (mappedDomain.representations.length > 0)\n          referenceDomains.push(mappedDomain);\n      });\n    });\n    // Create a new domains for every ligand reference\n    // Skip those whose name matches with an interacting agent or custom domain\n    ligandReferences && ligandReferences.forEach(ligandReference => {\n      // Set the ligand name as the domain name\n      const domainName = ligandReference.name;\n      // Discard the domain if its name matches an already existing domain\n      if (customDomains.find(domain => domain.name === domainName)) return;\n      if (interactionDomains.find(domain => domain.name === domainName))\n        return;\n      // Get the NGL selection for ligand residues\n      const residueIndices = topology.getReferenceResidueIndices(ligandReference.pubchem);\n      if (!residueIndices) throw new Error(`Ligand reference \"${ligandReference.pubchem}\" not found in topology`);\n      const { rangedSelection: nglSelection } = topology.residueIndices2Ngl(residueIndices);\n      // Set the ligand domain\n      const ligandDomain = {\n        name: domainName,\n        // description: \n        representations: [\n          {\n            name: domainName,\n            selection: nglSelection,\n            type: 'ball+stick',\n            color: 'element'\n          }\n        ],\n      };\n      // Add it to the reference domains list\n      referenceDomains.push(ligandDomain);\n    });\n    // Put all domains together\n    const domains = [\n      overallDomain,\n      ...customDomains,\n      ...referenceDomains,\n      ...interactionDomains,\n    ];\n    // Add the mutations domain if possible\n    if (mutationsRepresentation) {\n      const mutationsDomain = {\n        name: 'Mutations',\n        description:\n          'Show the entropies of each residue according to the bibliography',\n        representations: mutationsRepresentation,\n      };\n      domains.push(mutationsDomain);\n    }\n    if (epitopesRepresentation) {\n      const epitopesDomain = {\n        name: 'Epitopes',\n        description:\n          'Show regions considered as epitopes according to the bibliography',\n        representations: epitopesRepresentation,\n      };\n      domains.push(epitopesDomain);\n    }\n    // Reset the selected domain\n    setSelectedDomain(0);\n    return domains;\n  }, [\n    metadata,\n    defaultRepresentations,\n    mutationsRepresentation,\n    epitopesRepresentation,\n    topology,\n    proteinReferences,\n    interactions,\n  ]);\n\n  // Add the selected domain (if any) configuration to the viewer\n  useEffect(() => {\n    if (!domains) return;\n    const currentSelectedDomain = domains[selectedDomain];\n    const currentSelectedRepresentations = currentSelectedDomain.representations.map(\n      rep => {\n        return { ...rep };\n      },\n    );\n    const currentOverlapedDomain =\n      overlapedDomain !== null && domains[overlapedDomain];\n    const currentOverlapedRepresentations = currentOverlapedDomain\n      ? currentOverlapedDomain.representations.map(rep => {\n          return {\n            ...rep,\n            type: 'spacefill',\n            opacity: rep.opacity ? rep.opacity * 0.2 : 0.2,\n          };\n        })\n      : [];\n    // Set an NGL representation for each domain representation\n    const representations = [\n      ...currentSelectedRepresentations,\n      ...currentOverlapedRepresentations,\n    ];\n    // Add a representation with the whole strucutre in grey color and with the opacity reduced\n    if (currentSelectedDomain.name !== 'Overall')\n      representations.push({\n        name: 'Reference',\n        color: 'grey',\n        opacity: 0.1,\n      });\n\n    // Set the NGL selection for the focus\n    const focusSelection = `(${\n      currentSelectedDomain.representations\n        .map(rep => rep.selection)\n        .join(') or (')\n    })`;\n    const initialFocus = { comp: 0, sele: focusSelection };\n    setRepresentations(representations);\n    setInitialFocus(initialFocus);\n  }, [domains, selectedDomain, overlapedDomain, setRepresentations, setInitialFocus]);\n\n  // If project data is still loading then stop here\n  if (!domains) return <Loading />;\n\n  return (\n    <Suspense fallback={<Loading />}>\n      {domains && domains.length > 0 && (\n        <Card className={style.card}>\n          <CardContent>\n            <a className={style.title}>Domains</a>\n            {domains.map((dom, d) => (\n              <Chip\n                key={dom.name}\n                title={dom.description}\n                className={style.chips}\n                label={dom.name}\n                variant={\n                  selectedDomain === d || overlapedDomain === d\n                    ? undefined\n                    : 'outlined'\n                }\n                color={\n                  selectedDomain === d\n                    ? 'primary'\n                    : overlapedDomain === d\n                    ? 'secondary'\n                    : undefined\n                }\n                onClick={event => {\n                  // When the keys control, shift or command (ios) are hold while clicking\n                  const overlap =\n                    event.shiftKey || event.ctrlKey || event.metaKey;\n                  if (overlap)\n                    return setOverlapedDomain(previous => {\n                      if (previous === d) return null;\n                      if (selectedDomain === d) return null;\n                      return d;\n                    });\n                  else\n                    return setSelectedDomain(previous => {\n                      if (previous === d) return 0;\n                      if (overlapedDomain === d) setOverlapedDomain(null);\n                      return d;\n                    });\n                }}\n              />\n            ))}\n          </CardContent>\n        </Card>\n      )}\n    </Suspense>\n  );\n};\n\nexport default Domains;\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"style_card__T1Y+D\",\"ngl-card\":\"style_ngl-card__596lW\",\"text-field\":\"style_text-field__kyMTc\",\"popup\":\"style_popup__1nHfI\",\"portal-container\":\"style_portal-container__QtTzF\",\"container\":\"style_container__VwOAd\",\"chain-analysis-list\":\"style_chain-analysis-list__i0cd8\",\"trajectory-metadata-title\":\"style_trajectory-metadata-title__MQcG8\"};","import React, {\n  memo,\n  useContext,\n  useEffect,\n  useState,\n  useCallback,\n} from 'react';\n// A hook to track whenever some element is on screen\nimport { useInView } from 'react-intersection-observer';\n\nimport {\n  CardContent,\n  Typography,\n  TextField,\n  InputAdornment,\n} from '@mui/material';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleRight } from '@fortawesome/free-solid-svg-icons';\n\n// Recover the metadata saved in this context by the accession script\nimport { ProjectCtx } from '../../../contexts';\n\nimport Card from '../../../components/animated-card';\nimport ViewerWithControls from '../../../components/viewer-with-controls';\nimport ChainAnalyses from '../../../components/chain-analyses';\n\nimport reducedMotion from '../../../utils/reduced-motion';\n\nimport Domains from '../../../components/domains';\n\nimport style from './style.module.css';\n\nconst na = 'Not available';\n\n// This component displays the trajectory metadata and it is also called by other scripts\nexport const TrajectoryMetadata = memo(() => {\n  // Load metadata from the project context\n  const { metadata } = useContext(ProjectCtx);\n  const round2decimals = number => Math.round(number * 100) / 100;\n  // Calculate frequency and multiply it by 1000 since it will be represented in picoseconds\n  const frequency = (metadata.FRAMESTEP && metadata.FRAMESTEP * 1000) || null;\n  if (metadata)\n    // Render the whole metadata\n    return (\n      <>\n        <fieldset>\n          <legend>Counts</legend>\n          <TextField\n            className={style['text-field']}\n            label=\"System atoms\"\n            title=\"Total number of atoms in the system\"\n            value={metadata.SYSTATS === null ? na : metadata.SYSTATS}\n            disabled={metadata.SYSTATS === null}\n          />\n          <TextField\n            className={style['text-field']}\n            label=\"Proteins atoms\"\n            title=\"Number of protein atoms in the system\"\n            value={metadata.PROTATS === null ? na : metadata.PROTATS}\n            disabled={metadata.PROTATS === null}\n          />\n          <TextField\n            className={style['text-field']}\n            label=\"Proteins residues\"\n            title=\"Number of protein residues in the system\"\n            value={metadata.PROT === null ? na : metadata.PROT}\n            disabled={metadata.PROT === null}\n          />\n          <TextField\n            className={style['text-field']}\n            label=\"Solvent molecules\"\n            title=\"Number of solvent molecules in the system\"\n            value={metadata.SOL === null ? na : metadata.SOL}\n            disabled={metadata.SOL === null}\n          />\n          <TextField\n            className={style['text-field']}\n            label=\"Positive ions\"\n            title=\"Number of positively charged ions in the system\"\n            value={metadata.NA === null ? na : metadata.NA}\n            disabled={metadata.NA === null}\n          />\n          <TextField\n            className={style['text-field']}\n            label=\"Negative ions\"\n            title=\"Number of negatively charged ions in the system\"\n            value={metadata.CL === null ? na : metadata.CL}\n            disabled={metadata.CL === null}\n          />\n        </fieldset>\n        <fieldset>\n          <legend>System box</legend>\n          <TextField\n            className={style['text-field']}\n            label=\"Type\"\n            title=\"Box type\"\n            value={metadata.BOXTYPE === null ? na : metadata.BOXTYPE}\n            disabled={metadata.BOXTYPE === null}\n          />\n          <TextField\n            className={style['text-field']}\n            label=\"Size X\"\n            title=\"Simulated system box X dimension\"\n            value={\n              metadata.BOXSIZEX === null\n                ? na\n                : round2decimals(metadata.BOXSIZEX)\n            }\n            disabled={metadata.BOXSIZEX === null}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment variant=\"filled\" position=\"end\">\n                  nm\n                </InputAdornment>\n              ),\n            }}\n          />\n          <TextField\n            className={style['text-field']}\n            label=\"Size Y\"\n            title=\"Simulated system box Y dimension\"\n            value={\n              metadata.BOXSIZEY === null\n                ? na\n                : round2decimals(metadata.BOXSIZEY)\n            }\n            disabled={metadata.BOXSIZEY === null}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment variant=\"filled\" position=\"end\">\n                  nm\n                </InputAdornment>\n              ),\n            }}\n          />\n          <TextField\n            className={style['text-field']}\n            label=\"Size Z\"\n            title=\"Simulated system box Z dimension\"\n            value={\n              metadata.BOXSIZEZ === null\n                ? na\n                : round2decimals(metadata.BOXSIZEZ)\n            }\n            disabled={metadata.BOXSIZEZ === null}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment variant=\"filled\" position=\"end\">\n                  nm\n                </InputAdornment>\n              ),\n            }}\n          />\n          <TextField\n            className={style['text-field']}\n            label=\"Volume\"\n            title=\"Simulated system box volume\"\n            value={\n              metadata.BOXSIZEX === null ||\n              metadata.BOXSIZEY === null ||\n              metadata.BOXSIZEZ === null\n                ? na\n                : round2decimals(\n                    metadata.BOXSIZEX * metadata.BOXSIZEY * metadata.BOXSIZEZ,\n                  )\n            }\n            disabled={\n              !(metadata.BOXSIZEX && metadata.BOXSIZEY && metadata.BOXSIZEZ)\n            }\n            InputProps={{\n              endAdornment: (\n                <InputAdornment variant=\"filled\" position=\"end\">\n                  nm³\n                </InputAdornment>\n              ),\n            }}\n          />\n        </fieldset>\n        <fieldset>\n          <legend>Simulation</legend>\n          <TextField\n            className={style['text-field']}\n            label=\"Length\"\n            title=\"Simulation length\"\n            value={metadata.timeLength === null ? na : round2decimals(metadata.timeLength)}\n            disabled={metadata.timeLength === null}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment variant=\"filled\" position=\"end\">\n                  ns\n                </InputAdornment>\n              ),\n            }}\n          />\n          <TextField\n            className={style['text-field']}\n            label=\"Timestep\"\n            title=\"Simulation timestep\"\n            value={metadata.TIMESTEP === null ? na : metadata.TIMESTEP}\n            disabled={metadata.TIMESTEP === null}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment variant=\"filled\" position=\"end\">\n                  fs\n                </InputAdornment>\n              ),\n            }}\n          />\n          <TextField\n            className={style['text-field']}\n            label=\"Snapshots\"\n            title=\"Number of snapshots\"\n            value={metadata.mdFrames === null ? na : metadata.mdFrames}\n            disabled={metadata.mdFrames === null}\n          />\n          <TextField\n            className={style['text-field']}\n            label=\"Frequency\"\n            title=\"Frequency of snapshots\"\n            value={\n              frequency === null\n                ? na\n                : frequency\n            }\n            disabled={frequency === null}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment variant=\"filled\" position=\"end\">\n                  ps\n                </InputAdornment>\n              ),\n            }}\n          />\n          <TextField\n            className={style['text-field']}\n            label=\"Force fields\"\n            title=\"Force fields\"\n            value={metadata.FF === null ? na : metadata.FF.join(', ')}\n            disabled={metadata.FF === null}\n          />\n          <TextField\n            className={style['text-field']}\n            label=\"Temperature\"\n            title=\"Temperature\"\n            value={metadata.TEMP === null ? na : metadata.TEMP}\n            disabled={metadata.TEMP === null}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment variant=\"filled\" position=\"end\">\n                  K\n                </InputAdornment>\n              ),\n            }}\n          />\n          <TextField\n            className={style['text-field']}\n            label=\"Water type\"\n            title=\"Water type\"\n            value={metadata.WAT === null ? na : metadata.WAT}\n            disabled={metadata.WAT === null}\n          />\n          <TextField\n            className={style['text-field']}\n            label=\"Ensemble\"\n            title=\"Simulation ensemble\"\n            value={metadata.ENSEMBLE === null ? na : metadata.ENSEMBLE}\n            disabled={metadata.ENSEMBLE === null}\n          />\n          {/*\n          <TextField\n            className={style['text-field']}\n            label=\"Pressure coupling\"\n            title=\"Pressure coupling method\"\n            value={metadata.PCOUPLING === null ? na : metadata.PCOUPLING}\n            disabled={metadata.PCOUPLING === null}\n          />\n          <TextField\n            className={style['text-field']}\n            label=\"Membrane\"\n            title=\"Membrane type\"\n            value={metadata.MEMBRANE === null ? na : metadata.MEMBRANE}\n            disabled={metadata.MEMBRANE === null}\n          />*/}\n        </fieldset>\n      </>\n    );\n  // When there is no metadata\n  else return 'No available metadata';\n}); // End of the metadata boxes\n\nconst dbMap = new Map([\n  ['InterPro', 'InterPro'],\n  // special cases\n  ['TIGRFAM', 'tigrfams'],\n  ['PROSITE_PROFILES', 'profile'],\n  ['PROSITE_PATTERNS', 'prosite'],\n  ['SUPERFAMILY', 'ssf'],\n  ['GENE3D', 'cathgene3d'],\n  // just the same, but lowercase\n  ['CDD', 'cdd'],\n  ['HAMAP', 'hamap'],\n  ['PANTHER', 'panther'],\n  ['PFAM', 'pfam'],\n  ['PIRSF', 'pirsf'],\n  ['PRINTS', 'prints'],\n  ['SFLD', 'sfld'],\n  ['SMART', 'smart'],\n]);\n\nconst Analyses = memo(() => {\n  // Load chains, accession and identifier from the project context\n  // 'chains' is undefined if no chains were loaded in this project\n  const {\n    chains,\n    accessionAndMdNumber,\n    topology: topologyManager,\n  } = useContext(ProjectCtx);\n  // Portals create a window where a web page is pre rendered without navigating to\n  // You can navigate to this web page by clicking on the portal\n  // NOTE: see https://web.dev/hands-on-portals for tutorial on Portals\n  useEffect(() => {\n    // bypass React for DOM alteration\n    // document.createElement is a different way to create React elements\n    const popup = document.createElement('div');\n    popup.className = style.popup;\n    let portal, portalContainer;\n    if ('HTMLPortalElement' in window) {\n      portalContainer = document.createElement('div');\n      portalContainer.className = style['portal-container'];\n      portal = document.createElement('portal');\n      portalContainer.appendChild(portal);\n      popup.appendChild(portalContainer);\n      portal.addEventListener('click', () => {\n        const bcr = portal.getBoundingClientRect();\n        portal.animate(\n          { transform: [`scale(1) translate(${-bcr.left}px, ${-bcr.top}px)`] },\n          {\n            duration: reducedMotion() ? 0 : 1000,\n            easing: 'cubic-bezier(.23,-0.26,0,1)',\n            fill: 'both',\n          },\n        ).onfinish = () => {\n          // TODO: whenever the bug removing history when activating a portal is\n          // TODO: fixed, use this piece of code\n          // portal.activate();\n          // TODO: in the meantime... (yes, it does an ugly flash 🤷‍)\n          window.location.href = portal.src;\n        };\n      });\n    }\n\n    const link = document.createElement('a');\n    link.rel = 'noopener';\n    link.target = '_blank';\n    popup.appendChild(link);\n\n    let displayed = false;\n    let timeout;\n\n    const clearPopup = () => {\n      link.textContent = '';\n      link.href = '';\n      if (portal) {\n        portalContainer.style.display = 'none';\n        portal.src = null;\n        portal.removeAttribute('src');\n      }\n      popup.style.visibility = 'hidden';\n      popup.style.transform = 'translate(0, 0)';\n    };\n\n    const popupEnterHandle = () => clearTimeout(timeout);\n    const popupLeaveHandle = () => (timeout = setTimeout(clearPopup, 1000));\n\n    popup.addEventListener('mouseenter', popupEnterHandle);\n    popup.addEventListener('mouseleave', popupLeaveHandle);\n\n    // event handler for events emitted by the nightingale/protvista components\n    const handler = event => {\n      if (!event.detail) return;\n      let bcrTarget, bcrPopup, bcrTrack;\n      switch (event.detail.eventtype) {\n        case 'mouseover':\n          if (!event.detail.feature.accession) return;\n\n          clearTimeout(timeout);\n\n          const IP_DB = dbMap.get(event.detail.feature.db);\n          const href =\n            IP_DB &&\n            `https://www.ebi.ac.uk/interpro/entry/${IP_DB}/${event.detail.feature.accession}/`;\n          if (portal && IP_DB) portal.src = href;\n          link.textContent = `${event.detail.feature.db} - ${event.detail.feature.accession}`;\n          link.href = href;\n          if (IP_DB) {\n            if (portal) portalContainer.style.display = 'block';\n          } else {\n            if (portal) {\n              portalContainer.style.display = 'none';\n              portal.removeAttribute('src');\n              portal.src = null;\n            }\n            link.removeAttribute('href');\n          }\n\n          bcrTarget = event.detail.target.getBoundingClientRect();\n          bcrPopup = popup.getBoundingClientRect();\n          bcrTrack = event.detail.target\n            .closest('protvista-interpro-track')\n            .getBoundingClientRect();\n\n          // x\n          const translateX = Math.min(\n            Math.max(\n              // center the popup in the middle of the region\n              bcrTarget.left + bcrTarget.width / 2 - bcrPopup.width / 2,\n              // make sure the popup doesn't overflow to the left\n              bcrTrack.left,\n            ),\n            // make sure the popup doesn't overflow to the right\n            bcrTrack.right - bcrPopup.width,\n          );\n          // y\n          const translateY = window.scrollY + bcrTarget.top - bcrPopup.height;\n\n          popup.style.visibility = 'visible';\n          popup.style.transform = `translate(${translateX}px, ${translateY}px)`;\n\n          displayed = true;\n          break;\n        case 'mouseout':\n          if (!displayed) return; // no need to do DOM operation, it's already invisible\n          timeout = setTimeout(clearPopup, 1000);\n\n          displayed = false;\n          break;\n        default:\n        // ignore\n      }\n    };\n    document.body.appendChild(popup);\n    window.addEventListener('change', handler);\n    // clean-up logic\n    return () => {\n      window.removeEventListener('change', handler);\n      popup.removeEventListener('mouseenter', popupEnterHandle);\n      popup.removeEventListener('mouseleave', popupLeaveHandle);\n      document.body.removeChild(popup);\n    };\n  }, []);\n\n  // Render the functional analysis with a brief introduction\n  // Here 'chains' is just the chain letters. The main data is downloaded further at the ChainAnalyses component\n  if (chains && chains.length > 0) {\n    return (\n      <>\n        {/* Brief introduction */}\n        <Typography variant=\"h5\">Protein functional analysis</Typography>\n        <br />\n        <Typography variant=\"subtitle2\">\n          <strong>{chains.length}</strong> chains were analysed.\n        </Typography>\n        <ul className={style['chain-analysis-list']}>\n          {/* Here, main data is displayed */}\n          {chains.map(chainLetter => {\n            // Get some data using the topology manager when it is available\n            let name = '';\n            let firstResidueNumber = 1;\n            if (topologyManager) {\n              const chain = topologyManager.getChainByName(chainLetter);\n              name = chain.metadataChainName;\n              firstResidueNumber = chain.residueNumbers[0];\n            }\n            return (\n              <li key={chainLetter}>\n                <Typography variant=\"h6\">\n                  <FontAwesomeIcon icon={faAngleRight} />\n                  {` Chain ${chainLetter} ${name ? '(' + name + ')' : ''}`}\n                </Typography>\n                {/* ChainAnalyses is the main visual asset */}\n                <ChainAnalyses\n                  accessionAndMdNumber={accessionAndMdNumber}\n                  chain={chainLetter}\n                  firstResidueNumber={firstResidueNumber}\n                />\n              </li>\n            );\n          })}\n        </ul>\n        <Typography variant=\"body2\">\n          Data generated using{' '}\n          <a\n            href=\"https://www.ebi.ac.uk/\"\n            target=\"_blank\"\n            rel=\"noreferrer noopener\"\n          >\n            EBI\n          </a>\n          's{' '}\n          <a\n            href=\"https://www.ebi.ac.uk/interpro/about/interproscan/\"\n            target=\"_blank\"\n            rel=\"noreferrer noopener\"\n          >\n            InterProScan service\n          </a>{' '}\n          and visualised using the{' '}\n          <a\n            href=\"https://ebi-webcomponents.github.io/nightingale/\"\n            target=\"_blank\"\n            rel=\"noreferrer noopener\"\n          >\n            Nightingale visualisation library\n          </a>\n          .\n        </Typography>\n      </>\n    );\n  } else return 'No chain analyses available';\n});\n\n// Define permanent options for the \"useInView\"\nconst useInViewOptions = { triggerOnce: true, rootMargin: '100px' };\n\nconst Trajectory = () => {\n  // useInView acts as a React hook\n  // Track if the NGL viewer (nglRef) and the analyses (nightingaleRef) are on screen\n  // The status (e.g. isNglVisible) is returned true/false when the element is in/out the screen respectively\n  const [nglRef, isNglVisible] = useInView(useInViewOptions);\n  const [nightingaleRef, isNightingaleVisible] = useInView(useInViewOptions);\n\n  // Set the representations to be displayed in the viewer\n  const [ representations, setRepresentations ] = useState(null);\n\n  // Set the viewer initial focus\n  const [ initialFocus, setInitialFocus ] = useState(null);\n\n  return (\n    <>\n      <Domains setRepresentations={setRepresentations} setInitialFocus={setInitialFocus} />\n      <Card className={style['ngl-card']} ref={nglRef}>\n        {/* Render the NGL viewer when it is on screen*/}\n        {isNglVisible ? (\n          <ViewerWithControls\n            className={style.container}\n            representationsState={[ representations, setRepresentations ]}\n            initialFocus={initialFocus}\n          />\n        ) : (\n          <div style={{ height: '50vh' }} />\n        )}\n      </Card>\n      <Card className={style.card}>\n        <CardContent>\n          <details>\n            <summary className={style['trajectory-metadata-title']}>\n              Trajectory metadata\n            </summary>\n            <br />\n            <span>\n              {/* Renders the whole metadata */}\n              <TrajectoryMetadata />\n            </span>\n          </details>\n        </CardContent>\n      </Card>\n      <Card className={style.card} ref={nightingaleRef}>\n        {isNightingaleVisible ? (\n          <CardContent>\n            {/* Render all the previously defined analyses part when it is on screen*/}\n            <Analyses />\n          </CardContent>\n        ) : (\n          <div style={{ height: '50vh' }} />\n        )}\n      </Card>\n    </>\n  );\n};\n\nexport default Trajectory;\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getInputAdornmentUtilityClass(slot) {\n  return generateUtilityClass('MuiInputAdornment', slot);\n}\nconst inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'standard', 'outlined', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\nexport default inputAdornmentClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _span;\nconst _excluded = [\"children\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from '../utils/capitalize';\nimport Typography from '../Typography';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from './inputAdornmentClasses';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\nconst InputAdornmentRoot = styled('div', {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  height: '0.01em',\n  // Fix IE11 flexbox alignment. To remove at some point.\n  maxHeight: '2em',\n  alignItems: 'center',\n  whiteSpace: 'nowrap',\n  color: (theme.vars || theme).palette.action.active\n}, ownerState.variant === 'filled' && {\n  // Styles applied to the root element if `variant=\"filled\"`.\n  [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n    marginTop: 16\n  }\n}, ownerState.position === 'start' && {\n  // Styles applied to the root element if `position=\"start\"`.\n  marginRight: 8\n}, ownerState.position === 'end' && {\n  // Styles applied to the root element if `position=\"end\"`.\n  marginLeft: 8\n}, ownerState.disablePointerEvents === true && {\n  // Styles applied to the root element if `disablePointerEvents={true}`.\n  pointerEvents: 'none'\n}));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n  const {\n      children,\n      className,\n      component = 'div',\n      disablePointerEvents = false,\n      disableTypography = false,\n      position,\n      variant: variantProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n  const ownerState = _extends({}, props, {\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"text.secondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ? ( /* notranslate needed while Google Translate will not fix zero-width space issue */_span || (_span = /*#__PURE__*/_jsx(\"span\", {\n          className: \"notranslate\",\n          children: \"\\u200B\"\n        }))) : null, children]\n      })\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;"],"names":["KEYFRAMES","opacity","reducedMotion","transform","ANIMATION_OPTIONS","fill","easing","duration","forwardRef","_ref","ref","overrideComponent","props","containerRef","useRef","useLayoutEffect","node","current","firstElementChild","animate","index","Array","from","document","querySelectorAll","findIndex","section","animation","delay","cancel","Component","Card","_jsx","className","style","children","component","useEpitopesRepresentations","topology","useContext","ProjectCtx","useMemo","proteinReferences","some","reference","epitopes","mappedResiduesPerReference","map","referenceId","uniprot","referenceEpitopes","epitopeResidues","Object","values","epitope","residues","allResidues","concat","apply","uniqueResidues","Set","mappedResidues","getReferenceResidueIndices","allMappedResidues","rangedSelection","small","residueIndices2Ngl","name","selection","type","color","greyColorPlan","useMutationsRepresentations","topologyManager","entropies","entropiesPerReference","logarithmicEntropies","entropy","Math","log","allEntropies","max","min","colorScale","scaleLinear","range","domain","customScheme","ColormakerRegistry","addScheme","params","this","atomColor","atom","residueIndex","residue","getResidueByIndex","parseInt","referenceData","length","referenceNumber","hexColor","d3color","formatHex","substring","importer","as","namespace","_namespace","customElement","default","is","Error","alreadyExisting","window","customElements","get","define","string","hash","i","charCodeAt","hashFromString","abs","startAccessorDefault","interval","value","Number","isFinite","endAccessorDefault","intervals","startAccessor","arguments","undefined","endAccessor","sortedIntervals","sort","a","b","output","push","processLocations","locations","firstResidueNumber","location","fragments","shift","forEach","fragment","start","end","shiftLocations","processIPScanResults","matches","processed","match","signature","entry","existing","find","m","accession","db","signatures","colorFromString","mergeIntervals","signatureLibraryRelease","library","replace","memo","shape","classAttr","protvistaRef","useEffect","async","loadCustomElement","data","contributors","update","class","accessionAndMdNumber","chain","loading","payload","error","useAPI","BASE_PATH_PROJECTS","Promise","all","Loading","toString","sequence","sequenceLength","interproscanData","interproscan","results","processedMatches","displayEnd","shiftedSequence","repeat","_jsxs","attributes","rulerstart","displaystart","displayend","height","scale","InterproTrack","setRepresentations","setInitialFocus","metadata","ligandReferences","interactions","selectedDomain","setSelectedDomain","useState","overlapedDomain","setOverlapedDomain","defaultRepresentations","useDefaultRepresentations","mutationsRepresentation","epitopesRepresentation","domains","overallDomain","representations","customDomains","CUSTOMS","interactionDomains","interaction","failed","agent_1","residue_indices_1","agent_2","residue_indices_2","agent","nglSelection","referenceDomains","proteinReference","referenceDataDomains","custom_domains","domainName","mappedDomain","description","parseRepresentationSelection","representation","parsedSelection","rangedSelectionParser","mappedSelection","newRepresentation","ligandReference","residueIndices","pubchem","ligandDomain","mutationsDomain","epitopesDomain","currentSelectedDomain","currentSelectedRepresentations","rep","currentOverlapedDomain","initialFocus","comp","sele","join","Suspense","fallback","CardContent","dom","d","Chip","title","label","variant","onClick","event","shiftKey","ctrlKey","metaKey","previous","na","TrajectoryMetadata","round2decimals","number","round","frequency","FRAMESTEP","_Fragment","TextField","SYSTATS","disabled","PROTATS","PROT","SOL","NA","CL","BOXTYPE","BOXSIZEX","InputProps","endAdornment","InputAdornment","position","BOXSIZEY","BOXSIZEZ","timeLength","TIMESTEP","mdFrames","FF","TEMP","WAT","ENSEMBLE","dbMap","Map","Analyses","chains","popup","createElement","portal","portalContainer","appendChild","addEventListener","bcr","getBoundingClientRect","left","top","onfinish","href","src","link","rel","target","timeout","displayed","clearPopup","textContent","display","removeAttribute","visibility","popupEnterHandle","clearTimeout","popupLeaveHandle","setTimeout","handler","detail","bcrTarget","bcrPopup","bcrTrack","eventtype","feature","IP_DB","closest","translateX","width","right","translateY","scrollY","body","removeEventListener","removeChild","Typography","chainLetter","getChainByName","metadataChainName","residueNumbers","FontAwesomeIcon","icon","faAngleRight","ChainAnalyses","useInViewOptions","triggerOnce","rootMargin","Trajectory","nglRef","isNglVisible","useInView","nightingaleRef","isNightingaleVisible","Domains","ViewerWithControls","representationsState","getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardRoot","styled","Paper","overridesResolver","styles","root","overflow","React","inProps","useDefaultProps","raised","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","clsx","elevation","getCardContentUtilityClass","CardContentRoot","padding","paddingBottom","getInputAdornmentUtilityClass","_span","InputAdornmentRoot","capitalize","disablePointerEvents","theme","maxHeight","alignItems","whiteSpace","vars","palette","action","active","inputAdornmentClasses","positionStart","hiddenLabel","marginTop","marginRight","marginLeft","pointerEvents","disableTypography","variantProp","muiFormControl","useFormControl","size","slots","FormControlContext","Provider"],"sourceRoot":""}