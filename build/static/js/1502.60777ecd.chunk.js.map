{"version":3,"file":"static/js/1502.60777ecd.chunk.js","mappings":"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","sources":["../node_modules/protvista-utils/src/Region.js","../node_modules/protvista-utils/src/TrackHighlighter.js","../node_modules/protvista-utils/src/ColorScaleParser.js","../node_modules/protvista-utils/src/String2Object.js","../node_modules/protvista-utils/src/withMargin.js","../node_modules/protvista-utils/src/index.js","../node_modules/protvista-utils/src/ScrollFilter.js","../node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js","../node_modules/protvista-zoomable/src/protvista-zoomable.js"],"sourcesContent":["export default class Region {\n  constructor({ min = -Infinity, max = Infinity } = {}) {\n    this.segments = [];\n    this.max = max;\n    this.min = min;\n    this.regionString = null;\n  }\n\n  encode(full = false) {\n    return this.segments\n      .map(({ start, end, color }) => {\n        if (full) return `${start}:${end}${color ? `:${color}` : \"\"}`;\n        const s = start === this.min ? \"\" : start;\n        const e = end === this.max ? \"\" : end;\n        return `${s}:${e}${color ? `:${color}` : \"\"}`;\n      })\n      .join(\",\");\n  }\n\n  decode(regionString) {\n    if (typeof regionString !== \"undefined\") this.regionString = regionString;\n    if (!this.regionString) {\n      this.segments = [];\n      return;\n    }\n    this.segments = this.regionString.split(\",\").map((region) => {\n      const [_start, _end, _color, _] = region.split(\":\");\n      if (typeof _ !== \"undefined\")\n        throw new Error(\n          `there should be at most 2 ':' per region. Region: ${region}`\n        );\n      let start = _start ? Number(_start) : this.min;\n      let end = _end ? Number(_end) : this.max;\n      const color = _color !== \"\" ? _color : undefined;\n      if (start > end) [start, end] = [end, start];\n      if (start < this.min) start = this.min;\n      if (end > this.max) end = this.max;\n      if (Number.isNaN(start))\n        throw new Error(\n          `The parsed value of ${_start} is NaN. Region: ${region}`\n        );\n      if (Number.isNaN(end))\n        throw new Error(\n          `The parsed value of ${_end} is NaN. Region: ${region}`\n        );\n      if (color && !color.match(/^#[0-9a-f]{6,8}$/i))\n        throw new Error(\n          `The parsed value of ${_color} is not a color in hex format. Region: ${region}`\n        );\n\n      return {\n        start,\n        end,\n        color,\n      };\n    });\n  }\n}\n","import Region from \"./Region\";\n\nconst DEFAULT_HIGLIGHT_COLOR = \"#FFEB3B66\";\n\nconst combineRegions = (region1, region2) => {\n  if (!region1) return region2;\n  if (!region2) return region1;\n  return `${region1},${region2}`;\n};\nexport default class TrackHighlighter {\n  constructor({ element, min, max }) {\n    this.element = element;\n    this.element._highlightcolor = DEFAULT_HIGLIGHT_COLOR;\n    this.region = new Region({ min, max });\n    this.fixedHighlight = null;\n  }\n\n  set max(max) {\n    this.region.max = max;\n  }\n\n  setAttributesInElement() {\n    this.region.decode(this.element.getAttribute(\"highlight\"));\n    if (this.region.segments.length === 0) {\n      this.element._highlightstart = Number(\n        this.element.getAttribute(\"highlightstart\")\n      );\n      this.element._highlightend = Number(\n        this.element.getAttribute(\"highlightend\")\n      );\n      this.element._highlightcolor =\n        this.element.getAttribute(\"highlightcolor\") || DEFAULT_HIGLIGHT_COLOR;\n      if (\n        this.element._highlightstart !== null &&\n        this.element._highlightend !== null &&\n        typeof this.element._highlightstart === \"number\" &&\n        typeof this.element._highlightend === \"number\"\n      ) {\n        this.element._highlight = `${this.element._highlightstart}:${this.element._highlightend}`;\n        this.region.decode(\n          combineRegions(this.fixedHighlight, this.element._highlight)\n        );\n      }\n    }\n  }\n\n  setFloatAttribute(name, strValue) {\n    const value = parseFloat(strValue);\n    this.element[`_${name}`] = Number.isNaN(value) ? strValue : value;\n  }\n\n  changedCallBack(name, newValue) {\n    switch (name) {\n      case \"highlightstart\":\n      case \"highlightend\":\n        this.setFloatAttribute(name, newValue);\n        this.element._highlight =\n          Number.isNaN(this.element._highlightstart) ||\n          Number.isNaN(this.element._highlightend) ||\n          this.element._highlightstart === undefined ||\n          this.element._highlightend === undefined ||\n          this.element._highlightstart === null ||\n          this.element._highlightend === null\n            ? \"\"\n            : `${Math.max(\n                this.region.min,\n                this.element._highlightstart\n              )}:${Math.min(this.region.max, this.element._highlightend)}`;\n        break;\n      default:\n        this.element._highlight = newValue;\n    }\n    this.region.decode(\n      combineRegions(this.fixedHighlight, this.element._highlight)\n    );\n    this.element.refresh();\n  }\n\n  setFixedHighlight(region) {\n    this.fixedHighlight = region;\n    this.region.decode(combineRegions(region, this.element._highlight));\n    this.element.refresh();\n  }\n\n  appendHighlightTo(svg) {\n    this.highlighted = svg.append(\"g\").attr(\"class\", \"highlighted\");\n  }\n\n  updateHighlight() {\n    const highlighs = this.highlighted\n      .selectAll(\"rect\")\n      .data(this.region.segments);\n    highlighs\n      .enter()\n      .append(\"rect\")\n      .style(\"pointer-events\", \"none\")\n      .merge(highlighs)\n      .attr(\"fill\", (d) => (d.color ? d.color : this.element._highlightcolor))\n      .attr(\"height\", this.element._height)\n      .attr(\"x\", (d) => this.element.getXFromSeqPosition(d.start))\n      .attr(\n        \"width\",\n        (d) => this.element.getSingleBaseWidth() * (d.end - d.start + 1)\n      );\n    highlighs.exit().remove();\n  }\n}\n","export function isColorValid(color) {\n  const fakeElement = document.createElement(\"div\");\n  fakeElement.style.borderColor = \"\";\n  fakeElement.style.borderColor = color;\n  if (fakeElement.style.borderColor === \"\") return false;\n  return true;\n}\n\nexport default (text = null) => {\n  let range = [];\n  let domain = [];\n  if (text !== null && typeof text !== \"string\")\n    throw new Error(\"The attribute text has to be of type string\");\n  if (text && text.trim() !== \"\") {\n    const blocks = text.split(\",\").map(bl => bl.split(\":\"));\n    if (blocks.length < 2)\n      throw new Error(\"There should be at least 2 points to create a scale\");\n\n    range = blocks.map(bl => {\n      const color = bl[0].trim().toUpperCase();\n      if (!isColorValid(color)) {\n        throw new Error(`The color '${color} is not valid'`);\n      }\n      return color;\n    });\n    domain = blocks.map((bl, i) => {\n      const number = parseFloat(bl[1]);\n      if (Number.isNaN(number))\n        throw new Error(\n          `The second part of every point should be a number. Error in point ${i}: ${bl}`\n        );\n      return number;\n    });\n  }\n  return {\n    range,\n    domain\n  };\n};\n","const identity = x => x;\n\nexport default (\n  string = null,\n  { keyFormatter = identity, valueFormatter = identity } = {}\n) => {\n  if (string !== null && typeof string !== \"string\")\n    throw new Error(\"The attribute text has to be of type string\");\n  if (string && string.trim() !== \"\") {\n    const blocks = string.split(\",\").map(bl => bl.split(\":\"));\n    const obj = {};\n    blocks.forEach(bl => {\n      if (bl.length !== 2)\n        throw new Error(\n          `Bad block: ${bl.join(\n            \":\"\n          )}\\n The blocks of the string should follow the format KEY:VALUE`\n        );\n      obj[keyFormatter(bl[0])] = valueFormatter(bl[1]);\n    });\n    return obj;\n  }\n  return {};\n};\n","const sides = [\"left\", \"right\", \"top\", \"bottom\"];\nconst marginSides = sides.map((side) => `margin${side}`);\n\nconst withMargin = (\n  Element,\n  options = {\n    initialValue: {\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n    },\n  }\n) => {\n  class ElementWithMargin extends Element {\n    constructor() {\n      super();\n      this.margin = options.initialValue;\n    }\n\n    static get observedAttributes() {\n      return [...super.observedAttributes, ...marginSides];\n    }\n\n    attributeChangedCallback(name, oldValue, newValue) {\n      if (oldValue !== newValue) {\n        if (marginSides.includes(name)) {\n          this[name] = newValue;\n        }\n      }\n      super.attributeChangedCallback(name, oldValue, newValue);\n    }\n  }\n  for (const side of sides) {\n    Object.defineProperty(ElementWithMargin.prototype, `margin${side}`, {\n      get() {\n        return this.margin[side] || 0;\n      },\n      set(value) {\n        this.margin[side] = +value;\n      },\n    });\n  }\n  return ElementWithMargin;\n};\n\nexport default withMargin;\n","import _Region from \"./Region\";\nimport _th from \"./TrackHighlighter\";\nimport _csp from \"./ColorScaleParser\";\nimport _s2o from \"./String2Object\";\nimport _sf from \"./ScrollFilter\";\nimport _withMargin from \"./withMargin\";\n\nexport const Region = _Region;\nexport const TrackHighlighter = _th;\nexport const ColorScaleParser = _csp;\nexport const String2Object = _s2o;\nexport const ScrollFilter = _sf;\nexport const withMargin = _withMargin;\n","export default class ScrollFilter {\n  constructor(element, scrollDelay = 400) {\n    this.element = element;\n    this.timeStampWheelOutside = 0;\n    this.resetScrollableTimeout = null;\n    this.scrollDelay = scrollDelay;\n  }\n\n  setElementScrollable(scrollable) {\n    this.element.setAttribute(\"scrollable\", scrollable);\n  }\n\n  startResetScrollableTimer() {\n    if (this.resetScrollableTimeout) {\n      clearTimeout(this.resetScrollableTimeout);\n    }\n    // Reset scrollable to true after a small period of time\n    this.resetScrollableTimeout = setTimeout(() => {\n      this.setElementScrollable(true);\n      this.resetScrollableTimeout = null;\n    }, this.scrollDelay);\n  }\n\n  blockScroll(timeStamp) {\n    this.timeStampWheelOutside = timeStamp;\n    this.setElementScrollable(false);\n    this.startResetScrollableTimer();\n  }\n\n  wheel({ target, timeStamp }) {\n    if (this.element.contains(target)) {\n      if (timeStamp < this.timeStampWheelOutside + this.scrollDelay) {\n        // Count this as an outside scroll as it's within the delay and it's\n        // inferred the user is doing a continuous scroll past the component\n        this.blockScroll(timeStamp);\n      } else {\n        this.setElementScrollable(true);\n      }\n    } else {\n      // Block scrolling and remember the time when the last scroll outside occurred.\n      this.blockScroll(timeStamp);\n    }\n  }\n}\n","/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\r\n/* eslint-disable require-jsdoc, valid-jsdoc */\r\nvar MapShim = (function () {\r\n    if (typeof Map !== 'undefined') {\r\n        return Map;\r\n    }\r\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\r\n    function getIndex(arr, key) {\r\n        var result = -1;\r\n        arr.some(function (entry, index) {\r\n            if (entry[0] === key) {\r\n                result = index;\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        return result;\r\n    }\r\n    return /** @class */ (function () {\r\n        function class_1() {\r\n            this.__entries__ = [];\r\n        }\r\n        Object.defineProperty(class_1.prototype, \"size\", {\r\n            /**\r\n             * @returns {boolean}\r\n             */\r\n            get: function () {\r\n                return this.__entries__.length;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\r\n        class_1.prototype.get = function (key) {\r\n            var index = getIndex(this.__entries__, key);\r\n            var entry = this.__entries__[index];\r\n            return entry && entry[1];\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.set = function (key, value) {\r\n            var index = getIndex(this.__entries__, key);\r\n            if (~index) {\r\n                this.__entries__[index][1] = value;\r\n            }\r\n            else {\r\n                this.__entries__.push([key, value]);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.delete = function (key) {\r\n            var entries = this.__entries__;\r\n            var index = getIndex(entries, key);\r\n            if (~index) {\r\n                entries.splice(index, 1);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.has = function (key) {\r\n            return !!~getIndex(this.__entries__, key);\r\n        };\r\n        /**\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.clear = function () {\r\n            this.__entries__.splice(0);\r\n        };\r\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.forEach = function (callback, ctx) {\r\n            if (ctx === void 0) { ctx = null; }\r\n            for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {\r\n                var entry = _a[_i];\r\n                callback.call(ctx, entry[1], entry[0]);\r\n            }\r\n        };\r\n        return class_1;\r\n    }());\r\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\r\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\r\nvar global$1 = (function () {\r\n    if (typeof global !== 'undefined' && global.Math === Math) {\r\n        return global;\r\n    }\r\n    if (typeof self !== 'undefined' && self.Math === Math) {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined' && window.Math === Math) {\r\n        return window;\r\n    }\r\n    // eslint-disable-next-line no-new-func\r\n    return Function('return this')();\r\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\r\nvar requestAnimationFrame$1 = (function () {\r\n    if (typeof requestAnimationFrame === 'function') {\r\n        // It's required to use a bounded function because IE sometimes throws\r\n        // an \"Invalid calling object\" error if rAF is invoked without the global\r\n        // object on the left hand side.\r\n        return requestAnimationFrame.bind(global$1);\r\n    }\r\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\r\n})();\n\n// Defines minimum timeout before adding a trailing call.\r\nvar trailingTimeout = 2;\r\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\r\nfunction throttle (callback, delay) {\r\n    var leadingCall = false, trailingCall = false, lastCallTime = 0;\r\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function resolvePending() {\r\n        if (leadingCall) {\r\n            leadingCall = false;\r\n            callback();\r\n        }\r\n        if (trailingCall) {\r\n            proxy();\r\n        }\r\n    }\r\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function timeoutCallback() {\r\n        requestAnimationFrame$1(resolvePending);\r\n    }\r\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function proxy() {\r\n        var timeStamp = Date.now();\r\n        if (leadingCall) {\r\n            // Reject immediately following calls.\r\n            if (timeStamp - lastCallTime < trailingTimeout) {\r\n                return;\r\n            }\r\n            // Schedule new call to be in invoked when the pending one is resolved.\r\n            // This is important for \"transitions\" which never actually start\r\n            // immediately so there is a chance that we might miss one if change\r\n            // happens amids the pending invocation.\r\n            trailingCall = true;\r\n        }\r\n        else {\r\n            leadingCall = true;\r\n            trailingCall = false;\r\n            setTimeout(timeoutCallback, delay);\r\n        }\r\n        lastCallTime = timeStamp;\r\n    }\r\n    return proxy;\r\n}\n\n// Minimum delay before invoking the update of observers.\r\nvar REFRESH_DELAY = 20;\r\n// A list of substrings of CSS properties used to find transition events that\r\n// might affect dimensions of observed elements.\r\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\r\n// Check if MutationObserver is available.\r\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\r\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\r\nvar ResizeObserverController = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserverController.\r\n     *\r\n     * @private\r\n     */\r\n    function ResizeObserverController() {\r\n        /**\r\n         * Indicates whether DOM listeners have been added.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.connected_ = false;\r\n        /**\r\n         * Tells that controller has subscribed for Mutation Events.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.mutationEventsAdded_ = false;\r\n        /**\r\n         * Keeps reference to the instance of MutationObserver.\r\n         *\r\n         * @private {MutationObserver}\r\n         */\r\n        this.mutationsObserver_ = null;\r\n        /**\r\n         * A list of connected observers.\r\n         *\r\n         * @private {Array<ResizeObserverSPI>}\r\n         */\r\n        this.observers_ = [];\r\n        this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\r\n        this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\r\n    }\r\n    /**\r\n     * Adds observer to observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be added.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.addObserver = function (observer) {\r\n        if (!~this.observers_.indexOf(observer)) {\r\n            this.observers_.push(observer);\r\n        }\r\n        // Add listeners if they haven't been added yet.\r\n        if (!this.connected_) {\r\n            this.connect_();\r\n        }\r\n    };\r\n    /**\r\n     * Removes observer from observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.removeObserver = function (observer) {\r\n        var observers = this.observers_;\r\n        var index = observers.indexOf(observer);\r\n        // Remove observer if it's present in registry.\r\n        if (~index) {\r\n            observers.splice(index, 1);\r\n        }\r\n        // Remove listeners if controller has no connected observers.\r\n        if (!observers.length && this.connected_) {\r\n            this.disconnect_();\r\n        }\r\n    };\r\n    /**\r\n     * Invokes the update of observers. It will continue running updates insofar\r\n     * it detects changes.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.refresh = function () {\r\n        var changesDetected = this.updateObservers_();\r\n        // Continue running updates if changes have been detected as there might\r\n        // be future ones caused by CSS transitions.\r\n        if (changesDetected) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Updates every observer from observers list and notifies them of queued\r\n     * entries.\r\n     *\r\n     * @private\r\n     * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n     *      dimensions of it's elements.\r\n     */\r\n    ResizeObserverController.prototype.updateObservers_ = function () {\r\n        // Collect observers that have active observations.\r\n        var activeObservers = this.observers_.filter(function (observer) {\r\n            return observer.gatherActive(), observer.hasActive();\r\n        });\r\n        // Deliver notifications in a separate cycle in order to avoid any\r\n        // collisions between observers, e.g. when multiple instances of\r\n        // ResizeObserver are tracking the same element and the callback of one\r\n        // of them changes content dimensions of the observed target. Sometimes\r\n        // this may result in notifications being blocked for the rest of observers.\r\n        activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\r\n        return activeObservers.length > 0;\r\n    };\r\n    /**\r\n     * Initializes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.connect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already added.\r\n        if (!isBrowser || this.connected_) {\r\n            return;\r\n        }\r\n        // Subscription to the \"Transitionend\" event is used as a workaround for\r\n        // delayed transitions. This way it's possible to capture at least the\r\n        // final state of an element.\r\n        document.addEventListener('transitionend', this.onTransitionEnd_);\r\n        window.addEventListener('resize', this.refresh);\r\n        if (mutationObserverSupported) {\r\n            this.mutationsObserver_ = new MutationObserver(this.refresh);\r\n            this.mutationsObserver_.observe(document, {\r\n                attributes: true,\r\n                childList: true,\r\n                characterData: true,\r\n                subtree: true\r\n            });\r\n        }\r\n        else {\r\n            document.addEventListener('DOMSubtreeModified', this.refresh);\r\n            this.mutationEventsAdded_ = true;\r\n        }\r\n        this.connected_ = true;\r\n    };\r\n    /**\r\n     * Removes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.disconnect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already removed.\r\n        if (!isBrowser || !this.connected_) {\r\n            return;\r\n        }\r\n        document.removeEventListener('transitionend', this.onTransitionEnd_);\r\n        window.removeEventListener('resize', this.refresh);\r\n        if (this.mutationsObserver_) {\r\n            this.mutationsObserver_.disconnect();\r\n        }\r\n        if (this.mutationEventsAdded_) {\r\n            document.removeEventListener('DOMSubtreeModified', this.refresh);\r\n        }\r\n        this.mutationsObserver_ = null;\r\n        this.mutationEventsAdded_ = false;\r\n        this.connected_ = false;\r\n    };\r\n    /**\r\n     * \"Transitionend\" event handler.\r\n     *\r\n     * @private\r\n     * @param {TransitionEvent} event\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {\r\n        var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;\r\n        // Detect whether transition may affect dimensions of an element.\r\n        var isReflowProperty = transitionKeys.some(function (key) {\r\n            return !!~propertyName.indexOf(key);\r\n        });\r\n        if (isReflowProperty) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Returns instance of the ResizeObserverController.\r\n     *\r\n     * @returns {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.getInstance = function () {\r\n        if (!this.instance_) {\r\n            this.instance_ = new ResizeObserverController();\r\n        }\r\n        return this.instance_;\r\n    };\r\n    /**\r\n     * Holds reference to the controller's instance.\r\n     *\r\n     * @private {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.instance_ = null;\r\n    return ResizeObserverController;\r\n}());\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\r\nvar defineConfigurable = (function (target, props) {\r\n    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        Object.defineProperty(target, key, {\r\n            value: props[key],\r\n            enumerable: false,\r\n            writable: false,\r\n            configurable: true\r\n        });\r\n    }\r\n    return target;\r\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\r\nvar getWindowOf = (function (target) {\r\n    // Assume that the element is an instance of Node, which means that it\r\n    // has the \"ownerDocument\" property from which we can retrieve a\r\n    // corresponding global object.\r\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\r\n    // Return the local global object if it's not possible extract one from\r\n    // provided element.\r\n    return ownerGlobal || global$1;\r\n});\n\n// Placeholder of an empty content rectangle.\r\nvar emptyRect = createRectInit(0, 0, 0, 0);\r\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\r\nfunction toFloat(value) {\r\n    return parseFloat(value) || 0;\r\n}\r\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\r\nfunction getBordersSize(styles) {\r\n    var positions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        positions[_i - 1] = arguments[_i];\r\n    }\r\n    return positions.reduce(function (size, position) {\r\n        var value = styles['border-' + position + '-width'];\r\n        return size + toFloat(value);\r\n    }, 0);\r\n}\r\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\r\nfunction getPaddings(styles) {\r\n    var positions = ['top', 'right', 'bottom', 'left'];\r\n    var paddings = {};\r\n    for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\r\n        var position = positions_1[_i];\r\n        var value = styles['padding-' + position];\r\n        paddings[position] = toFloat(value);\r\n    }\r\n    return paddings;\r\n}\r\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getSVGContentRect(target) {\r\n    var bbox = target.getBBox();\r\n    return createRectInit(0, 0, bbox.width, bbox.height);\r\n}\r\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getHTMLElementContentRect(target) {\r\n    // Client width & height properties can't be\r\n    // used exclusively as they provide rounded values.\r\n    var clientWidth = target.clientWidth, clientHeight = target.clientHeight;\r\n    // By this condition we can catch all non-replaced inline, hidden and\r\n    // detached elements. Though elements with width & height properties less\r\n    // than 0.5 will be discarded as well.\r\n    //\r\n    // Without it we would need to implement separate methods for each of\r\n    // those cases and it's not possible to perform a precise and performance\r\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\r\n    // gives wrong results for elements with width & height less than 0.5.\r\n    if (!clientWidth && !clientHeight) {\r\n        return emptyRect;\r\n    }\r\n    var styles = getWindowOf(target).getComputedStyle(target);\r\n    var paddings = getPaddings(styles);\r\n    var horizPad = paddings.left + paddings.right;\r\n    var vertPad = paddings.top + paddings.bottom;\r\n    // Computed styles of width & height are being used because they are the\r\n    // only dimensions available to JS that contain non-rounded values. It could\r\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\r\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\r\n    var width = toFloat(styles.width), height = toFloat(styles.height);\r\n    // Width & height include paddings and borders when the 'border-box' box\r\n    // model is applied (except for IE).\r\n    if (styles.boxSizing === 'border-box') {\r\n        // Following conditions are required to handle Internet Explorer which\r\n        // doesn't include paddings and borders to computed CSS dimensions.\r\n        //\r\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\r\n        // properties then it's either IE, and thus we don't need to subtract\r\n        // anything, or an element merely doesn't have paddings/borders styles.\r\n        if (Math.round(width + horizPad) !== clientWidth) {\r\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\r\n        }\r\n        if (Math.round(height + vertPad) !== clientHeight) {\r\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\r\n        }\r\n    }\r\n    // Following steps can't be applied to the document's root element as its\r\n    // client[Width/Height] properties represent viewport area of the window.\r\n    // Besides, it's as well not necessary as the <html> itself neither has\r\n    // rendered scroll bars nor it can be clipped.\r\n    if (!isDocumentElement(target)) {\r\n        // In some browsers (only in Firefox, actually) CSS width & height\r\n        // include scroll bars size which can be removed at this step as scroll\r\n        // bars are the only difference between rounded dimensions + paddings\r\n        // and \"client\" properties, though that is not always true in Chrome.\r\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\r\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\r\n        // Chrome has a rather weird rounding of \"client\" properties.\r\n        // E.g. for an element with content width of 314.2px it sometimes gives\r\n        // the client width of 315px and for the width of 314.7px it may give\r\n        // 314px. And it doesn't happen all the time. So just ignore this delta\r\n        // as a non-relevant.\r\n        if (Math.abs(vertScrollbar) !== 1) {\r\n            width -= vertScrollbar;\r\n        }\r\n        if (Math.abs(horizScrollbar) !== 1) {\r\n            height -= horizScrollbar;\r\n        }\r\n    }\r\n    return createRectInit(paddings.left, paddings.top, width, height);\r\n}\r\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nvar isSVGGraphicsElement = (function () {\r\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\r\n    // interface.\r\n    if (typeof SVGGraphicsElement !== 'undefined') {\r\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\r\n    }\r\n    // If it's so, then check that element is at least an instance of the\r\n    // SVGElement and that it has the \"getBBox\" method.\r\n    // eslint-disable-next-line no-extra-parens\r\n    return function (target) { return (target instanceof getWindowOf(target).SVGElement &&\r\n        typeof target.getBBox === 'function'); };\r\n})();\r\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nfunction isDocumentElement(target) {\r\n    return target === getWindowOf(target).document.documentElement;\r\n}\r\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getContentRect(target) {\r\n    if (!isBrowser) {\r\n        return emptyRect;\r\n    }\r\n    if (isSVGGraphicsElement(target)) {\r\n        return getSVGContentRect(target);\r\n    }\r\n    return getHTMLElementContentRect(target);\r\n}\r\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\r\nfunction createReadOnlyRect(_a) {\r\n    var x = _a.x, y = _a.y, width = _a.width, height = _a.height;\r\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\r\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\r\n    var rect = Object.create(Constr.prototype);\r\n    // Rectangle's properties are not writable and non-enumerable.\r\n    defineConfigurable(rect, {\r\n        x: x, y: y, width: width, height: height,\r\n        top: y,\r\n        right: x + width,\r\n        bottom: height + y,\r\n        left: x\r\n    });\r\n    return rect;\r\n}\r\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction createRectInit(x, y, width, height) {\r\n    return { x: x, y: y, width: width, height: height };\r\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\r\nvar ResizeObservation = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObservation.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     */\r\n    function ResizeObservation(target) {\r\n        /**\r\n         * Broadcasted width of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastWidth = 0;\r\n        /**\r\n         * Broadcasted height of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastHeight = 0;\r\n        /**\r\n         * Reference to the last observed content rectangle.\r\n         *\r\n         * @private {DOMRectInit}\r\n         */\r\n        this.contentRect_ = createRectInit(0, 0, 0, 0);\r\n        this.target = target;\r\n    }\r\n    /**\r\n     * Updates content rectangle and tells whether it's width or height properties\r\n     * have changed since the last broadcast.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObservation.prototype.isActive = function () {\r\n        var rect = getContentRect(this.target);\r\n        this.contentRect_ = rect;\r\n        return (rect.width !== this.broadcastWidth ||\r\n            rect.height !== this.broadcastHeight);\r\n    };\r\n    /**\r\n     * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n     * from the corresponding properties of the last observed content rectangle.\r\n     *\r\n     * @returns {DOMRectInit} Last observed content rectangle.\r\n     */\r\n    ResizeObservation.prototype.broadcastRect = function () {\r\n        var rect = this.contentRect_;\r\n        this.broadcastWidth = rect.width;\r\n        this.broadcastHeight = rect.height;\r\n        return rect;\r\n    };\r\n    return ResizeObservation;\r\n}());\n\nvar ResizeObserverEntry = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObserverEntry.\r\n     *\r\n     * @param {Element} target - Element that is being observed.\r\n     * @param {DOMRectInit} rectInit - Data of the element's content rectangle.\r\n     */\r\n    function ResizeObserverEntry(target, rectInit) {\r\n        var contentRect = createReadOnlyRect(rectInit);\r\n        // According to the specification following properties are not writable\r\n        // and are also not enumerable in the native implementation.\r\n        //\r\n        // Property accessors are not being used as they'd require to define a\r\n        // private WeakMap storage which may cause memory leaks in browsers that\r\n        // don't support this type of collections.\r\n        defineConfigurable(this, { target: target, contentRect: contentRect });\r\n    }\r\n    return ResizeObserverEntry;\r\n}());\n\nvar ResizeObserverSPI = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback function that is invoked\r\n     *      when one of the observed elements changes it's content dimensions.\r\n     * @param {ResizeObserverController} controller - Controller instance which\r\n     *      is responsible for the updates of observer.\r\n     * @param {ResizeObserver} callbackCtx - Reference to the public\r\n     *      ResizeObserver instance which will be passed to callback function.\r\n     */\r\n    function ResizeObserverSPI(callback, controller, callbackCtx) {\r\n        /**\r\n         * Collection of resize observations that have detected changes in dimensions\r\n         * of elements.\r\n         *\r\n         * @private {Array<ResizeObservation>}\r\n         */\r\n        this.activeObservations_ = [];\r\n        /**\r\n         * Registry of the ResizeObservation instances.\r\n         *\r\n         * @private {Map<Element, ResizeObservation>}\r\n         */\r\n        this.observations_ = new MapShim();\r\n        if (typeof callback !== 'function') {\r\n            throw new TypeError('The callback provided as parameter 1 is not a function.');\r\n        }\r\n        this.callback_ = callback;\r\n        this.controller_ = controller;\r\n        this.callbackCtx_ = callbackCtx;\r\n    }\r\n    /**\r\n     * Starts observing provided element.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.observe = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is already being observed.\r\n        if (observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.set(target, new ResizeObservation(target));\r\n        this.controller_.addObserver(this);\r\n        // Force the update of observations.\r\n        this.controller_.refresh();\r\n    };\r\n    /**\r\n     * Stops observing provided element.\r\n     *\r\n     * @param {Element} target - Element to stop observing.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.unobserve = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is not being observed.\r\n        if (!observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.delete(target);\r\n        if (!observations.size) {\r\n            this.controller_.removeObserver(this);\r\n        }\r\n    };\r\n    /**\r\n     * Stops observing all elements.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.disconnect = function () {\r\n        this.clearActive();\r\n        this.observations_.clear();\r\n        this.controller_.removeObserver(this);\r\n    };\r\n    /**\r\n     * Collects observation instances the associated element of which has changed\r\n     * it's content rectangle.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.gatherActive = function () {\r\n        var _this = this;\r\n        this.clearActive();\r\n        this.observations_.forEach(function (observation) {\r\n            if (observation.isActive()) {\r\n                _this.activeObservations_.push(observation);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Invokes initial callback function with a list of ResizeObserverEntry\r\n     * instances collected from active resize observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.broadcastActive = function () {\r\n        // Do nothing if observer doesn't have active observations.\r\n        if (!this.hasActive()) {\r\n            return;\r\n        }\r\n        var ctx = this.callbackCtx_;\r\n        // Create ResizeObserverEntry instance for every active observation.\r\n        var entries = this.activeObservations_.map(function (observation) {\r\n            return new ResizeObserverEntry(observation.target, observation.broadcastRect());\r\n        });\r\n        this.callback_.call(ctx, entries, ctx);\r\n        this.clearActive();\r\n    };\r\n    /**\r\n     * Clears the collection of active observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.clearActive = function () {\r\n        this.activeObservations_.splice(0);\r\n    };\r\n    /**\r\n     * Tells whether observer has active observations.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObserverSPI.prototype.hasActive = function () {\r\n        return this.activeObservations_.length > 0;\r\n    };\r\n    return ResizeObserverSPI;\r\n}());\n\n// Registry of internal observers. If WeakMap is not available use current shim\r\n// for the Map collection as it has all required methods and because WeakMap\r\n// can't be fully polyfilled anyway.\r\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\r\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\r\nvar ResizeObserver = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback that is invoked when\r\n     *      dimensions of the observed elements change.\r\n     */\r\n    function ResizeObserver(callback) {\r\n        if (!(this instanceof ResizeObserver)) {\r\n            throw new TypeError('Cannot call a class as a function.');\r\n        }\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        var controller = ResizeObserverController.getInstance();\r\n        var observer = new ResizeObserverSPI(callback, controller, this);\r\n        observers.set(this, observer);\r\n    }\r\n    return ResizeObserver;\r\n}());\r\n// Expose public methods of ResizeObserver.\r\n[\r\n    'observe',\r\n    'unobserve',\r\n    'disconnect'\r\n].forEach(function (method) {\r\n    ResizeObserver.prototype[method] = function () {\r\n        var _a;\r\n        return (_a = observers.get(this))[method].apply(_a, arguments);\r\n    };\r\n});\n\nvar index = (function () {\r\n    // Export existing implementation if available.\r\n    if (typeof global$1.ResizeObserver !== 'undefined') {\r\n        return global$1.ResizeObserver;\r\n    }\r\n    return ResizeObserver;\r\n})();\n\nexport default index;\n","import {\n  scaleLinear,\n  zoom as d3zoom,\n  zoomIdentity,\n  event as d3Event,\n} from \"d3\";\nimport { TrackHighlighter, ScrollFilter, withMargin } from \"protvista-utils\";\n\nimport ResizeObserver from \"resize-observer-polyfill\";\n\nclass ProtvistaZoomable extends HTMLElement {\n  constructor() {\n    super();\n    ProtvistaZoomable._polyfillElementClosest();\n    this._updateScaleDomain = this._updateScaleDomain.bind(this);\n    this._initZoom = this._initZoom.bind(this);\n    this.zoomed = this.zoomed.bind(this);\n    this._applyZoomTranslation = this.applyZoomTranslation.bind(this);\n    this._resetEventHandler = this._resetEventHandler.bind(this);\n    let aboutToApply = false;\n    // Postponing the zoom translation to the next frame.\n    // This helps in case several attributes are changed almost at the same time,\n    // in this way, only one refresh will be called.\n    this.applyZoomTranslation = () => {\n      if (aboutToApply) return;\n      aboutToApply = true;\n      requestAnimationFrame(() => {\n        aboutToApply = false;\n        this._applyZoomTranslation();\n      });\n    };\n    this._onResize = this._onResize.bind(this);\n    this._listenForResize = this._listenForResize.bind(this);\n    this.trackHighlighter = new TrackHighlighter({ element: this, min: 1 });\n\n    this.scrollFilter = new ScrollFilter(this);\n    this.wheelListener = (event) => this.scrollFilter.wheel(event);\n  }\n\n  connectedCallback() {\n    this.style.display = \"block\";\n    this.style.width = \"100%\";\n    this.width = this.offsetWidth;\n\n    if (this.closest(\"protvista-manager\")) {\n      this.manager = this.closest(\"protvista-manager\");\n      this.manager.register(this);\n    }\n\n    this._length = this.getAttribute(\"length\")\n      ? parseFloat(this.getAttribute(\"length\"))\n      : 0;\n\n    this._displaystart = this.getAttribute(\"displaystart\")\n      ? parseFloat(this.getAttribute(\"displaystart\"))\n      : 1;\n    this._displayend = this.getAttribute(\"displayend\")\n      ? parseFloat(this.getAttribute(\"displayend\"))\n      : this.length;\n\n    this._height = this.getAttribute(\"height\")\n      ? Number(this.getAttribute(\"height\"))\n      : 44;\n    this._highlightEvent = this.getAttribute(\"highlight-event\")\n      ? this.getAttribute(\"highlight-event\")\n      : \"onclick\";\n\n    this.trackHighlighter.setAttributesInElement(this);\n\n    this._updateScaleDomain();\n    // The _originXScale is a way to mantain all the future transformations over the same original scale.\n    // It only gets redefined if the size of the component, or the length of the sequence changes.\n    this._originXScale = this.xScale.copy();\n    this._initZoom();\n    this._listenForResize();\n    this.addEventListener(\"error\", (e) => {\n      console.error(e);\n    });\n    if (this._highlightEvent !== \"none\") {\n      this.addEventListener(\"click\", this._resetEventHandler);\n    }\n    if (this.hasAttribute(\"filter-scroll\")) {\n      document.addEventListener(\"wheel\", this.wheelListener, { capture: true });\n    }\n  }\n\n  disconnectedCallback() {\n    if (this.manager) {\n      this.manager.unregister(this);\n    }\n    if (this._ro) {\n      this._ro.unobserve(this);\n    } else {\n      window.removeEventListener(\"resize\", this._onResize);\n    }\n    if (this._highlightEvent !== \"none\") {\n      this.removeEventListener(\"click\", this._resetEventHandler);\n    }\n    document.removeEventListener(\"wheel\", this.wheelListener);\n  }\n\n  get width() {\n    return this._width;\n  }\n\n  set width(width) {\n    this._width = width;\n  }\n\n  set height(height) {\n    this._height = height;\n  }\n\n  get height() {\n    return this._height;\n  }\n\n  set length(length) {\n    this._length = length;\n    this.trackHighlighter.max = length;\n  }\n\n  get length() {\n    return this._length;\n  }\n\n  get xScale() {\n    return this._xScale;\n  }\n\n  set xScale(xScale) {\n    this._xScale = xScale;\n  }\n\n  get zoom() {\n    return this._zoom;\n  }\n\n  set svg(svg) {\n    this._svg = svg;\n    svg.call(this._zoom);\n    this.applyZoomTranslation();\n  }\n\n  get svg() {\n    return this._svg;\n  }\n\n  set fixedHighlight(region) {\n    this.trackHighlighter.setFixedHighlight(region);\n  }\n\n  getWidthWithMargins() {\n    return this.width ? this.width - this.margin.left - this.margin.right : 0;\n  }\n\n  _updateScaleDomain() {\n    this.xScale = scaleLinear()\n      // The max width should match the start of the n+1 base\n      .domain([1, this._length + 1])\n      .range([0, this.getWidthWithMargins()]);\n  }\n\n  _initZoom() {\n    this._zoom = d3zoom()\n      .scaleExtent([1, Infinity])\n      .translateExtent([\n        [0, 0],\n        [this.getWidthWithMargins(), 0],\n      ])\n      .extent([\n        [0, 0],\n        [this.getWidthWithMargins(), 0],\n      ])\n      .filter(() => {\n        if (!(d3Event instanceof WheelEvent)) return true;\n        if (this.hasAttribute(\"no-scroll\")) {\n          return false;\n        }\n        if (this.hasAttribute(\"filter-scroll\")) {\n          const scrollableAttribute = this.getAttribute(\"scrollable\");\n          if (scrollableAttribute) return scrollableAttribute === \"true\";\n        }\n        return !this.hasAttribute(\"use-ctrl-to-zoom\") || d3Event.ctrlKey;\n      })\n      .on(\"zoom\", this.zoomed);\n  }\n\n  static get observedAttributes() {\n    return [\"displaystart\", \"displayend\", \"length\", \"highlight\"];\n  }\n\n  setFloatAttribute(name, strValue) {\n    const value = parseFloat(strValue);\n    this[`_${name}`] = Number.isNaN(value) ? strValue : value;\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    // eslint-disable-next-line no-param-reassign\n    if (newValue === \"null\") newValue = null;\n    if (oldValue !== newValue) {\n      if (name.startsWith(\"highlight\")) {\n        this.trackHighlighter.changedCallBack(name, newValue);\n        return;\n      }\n      this.setFloatAttribute(name, newValue);\n\n      if (name === \"length\") {\n        this._updateScaleDomain();\n        this._originXScale = this.xScale.copy();\n      }\n      // One of the observable attributes changed, so the scale needs to be redefined.\n      this.applyZoomTranslation();\n    }\n  }\n\n  zoomed() {\n    // Redefines the xScale using the original scale and transform it with the captured event data.\n    this.xScale = d3Event.transform.rescaleX(this._originXScale);\n    // If the source event is null the zoom wasn't initiated by this component, don't send event\n    if (this.dontDispatch) return;\n    const [start, end] = this.xScale.domain(); // New positions based in the updated scale\n    this.dispatchEvent(\n      // Dispatches the event so the manager can propagate this changes to other  components\n      new CustomEvent(\"change\", {\n        detail: {\n          displaystart: Math.max(1, start),\n          displayend: Math.min(\n            this.length,\n            Math.max(end - 1, start + 1) // To make sure it never zooms in deeper than showing 2 bases covering the full width\n          ),\n        },\n        bubbles: true,\n        cancelable: true,\n      })\n    );\n  }\n\n  applyZoomTranslation() {\n    if (!this.svg || !this._originXScale) return;\n    // Calculating the scale factor based in the current start/end coordinates and the length of the sequence.\n    const k = Math.max(\n      1,\n      // +1 because the displayend base should be included\n      this.length / (1 + this._displayend - this._displaystart)\n    );\n    // The deltaX gets calculated using the position of the first base to display in original scale\n    const dx = -this._originXScale(this._displaystart);\n    this.dontDispatch = true; // This is to avoid infinite loops\n    this.svg.call(\n      // We trigger a zoom action\n      this.zoom.transform,\n      zoomIdentity // Identity transformation\n        .scale(k) // Scaled by our scaled factor\n        .translate(dx, 0) // Translated by the delta\n    );\n    this.dontDispatch = false;\n    this.refresh();\n  }\n\n  _onResize() {\n    this.width = this.offsetWidth;\n    this._updateScaleDomain();\n    this._originXScale = this.xScale.copy();\n    if (this.svg) this.svg.attr(\"width\", this.width);\n    this._zoom.scaleExtent([1, Infinity]).translateExtent([\n      [0, 0],\n      [this.getWidthWithMargins(), 0],\n    ]);\n    this.applyZoomTranslation();\n  }\n\n  _listenForResize() {\n    // TODO add sleep to make transition appear smoother. Could experiment with CSS3\n    // transitions too\n    this._ro = new ResizeObserver(this._onResize);\n    this._ro.observe(this);\n  }\n\n  _resetEventHandler(e) {\n    if (!e.target.closest(\".feature\")) {\n      this.dispatchEvent(this.createEvent(\"reset\", null, true));\n    }\n  }\n\n  getXFromSeqPosition(position) {\n    return this.margin.left + this.xScale(position);\n  }\n\n  getSingleBaseWidth() {\n    return this.xScale(2) - this.xScale(1);\n  }\n\n  static _getClickCoords() {\n    if (!d3Event) {\n      return null;\n    }\n    // const boundingRect = this.querySelector(\"svg\").getBoundingClientRect();\n    // Note: it would be nice to also return the position of the bottom left of the feature\n    return [d3Event.pageX, d3Event.pageY];\n  }\n\n  static _polyfillElementClosest() {\n    // Polyfill for IE support, see\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/closest\n    if (!Element.prototype.matches) {\n      Element.prototype.matches =\n        Element.prototype.msMatchesSelector ||\n        Element.prototype.webkitMatchesSelector;\n    }\n\n    if (!Element.prototype.closest) {\n      Element.prototype.closest = (s) => {\n        let el = this;\n\n        do {\n          if (el.matches(s)) return el;\n          el = el.parentElement || el.parentNode;\n        } while (el !== null && el.nodeType === 1);\n        return null;\n      };\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  createEvent(\n    type,\n    feature = null,\n    withHighlight = false,\n    withId = false,\n    start,\n    end,\n    target\n  ) {\n    // Variation features have a different shape\n    if (feature) {\n      // eslint-disable-next-line no-param-reassign\n      feature = feature.feature ? feature.feature : feature;\n    }\n    const detail = {\n      eventtype: type,\n      coords: ProtvistaZoomable._getClickCoords(),\n      feature,\n      target,\n    };\n    if (withHighlight) {\n      if (feature && feature.fragments) {\n        detail.highlight = feature.fragments\n          .map((fr) => `${fr.start}:${fr.end}`)\n          .join(\",\");\n      } else if (d3Event && d3Event.shiftKey && this._highlight) {\n        // If holding shift, add to the highlights\n        detail.highlight = `${this._highlight},${start}:${end}`;\n      } else {\n        detail.highlight = start && end ? `${start}:${end}` : null;\n      }\n    }\n    if (withId) {\n      detail.selectedid = feature && feature.protvistaFeatureId;\n    }\n    return new CustomEvent(\"change\", {\n      detail,\n      bubbles: true,\n      cancelable: true,\n    });\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  bindEvents(feature, element) {\n    feature\n      .on(\"mouseover\", (f, i, group) => {\n        element.dispatchEvent(\n          element.createEvent(\n            \"mouseover\",\n            f,\n            element._highlightEvent === \"onmouseover\",\n            false,\n            f.start,\n            f.end,\n            group[i]\n          )\n        );\n      })\n      .on(\"mouseout\", () => {\n        element.dispatchEvent(\n          element.createEvent(\n            \"mouseout\",\n            null,\n            element._highlightEvent === \"onmouseover\"\n          )\n        );\n      })\n      .on(\"click\", (f, i, group) => {\n        element.dispatchEvent(\n          element.createEvent(\n            \"click\",\n            f,\n            element._highlightEvent === \"onclick\",\n            true,\n            f.start,\n            f.end,\n            group[i]\n          )\n        );\n      });\n  }\n}\n\nexport default withMargin(ProtvistaZoomable, {\n  initialValue: {\n    top: 10,\n    right: 10,\n    bottom: 10,\n    left: 10,\n  },\n});\n"],"names":["Region","constructor","min","Infinity","max","arguments","length","undefined","this","segments","regionString","encode","full","map","_ref","start","end","color","join","decode","split","region","_start","_end","_color","_","Error","Number","isNaN","match","DEFAULT_HIGLIGHT_COLOR","combineRegions","region1","region2","identity","x","sides","marginSides","side","Element","options","initialValue","top","bottom","left","right","ElementWithMargin","super","margin","observedAttributes","attributeChangedCallback","name","oldValue","newValue","includes","Object","defineProperty","prototype","get","set","value","TrackHighlighter","element","_highlightcolor","fixedHighlight","setAttributesInElement","getAttribute","_highlightstart","_highlightend","_highlight","setFloatAttribute","strValue","parseFloat","changedCallBack","Math","refresh","setFixedHighlight","appendHighlightTo","svg","highlighted","append","attr","updateHighlight","highlighs","selectAll","data","enter","style","merge","d","_height","getXFromSeqPosition","getSingleBaseWidth","exit","remove","ColorScaleParser","text","range","domain","trim","blocks","bl","toUpperCase","fakeElement","document","createElement","borderColor","isColorValid","i","number","String2Object","string","keyFormatter","valueFormatter","obj","forEach","ScrollFilter","scrollDelay","timeStampWheelOutside","resetScrollableTimeout","setElementScrollable","scrollable","setAttribute","startResetScrollableTimer","clearTimeout","setTimeout","blockScroll","timeStamp","wheel","target","contains","withMargin","_withMargin","MapShim","Map","getIndex","arr","key","result","some","entry","index","class_1","__entries__","enumerable","configurable","push","delete","entries","splice","has","clear","callback","ctx","_i","_a","call","isBrowser","window","global$1","global","self","Function","requestAnimationFrame$1","requestAnimationFrame","bind","Date","now","transitionKeys","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","delay","leadingCall","trailingCall","lastCallTime","resolvePending","proxy","timeoutCallback","throttle","addObserver","observer","indexOf","connect_","removeObserver","observers","disconnect_","updateObservers_","activeObservers","filter","gatherActive","hasActive","broadcastActive","addEventListener","observe","attributes","childList","characterData","subtree","removeEventListener","disconnect","_b","propertyName","getInstance","instance_","defineConfigurable","props","keys","writable","getWindowOf","ownerDocument","defaultView","emptyRect","createRectInit","toFloat","getBordersSize","styles","positions","reduce","size","position","getHTMLElementContentRect","clientWidth","clientHeight","getComputedStyle","paddings","positions_1","getPaddings","horizPad","vertPad","width","height","boxSizing","round","documentElement","isDocumentElement","vertScrollbar","horizScrollbar","abs","isSVGGraphicsElement","SVGGraphicsElement","SVGElement","getBBox","getContentRect","bbox","getSVGContentRect","y","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","rect","broadcastRect","ResizeObserverEntry","rectInit","contentRect","Constr","DOMRectReadOnly","create","createReadOnlyRect","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","TypeError","callback_","controller_","callbackCtx_","observations","unobserve","clearActive","_this","observation","WeakMap","ResizeObserver","method","apply","ProtvistaZoomable","HTMLElement","_polyfillElementClosest","_updateScaleDomain","_initZoom","zoomed","_applyZoomTranslation","applyZoomTranslation","_resetEventHandler","aboutToApply","_onResize","_listenForResize","trackHighlighter","scrollFilter","wheelListener","event","connectedCallback","display","offsetWidth","closest","manager","register","_length","_displaystart","_displayend","_highlightEvent","_originXScale","xScale","copy","e","console","error","hasAttribute","capture","disconnectedCallback","unregister","_ro","_width","_xScale","zoom","_zoom","_svg","getWidthWithMargins","scaleLinear","d3zoom","scaleExtent","translateExtent","extent","d3Event","WheelEvent","scrollableAttribute","ctrlKey","on","startsWith","transform","rescaleX","dontDispatch","dispatchEvent","CustomEvent","detail","displaystart","displayend","bubbles","cancelable","k","dx","zoomIdentity","scale","translate","createEvent","_getClickCoords","pageX","pageY","matches","msMatchesSelector","webkitMatchesSelector","s","el","parentElement","parentNode","nodeType","type","feature","withHighlight","withId","eventtype","coords","fragments","highlight","fr","shiftKey","selectedid","protvistaFeatureId","bindEvents","f","group"],"sourceRoot":""}