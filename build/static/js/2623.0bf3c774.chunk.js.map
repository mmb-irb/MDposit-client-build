{"version":3,"file":"static/js/2623.0bf3c774.chunk.js","mappings":"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","sources":["../node_modules/@mui/utils/esm/omitEventHandlers/omitEventHandlers.js","../node_modules/@mui/utils/esm/mergeSlotProps/mergeSlotProps.js","../node_modules/react-transition-group/esm/config.js","../node_modules/react-transition-group/esm/Transition.js","../node_modules/react-transition-group/esm/utils/reflow.js","../node_modules/@mui/material/styles/useTheme.js","../node_modules/@mui/utils/esm/resolveComponentProps/resolveComponentProps.js","../node_modules/@mui/utils/esm/extractEventHandlers/extractEventHandlers.js","../node_modules/@mui/material/transitions/utils.js","../node_modules/@mui/utils/esm/isHostComponent/isHostComponent.js","../node_modules/@mui/utils/esm/appendOwnerState/appendOwnerState.js"],"sourcesContent":["/**\n * Removes event handlers from the given object.\n * A field is considered an event handler if it is a function with a name beginning with `on`.\n *\n * @param object Object to remove event handlers from.\n * @returns Object with event handlers removed.\n */\nfunction omitEventHandlers(object) {\n  if (object === undefined) {\n    return {};\n  }\n  const result = {};\n  Object.keys(object).filter(prop => !(prop.match(/^on[A-Z]/) && typeof object[prop] === 'function')).forEach(prop => {\n    result[prop] = object[prop];\n  });\n  return result;\n}\nexport default omitEventHandlers;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport clsx from 'clsx';\nimport extractEventHandlers from '../extractEventHandlers';\nimport omitEventHandlers from '../omitEventHandlers';\n/**\n * Merges the slot component internal props (usually coming from a hook)\n * with the externally provided ones.\n *\n * The merge order is (the latter overrides the former):\n * 1. The internal props (specified as a getter function to work with get*Props hook result)\n * 2. Additional props (specified internally on a Base UI component)\n * 3. External props specified on the owner component. These should only be used on a root slot.\n * 4. External props specified in the `slotProps.*` prop.\n * 5. The `className` prop - combined from all the above.\n * @param parameters\n * @returns\n */\nfunction mergeSlotProps(parameters) {\n  const {\n    getSlotProps,\n    additionalProps,\n    externalSlotProps,\n    externalForwardedProps,\n    className\n  } = parameters;\n  if (!getSlotProps) {\n    // The simpler case - getSlotProps is not defined, so no internal event handlers are defined,\n    // so we can simply merge all the props without having to worry about extracting event handlers.\n    const joinedClasses = clsx(additionalProps == null ? void 0 : additionalProps.className, className, externalForwardedProps == null ? void 0 : externalForwardedProps.className, externalSlotProps == null ? void 0 : externalSlotProps.className);\n    const mergedStyle = _extends({}, additionalProps == null ? void 0 : additionalProps.style, externalForwardedProps == null ? void 0 : externalForwardedProps.style, externalSlotProps == null ? void 0 : externalSlotProps.style);\n    const props = _extends({}, additionalProps, externalForwardedProps, externalSlotProps);\n    if (joinedClasses.length > 0) {\n      props.className = joinedClasses;\n    }\n    if (Object.keys(mergedStyle).length > 0) {\n      props.style = mergedStyle;\n    }\n    return {\n      props,\n      internalRef: undefined\n    };\n  }\n\n  // In this case, getSlotProps is responsible for calling the external event handlers.\n  // We don't need to include them in the merged props because of this.\n\n  const eventHandlers = extractEventHandlers(_extends({}, externalForwardedProps, externalSlotProps));\n  const componentsPropsWithoutEventHandlers = omitEventHandlers(externalSlotProps);\n  const otherPropsWithoutEventHandlers = omitEventHandlers(externalForwardedProps);\n  const internalSlotProps = getSlotProps(eventHandlers);\n\n  // The order of classes is important here.\n  // Emotion (that we use in libraries consuming Base UI) depends on this order\n  // to properly override style. It requires the most important classes to be last\n  // (see https://github.com/mui/material-ui/pull/33205) for the related discussion.\n  const joinedClasses = clsx(internalSlotProps == null ? void 0 : internalSlotProps.className, additionalProps == null ? void 0 : additionalProps.className, className, externalForwardedProps == null ? void 0 : externalForwardedProps.className, externalSlotProps == null ? void 0 : externalSlotProps.className);\n  const mergedStyle = _extends({}, internalSlotProps == null ? void 0 : internalSlotProps.style, additionalProps == null ? void 0 : additionalProps.style, externalForwardedProps == null ? void 0 : externalForwardedProps.style, externalSlotProps == null ? void 0 : externalSlotProps.style);\n  const props = _extends({}, internalSlotProps, additionalProps, otherPropsWithoutEventHandlers, componentsPropsWithoutEventHandlers);\n  if (joinedClasses.length > 0) {\n    props.className = joinedClasses;\n  }\n  if (Object.keys(mergedStyle).length > 0) {\n    props.style = mergedStyle;\n  }\n  return {\n    props,\n    internalRef: internalSlotProps.ref\n  };\n}\nexport default mergeSlotProps;","export default {\n  disabled: false\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from './config';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { forceReflow } from './utils/reflow';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  } // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n  ;\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        if (this.props.unmountOnExit || this.props.mountOnEnter) {\n          var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this); // https://github.com/reactjs/react-transition-group/pull/749\n          // With unmountOnExit or mountOnEnter, the enter animation should happen at the transition between `exited` and `entering`.\n          // To make the animation happen,  we have to separate each rendering and avoid being processed as batched.\n\n          if (node) forceReflow(node);\n        }\n\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n\n    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],\n        maybeNode = _ref2[0],\n        maybeAppearing = _ref2[1];\n\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onEnter(maybeNode, maybeAppearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(maybeNode, maybeAppearing);\n\n      _this2.onTransitionEnd(enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(maybeNode, maybeAppearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n    var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onExit(maybeNode);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(maybeNode);\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(maybeNode);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\n          maybeNode = _ref3[0],\n          maybeNextCallback = _ref3[1];\n\n      this.props.addEndListener(maybeNode, maybeNextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        _in = _this$props.in,\n        _mountOnEnter = _this$props.mountOnEnter,\n        _unmountOnExit = _this$props.unmountOnExit,\n        _appear = _this$props.appear,\n        _enter = _this$props.enter,\n        _exit = _this$props.exit,\n        _timeout = _this$props.timeout,\n        _addEndListener = _this$props.addEndListener,\n        _onEnter = _this$props.onEnter,\n        _onEntering = _this$props.onEntering,\n        _onEntered = _this$props.onEntered,\n        _onExit = _this$props.onExit,\n        _onExiting = _this$props.onExiting,\n        _onExited = _this$props.onExited,\n        _nodeRef = _this$props.nodeRef,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\", \"enter\", \"exit\", \"timeout\", \"addEndListener\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"nodeRef\"]);\n\n    return (\n      /*#__PURE__*/\n      // allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, typeof children === 'function' ? children(status, childProps) : React.cloneElement(React.Children.only(children), childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A React reference to DOM element that need to transition:\n   * https://stackoverflow.com/a/51127130/4671932\n   *\n   *   - When `nodeRef` prop is used, `node` is not passed to callback functions\n   *      (e.g. `onEnter`) because user already has direct access to the node.\n   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new\n   *     `nodeRef` need to be provided to `Transition` with changed `key` prop\n   *     (see\n   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).\n   */\n  nodeRef: PropTypes.shape({\n    current: typeof Element === 'undefined' ? PropTypes.any : function (propValue, key, componentName, location, propFullName, secret) {\n      var value = propValue[key];\n      return PropTypes.instanceOf(value && 'ownerDocument' in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);\n    }\n  }),\n\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * By default the child component does not perform the enter transition when\n   * it first mounts, regardless of the value of `in`. If you want this\n   * behavior, set both `appear` and `in` to `true`.\n   *\n   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop\n   * > only adds an additional enter transition. However, in the\n   * > `<CSSTransition>` component that first enter transition does result in\n   * > additional `.appear-*` classes, that way you can choose to style it\n   * > differently.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. Timeouts are still used as a fallback if provided.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func\n} : {}; // Name the function so it is clearer in the documentation\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = UNMOUNTED;\nTransition.EXITED = EXITED;\nTransition.ENTERING = ENTERING;\nTransition.ENTERED = ENTERED;\nTransition.EXITING = EXITING;\nexport default Transition;","export var forceReflow = function forceReflow(node) {\n  return node.scrollTop;\n};","'use client';\n\nimport * as React from 'react';\nimport { useTheme as useThemeSystem } from '@mui/system';\nimport defaultTheme from './defaultTheme';\nimport THEME_ID from './identifier';\nexport default function useTheme() {\n  const theme = useThemeSystem(defaultTheme);\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue(theme);\n  }\n  return theme[THEME_ID] || theme;\n}","/**\n * If `componentProps` is a function, calls it with the provided `ownerState`.\n * Otherwise, just returns `componentProps`.\n */\nfunction resolveComponentProps(componentProps, ownerState, slotState) {\n  if (typeof componentProps === 'function') {\n    return componentProps(ownerState, slotState);\n  }\n  return componentProps;\n}\nexport default resolveComponentProps;","/**\n * Extracts event handlers from a given object.\n * A prop is considered an event handler if it is a function and its name starts with `on`.\n *\n * @param object An object to extract event handlers from.\n * @param excludeKeys An array of keys to exclude from the returned object.\n */\nfunction extractEventHandlers(object, excludeKeys = []) {\n  if (object === undefined) {\n    return {};\n  }\n  const result = {};\n  Object.keys(object).filter(prop => prop.match(/^on[A-Z]/) && typeof object[prop] === 'function' && !excludeKeys.includes(prop)).forEach(prop => {\n    result[prop] = object[prop];\n  });\n  return result;\n}\nexport default extractEventHandlers;","export const reflow = node => node.scrollTop;\nexport function getTransitionProps(props, options) {\n  var _style$transitionDura, _style$transitionTimi;\n  const {\n    timeout,\n    easing,\n    style = {}\n  } = props;\n  return {\n    duration: (_style$transitionDura = style.transitionDuration) != null ? _style$transitionDura : typeof timeout === 'number' ? timeout : timeout[options.mode] || 0,\n    easing: (_style$transitionTimi = style.transitionTimingFunction) != null ? _style$transitionTimi : typeof easing === 'object' ? easing[options.mode] : easing,\n    delay: style.transitionDelay\n  };\n}","/**\n * Determines if a given element is a DOM element name (i.e. not a React component).\n */\nfunction isHostComponent(element) {\n  return typeof element === 'string';\n}\nexport default isHostComponent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport isHostComponent from '../isHostComponent';\n\n/**\n * Type of the ownerState based on the type of an element it applies to.\n * This resolves to the provided OwnerState for React components and `undefined` for host components.\n * Falls back to `OwnerState | undefined` when the exact type can't be determined in development time.\n */\n\n/**\n * Appends the ownerState object to the props, merging with the existing one if necessary.\n *\n * @param elementType Type of the element that owns the `existingProps`. If the element is a DOM node or undefined, `ownerState` is not applied.\n * @param otherProps Props of the element.\n * @param ownerState\n */\nfunction appendOwnerState(elementType, otherProps, ownerState) {\n  if (elementType === undefined || isHostComponent(elementType)) {\n    return otherProps;\n  }\n  return _extends({}, otherProps, {\n    ownerState: _extends({}, otherProps.ownerState, ownerState)\n  });\n}\nexport default appendOwnerState;"],"names":["object","undefined","result","Object","keys","filter","prop","match","forEach","parameters","getSlotProps","additionalProps","externalSlotProps","externalForwardedProps","className","joinedClasses","clsx","mergedStyle","_extends","style","props","length","internalRef","eventHandlers","extractEventHandlers","componentsPropsWithoutEventHandlers","omitEventHandlers","otherPropsWithoutEventHandlers","internalSlotProps","ref","UNMOUNTED","EXITED","ENTERING","ENTERED","EXITING","Transition","_React$Component","context","_this","call","this","initialStatus","appear","isMounting","enter","appearStatus","in","unmountOnExit","mountOnEnter","state","status","nextCallback","_inheritsLoose","getDerivedStateFromProps","_ref","prevState","_proto","prototype","componentDidMount","updateStatus","componentDidUpdate","prevProps","nextStatus","componentWillUnmount","cancelNextCallback","getTimeouts","exit","timeout","mounting","node","nodeRef","current","ReactDOM","scrollTop","forceReflow","performEnter","performExit","setState","_this2","appearing","_ref2","maybeNode","maybeAppearing","timeouts","enterTimeout","config","safeSetState","onEntered","onEnter","onEntering","onTransitionEnd","_this3","onExit","onExiting","onExited","cancel","nextState","callback","setNextCallback","_this4","active","event","handler","doesNotHaveTimeoutOrListener","addEndListener","_ref3","maybeNextCallback","setTimeout","render","_this$props","children","childProps","_objectWithoutPropertiesLoose","React","TransitionGroupContext","Provider","value","only","noop","contextType","propTypes","defaultProps","useTheme","theme","useThemeSystem","defaultTheme","THEME_ID","componentProps","ownerState","slotState","excludeKeys","arguments","includes","reflow","getTransitionProps","options","_style$transitionDura","_style$transitionTimi","easing","duration","transitionDuration","mode","transitionTimingFunction","delay","transitionDelay","element","elementType","otherProps","isHostComponent"],"sourceRoot":""}