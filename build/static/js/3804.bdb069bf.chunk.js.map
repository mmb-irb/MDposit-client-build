{"version":3,"file":"static/js/3804.bdb069bf.chunk.js","mappings":"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","sources":["utils/load-custom-element/index.js","pages/accession/trajectory/chains/chain-analysis/index.js","pages/accession/trajectory/metadata/index.js","utils/hash-from-string/index.js","utils/color-from-string/index.js","utils/merge-intervals/index.js","pages/accession/trajectory/chains/chain-analysis/process-ipscan-results/index.js","webpack://mdposit/./src/components/animated-card/style.module.css?d4d9","components/animated-card/index.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","webpack://mdposit/./src/components/domains/style.module.css?a054","components/domains/index.js","pages/accession/trajectory/index.js","webpack://mdposit/./src/pages/accession/trajectory/chains/chain-analysis/style.module.css?b840","webpack://mdposit/./src/pages/accession/trajectory/metadata/style.module.css?1f4a","../node_modules/@mui/material/InputAdornment/inputAdornmentClasses.js","../node_modules/@mui/material/InputAdornment/InputAdornment.js","webpack://mdposit/./src/pages/accession/trajectory/chains/style.module.css?611e","pages/accession/trajectory/chains/index.js","webpack://mdposit/./src/pages/accession/trajectory/style.module.css?3307"],"sourcesContent":["const loadCustomElement = importer => ({\n  async as(namespace) {\n    let _namespace = namespace;\n    // load custom element script\n    let customElement = await importer();\n    if (customElement.default) customElement = customElement.default;\n    // if no name was specified, use default provided by the custom element\n    if (\n      !_namespace &&\n      customElement.is &&\n      typeof customElement.is === 'string'\n    ) {\n      _namespace = customElement.is;\n    }\n    // if we get to this point without any name, just give up\n    if (!_namespace) {\n      throw new Error('Please a specify a name for custom element');\n    }\n    // check if not already defined\n    const alreadyExisting = window.customElements.get(_namespace);\n    if (alreadyExisting) {\n      // if it was, with the same element, everything is fine\n      if (alreadyExisting === customElement) return _namespace;\n      throw new Error('This name is already used by another component');\n    }\n    window.customElements.define(_namespace, customElement);\n    return _namespace;\n  },\n});\n\nexport default loadCustomElement;\n","import React, { memo, useEffect, useRef } from 'react';\n\nimport loadCustomElement from '../../../../../utils/load-custom-element';\n\nimport processIPScanResults from './process-ipscan-results';\n\nimport style from './style.module.css';\n\n// Keep elements out of any component, since they must be imported just once\nlet customElements = [];\n// This promise is further resolven when all protvista elements have finished the import process\nlet protvistaLoadedResolve;\nconst protvistaLoaded = new Promise(resolve => { protvistaLoadedResolve = resolve });\n\n// Load all protvista components together in a 'custom' way for them to work\nconst importProtVista = async () => {\n  if (customElements.length > 0) return;\n  customElements = [\n        // WARNING: We must make sure the manager is imported before the others\n        // Otherwise we get many errors of 'this.manager.register is not a function'\n        // The rest of components may be imported in any order\n        await loadCustomElement(() => import(\n            /* webpackChunkName: \"protvista-manager\" */ 'protvista-manager'),\n        ).as('protvista-manager'),\n        loadCustomElement(() => import(\n            /* webpackChunkName: \"protvista-sequence\" */ 'protvista-sequence'\n        )).as('protvista-sequence'),\n        loadCustomElement(() => import(\n            /* webpackChunkName: \"protvista-navigation\" */ 'protvista-navigation'\n        )).as('protvista-navigation'),\n        loadCustomElement(() => import(\n            /* webpackChunkName: \"protvista-coloured-sequence\" */ 'protvista-coloured-sequence'\n        )).as('protvista-coloured-sequence'),\n        loadCustomElement(() => import(\n            /* webpackChunkName: \"protvista-coloured-sequence\" */ 'protvista-coloured-sequence'\n        )).as('protvista-coloured-sequence'),\n        loadCustomElement(() => import(\n            /* webpackChunkName: \"protvista-interpro-track\" */ 'protvista-interpro-track'\n        )).as('protvista-interpro-track')\n  ];\n  // Wait until all protvista elements are loaded and then resolve the promise\n  await Promise.all(customElements);\n  protvistaLoadedResolve();\n};\n\n// Set the protvista interpro track independently, since it needs to keep its own reference\nconst InterproTrack = memo(({ match, length, shape, classAttr }) => {\n    // Set a reference to the protvista element\n    const protvistaRef = useRef();\n    // Update protvista element data after render\n    useEffect(() => {\n        const fillComponentWithData = async () => {\n            // Make sure the element has been imported already or it wont work\n            await protvistaLoaded;\n            // Load data in the reference\n            protvistaRef.current.data = [match];\n            protvistaRef.current.contributors = match.signatures || [];\n        }\n        fillComponentWithData();\n    }, []);\n    // Render the element\n    return (\n        <protvista-interpro-track\n            ref={protvistaRef}\n            length={length}\n            shape={shape}\n            class={classAttr}\n        />\n    );\n});\n\n// The result of this function is memoized since it is a heavy work\nconst ChainAnalyses = memo(({ chain, data, firstResidueNumber }) => {\n    // Import protvista elements in their 'custom' way\n    useEffect(() => {\n        importProtVista();\n    }, []);\n    // Mine data\n    const sequence = data.sequence;\n    const sequenceLength = sequence.length;\n    const interproscanData = data.interproscan;\n    // It may happen that interproscan data is missing when we have a small sequence\n    if (!interproscanData) return 'No InterProScan data';\n    const matches = interproscanData.results[0].matches;\n    const processedMatches = processIPScanResults(matches, firstResidueNumber);\n    // Set the end residue to be displayed\n    const displayEnd = firstResidueNumber + sequenceLength;\n    // Set an shifted sequence by adding null values at the begining\n    // This is the only way I figured out to offset the sequence\n    // Apparently protvista sequence components have no argument for this\n    const shiftedSequence = ' '.repeat(firstResidueNumber) + sequence;\n    return (\n        <protvista-manager\n            attributes=\"length displaystart displayend\"\n            length={sequenceLength}\n            chain={chain}\n        >\n        <protvista-navigation\n            rulerstart={firstResidueNumber}\n            displaystart={firstResidueNumber}\n            displayend={displayEnd}\n        />\n        <div className={style.entries}>\n            <protvista-sequence\n                sequence={shiftedSequence}\n                height=\"37\"\n            />\n            <protvista-coloured-sequence\n                sequence={shiftedSequence}\n                scale=\"hydrophobicity-scale\"\n                height=\"15\"\n            />\n            { processedMatches.length\n            ? processedMatches.map((match, index) => {\n                return (\n                <div key={index} >\n                    <span className={style.label}>{match.accession}</span>\n                    <InterproTrack\n                    match={match}\n                    shape=\"roundRectangle\"\n                    classAttr={match.signatures ? style['has-signatures'] : undefined}\n                    />\n                </div>\n                )})\n            : 'No entry was found for this sequence'\n            }\n        </div>\n        </protvista-manager>\n    );\n});\n\nexport default ChainAnalyses;\n","import React, { useContext } from 'react';\n// Project metadata saved in this context by the accession component\nimport { ProjectCtx } from '../../../../contexts';\n// Visual components\nimport { TextField, InputAdornment, } from '@mui/material';\n// Import a function to round to cents\nimport { round2cents } from 'src/utils/auxiliar-functions';\n// CSS style\nimport style from './style.module.css';\n\n// Label to be shown when a metadata field is not available\nconst NA = 'Not available';\n\n// Helper component for rendering metadata text fields\nconst MetadataTextField = ({ label, title, value, unit, transform }) => {\n    const displayValue =\n        value === null || value === undefined\n            ? NA\n            : transform\n            ? transform(value)\n            : value;\n\n    const inputProps = unit\n        ? {\n            endAdornment: (\n                <InputAdornment variant=\"filled\" position=\"end\">\n                    {unit}\n                </InputAdornment>\n            ),\n        }\n        : undefined;\n\n    return (\n        <TextField\n            className={style['text-field']}\n            label={label}\n            title={title}\n            value={displayValue}\n            disabled={value === null || value === undefined}\n            InputProps={inputProps}\n        />\n    );\n};\n\n// This component displays the trajectory metadata\nconst TrajectoryMetadata = () => {\n    // Load metadata from the project context\n    const { metadata } = useContext(ProjectCtx);\n    // When there is no metadata\n    if (!metadata) return 'No available metadata';\n    // Calculate frequency and multiply it by 1000 since it will be represented in picoseconds\n    const frequency = (metadata.FRAMESTEP && metadata.FRAMESTEP * 1000) || null;\n    // Render the whole metadata\n    return (<>\n        <fieldset>\n            <legend>Counts</legend>\n            <MetadataTextField\n                label=\"System atoms\"\n                title=\"Total number of atoms in the system\"\n                value={metadata.SYSTATS}\n            />\n            <MetadataTextField\n                label=\"Proteins atoms\"\n                title=\"Number of protein atoms in the system\"\n                value={metadata.PROTATS}\n            />\n            <MetadataTextField\n                label=\"Proteins residues\"\n                title=\"Number of protein residues in the system\"\n                value={metadata.PROT}\n            />\n            <MetadataTextField\n                label=\"Solvent molecules\"\n                title=\"Number of solvent molecules in the system\"\n                value={metadata.SOL}\n            />\n            <MetadataTextField\n                label=\"Positive ions\"\n                title=\"Number of positively charged ions in the system\"\n                value={metadata.NA}\n            />\n            <MetadataTextField\n                label=\"Negative ions\"\n                title=\"Number of negatively charged ions in the system\"\n                value={metadata.CL}\n            />\n        </fieldset>\n        <fieldset>\n            <legend>System box</legend>\n            <MetadataTextField\n                label=\"Type\"\n                title=\"Box type\"\n                value={metadata.BOXTYPE}\n            />\n            <MetadataTextField\n                label=\"Size X\"\n                title=\"Simulated system box X dimension\"\n                value={metadata.BOXSIZEX}\n                transform={round2cents}\n                unit=\"nm\"\n            />\n            <MetadataTextField\n                label=\"Size Y\"\n                title=\"Simulated system box Y dimension\"\n                value={metadata.BOXSIZEY}\n                transform={round2cents}\n                unit=\"nm\"\n            />\n            <MetadataTextField\n                label=\"Size Z\"\n                title=\"Simulated system box Z dimension\"\n                value={metadata.BOXSIZEZ}\n                transform={round2cents}\n                unit=\"nm\"\n            />\n            <MetadataTextField\n                label=\"Volume\"\n                title=\"Simulated system box volume\"\n                value={\n                    metadata.BOXSIZEX === null ||\n                        metadata.BOXSIZEY === null ||\n                        metadata.BOXSIZEZ === null\n                        ? null\n                        : metadata.BOXSIZEX * metadata.BOXSIZEY * metadata.BOXSIZEZ\n                }\n                transform={round2cents}\n                unit=\"nm³\"\n            />\n        </fieldset>\n        <fieldset>\n            <legend>Simulation</legend>\n            <MetadataTextField\n                label=\"Length\"\n                title=\"Simulation length\"\n                value={metadata.timeLength}\n                transform={round2cents}\n                unit=\"ns\"\n            />\n            <MetadataTextField\n                label=\"Timestep\"\n                title=\"Simulation timestep\"\n                value={metadata.TIMESTEP}\n                unit=\"fs\"\n            />\n            <MetadataTextField\n                label=\"Snapshots\"\n                title=\"Number of snapshots\"\n                value={metadata.mdFrames}\n            />\n            <MetadataTextField\n                label=\"Frequency\"\n                title=\"Frequency of snapshots\"\n                value={frequency}\n                unit=\"ps\"\n            />\n            <MetadataTextField\n                label=\"Force fields\"\n                title=\"Force fields\"\n                value={metadata.FF}\n                transform={(v) => v.join(', ')}\n            />\n            <MetadataTextField\n                label=\"Temperature\"\n                title=\"Temperature\"\n                value={metadata.TEMP}\n                unit=\"K\"\n            />\n            <MetadataTextField\n                label=\"Water type\"\n                title=\"Water type\"\n                value={metadata.WAT}\n            />\n            <MetadataTextField\n                label=\"Ensemble\"\n                title=\"Simulation ensemble\"\n                value={metadata.ENSEMBLE}\n            />\n            {/*\n            <MetadataTextField\n                label=\"Pressure coupling\"\n                title=\"Pressure coupling method\"\n                value={metadata.PCOUPLING}\n            />\n            <MetadataTextField\n                label=\"Membrane\"\n                title=\"Membrane type\"\n                value={metadata.MEMBRANE}\n            /> \n            */}\n        </fieldset>\n    </>);\n};\n\nexport default TrajectoryMetadata;","const hashFromString = string => {\n  let hash = 0;\n  for (let i = 0; i < string.length; i++) {\n    hash = (hash << 5) - hash + string.charCodeAt(i);\n    hash |= 0;\n  }\n  return hash;\n};\n\nexport default hashFromString;\n","import hashFromString from '../hash-from-string';\n\nconst colorFromString = string => {\n  const hash = hashFromString(string);\n  const hue = Math.abs(hash % 360);\n  const saturation = Math.abs(hash % 20) + 40; // 50% give or take 10%\n  const lightness = Math.abs(hash % 10) + 45; // 50% give or take 5%\n  return `hsla(${hue}, ${saturation}%, ${lightness}%, 1)`;\n};\n\nexport default colorFromString;\n","const startAccessorDefault = (interval, value) =>\n  Number.isFinite(value) ? (interval[0] = value) : interval[0];\nconst endAccessorDefault = (interval, value) =>\n  Number.isFinite(value) ? (interval[1] = value) : interval[1];\n\nconst mergeIntervals = (\n  intervals,\n  startAccessor = startAccessorDefault,\n  endAccessor = endAccessorDefault,\n) => {\n  const sortedIntervals = Array.from(intervals).sort(\n    (a, b) => startAccessor(a) - startAccessor(b),\n  );\n  let output = [];\n  let current;\n  for (const interval of sortedIntervals) {\n    if (!current) {\n      // first loop\n      current = interval;\n    } else if (endAccessor(current) < startAccessor(interval)) {\n      // current is not within interval\n      output.push(current);\n      current = interval;\n    } else {\n      // current is within, or contiguous to interval\n      endAccessor(\n        current,\n        Math.max(endAccessor(current), endAccessor(interval)),\n      );\n    }\n  }\n  if (current) output.push(current);\n  return output;\n};\n\nexport default mergeIntervals;\n","import colorFromString from '../../../../../../utils/color-from-string';\nimport mergeIntervals from '../../../../../../utils/merge-intervals';\n\n// Renumerate residue numbers to make them match the actual chain they come from\nconst shiftLocations = (fragments, shift) => {\n  fragments.forEach(fragment => {\n    fragment.start += shift -1;\n    fragment.end += shift -1;\n  })\n  return fragments;\n}\n\nconst processLocations = (locations, firstResidueNumber = 1) =>\n  locations.map(location => ({\n    fragments: shiftLocations(location['location-fragments'], firstResidueNumber),\n  }));\n\nconst processIPScanResults = (matches, firstResidueNumber) => {\n  const processed = [];\n  // for all the matches\n  for (const match of matches || []) {\n    // if the match has an entry, consider it as a signature of the entry\n    if (match.signature.entry) {\n      let existing = processed.find(\n        m => m.accession === match.signature.entry.accession,\n      );\n      // if the entry hadn't been stored yet, create it now\n      if (!existing) {\n        existing = {\n          accession: match.signature.entry.accession,\n          db: 'InterPro',\n          signatures: [],\n          locations: [],\n          color: colorFromString(match.signature.entry.accession),\n        };\n        processed.push(existing);\n      }\n      const locations = processLocations(match.locations, firstResidueNumber);\n      existing.locations = mergeIntervals(\n        [...existing.locations, ...locations],\n        (interval, value) =>\n          Number.isFinite(value)\n            ? (interval.fragments[0].start = value)\n            : interval.fragments[0].start,\n        (interval, value) =>\n          Number.isFinite(value)\n            ? (interval.fragments[0].end = value)\n            : interval.fragments[0].end,\n      );\n      // add the match as a signature of that entry\n      existing.signatures.push({\n        accession: match.signature.accession,\n        db: match.signature.signatureLibraryRelease.library,\n        locations,\n        color: existing.color.replace(', 1)', ', 0.25)'),\n      });\n    } else {\n      // the match doesn't have entry, it is not integrated\n      processed.push({\n        accession: match.signature.accession,\n        db: match.signature.signatureLibraryRelease.library,\n        locations: processLocations(match.locations, firstResidueNumber),\n        color: colorFromString(match['model-ac']),\n      });\n    }\n  }\n\n  // sort them\n  processed\n    // secondary sort by start position\n    .sort((a, b) => a.locations[0].fragments[0].start - b.locations[0].fragments[0].start)\n    // primary sort by number of signatures\n    .sort((a, b) => (b.signatures || []).length - (a.signatures || []).length);\n\n  return processed;\n};\n\nexport default processIPScanResults;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"style_container__M9GCG\"};","import React, { useLayoutEffect, useRef, forwardRef } from 'react';\nimport { Card } from '@mui/material';\n\nimport reducedMotion from '../../utils/reduced-motion';\n\nimport style from './style.module.css';\n\nconst KEYFRAMES = { opacity: [0, 1] };\n\nif (!reducedMotion()) {\n  KEYFRAMES.transform = ['translateY(50px)', 'translateY(0)'];\n}\n\nconst ANIMATION_OPTIONS = {\n  fill: 'both',\n  easing: 'cubic-bezier(0, .99, .56, 1.1)',\n  duration: 500,\n};\n\n// Make the card appear and slide softly from down to up when the page is loaded\nconst AnimatedCard = forwardRef(({ overrideComponent, ...props }, ref) => {\n  const containerRef = useRef(null);\n\n  useLayoutEffect(() => {\n    const node = containerRef.current && containerRef.current.firstElementChild;\n    if (!(node && node.animate)) return;\n\n    const index = Array.from(\n      document.querySelectorAll('main section'),\n    ).findIndex(section => node === section);\n\n    const animation = node.animate(KEYFRAMES, {\n      ...ANIMATION_OPTIONS,\n      delay: index * 150,\n    });\n\n    return () => animation.cancel();\n  }, []);\n\n  const Component = overrideComponent ? 'section' : Card;\n\n  return (\n    <div ref={containerRef} className={style.container}>\n      <Component component=\"section\" {...props} ref={ref} />\n    </div>\n  );\n});\n\nexport default AnimatedCard;\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"style_card__Ocl+v\",\"chips\":\"style_chips__40Fvj\",\"title\":\"style_title__tHkJW\"};","import React, {\n  useContext,\n  useState,\n  useMemo,\n  useEffect,\n  Suspense,\n} from 'react';\n\nimport Card from '../animated-card';\nimport { CardContent, Chip } from '@mui/material';\n\nimport { ProjectCtx } from '../../contexts';\n\nimport style from './style.module.css';\n\nimport Loading from '../loading';\n\nimport { rangedSelectionParser } from '../../utils/auxiliar-functions';\n\n// Show floatting bubles with domain names\n// When a bubble is selected the domain is represented\nconst Domains = ({ setRepresentations, setInitialFocus }) => {\n  // Get the current project data\n  const {\n    metadata,\n    proteinReferences,\n    ligandReferences,\n    topology,\n    interactions\n  } = useContext(ProjectCtx);\n\n  // Set the first domain (the overall) as the default selected domain\n  const [selectedDomain, setSelectedDomain] = useState(0);\n  const [overlapedDomain, setOverlapedDomain] = useState(null);\n\n  // Get pre-build representations\n  const defaultRepresentations = topology && topology.defaultRepresentations;\n  const mutationsRepresentation = topology && topology.mutationsRepresentations;\n  const epitopesRepresentation = topology && topology.epitopesRepresentations;\n\n  // The domains strucutre is:\n  // domains: [\n  //    {\n  //      \"name\" : \"Example domain name\",\n  //      \"description\": \"Example domain description\"\n  //      \"representations\" : [\n  //        {\n  //          \"name\" : \"Region 1\",\n  //          \"selection\" : \"16-316\",\n  //          \"type\": \"ball+stick\",\n  //          \"color\": \"element\",\n  //          \"opacity\": 0.5,\n  //          ...\n  //        },\n  //        {\n  //          \"name\" : \"Region 2\",\n  //          \"selection\" : \"418-439\"\n  //        }\n  //      ]\n  //    },\n  // ]\n  const domains = useMemo(() => {\n    if (!topology) return;\n    // Set the overall domain\n    const overallDomain = {\n      name: 'Overall',\n      representations: defaultRepresentations,\n    };\n    // Get custom domains in metadata\n    const customDomains = metadata.CUSTOMS || [];\n    // Get domains constructed from interactions\n    const interactionDomains = [];\n    if (interactions) {\n      interactions.forEach(interaction => {\n        if (interaction.failed) return;\n        // Add a new domain for each new agent and skip repeated agents\n        const agent1 = {\n          name: interaction.agent_1,\n          atoms: interaction.atom_indices_1,\n        };\n        const agent2 = {\n          name: interaction.agent_2,\n          atoms: interaction.atom_indices_2,\n        };\n        [agent1, agent2].forEach(agent => {\n          const current = interactionDomains.find(domain => domain.name === agent.name);\n          if (current) return;\n          const nglSelection = topology.atomIndices2Ngl(agent.atoms);\n          interactionDomains.push({\n            name: agent.name,\n            representations: [\n              {\n                name: agent.name,\n                selection: nglSelection,\n                type: 'licorice',\n              },\n            ],\n          });\n        });\n      });\n    }\n    // Get domains from protein references\n    // Skip those whose name matches with an interacting agent or custom domain\n    const referenceDomains = [];\n    proteinReferences && proteinReferences.forEach(proteinReference => {\n      const referenceId = proteinReference.uniprot;\n      // Start by creating a domain for the whole reference\n      const wholeReferenceResidueIndices = topology.getReferenceResidueIndices(referenceId);\n      const wholeReferenceNglSelection = topology.residueIndices2Ngl(wholeReferenceResidueIndices);\n      const wholeReferenceDomain = {\n        name: proteinReference.name,\n        representations: [{\n          name: proteinReference.name,\n          selection: wholeReferenceNglSelection.rangedSelection\n        }],\n      };\n      referenceDomains.push(wholeReferenceDomain);\n      // Collect all domains in protein reference data\n      let referenceDataDomains = [];\n      // Domains in the 'domains' filed are automatically mined from uniprot\n      if (proteinReference.domains) referenceDataDomains = referenceDataDomains.concat(proteinReference.domains);\n      // Domains in the 'custom_domains' filed are added by hand in the database and they are not common\n      if (proteinReference.custom_domains) referenceDataDomains = referenceDataDomains.concat(proteinReference.custom_domains);\n      // If there are not domains at all then stop here\n      if (referenceDataDomains.length === 0) return;\n      // ----------------------------------------------------------------------------------------\n      // These domains are only specified for the protein reference sequence\n      // Residue selections must be mapped back to the current topology for each domain\n      // Custom reference domains may contain a 'representations' field instead of a 'selection' field\n      referenceDataDomains.forEach(domain => {\n        const domainName = domain.name;\n        // Discard the domain if its name matches an already existing domain\n        if (customDomains.find(domain => domain.name === domainName)) return;\n        if (interactionDomains.find(domain => domain.name === domainName))\n          return;\n        // Discard the domain if its name matches the reference name\n        // This is quite usual: some references have domains which are basically the whole thing\n        // There may be a difference in the pole residues, but it is redundant anyway\n        // Note that we already add a domain for the whole reference\n        if (proteinReference.name === domainName) return;\n        const mappedDomain = {\n          name: proteinReference.name + ' - ' + domainName,\n          description: domain.description, // It may not have description\n          representations: [],\n        };\n        // Set a function to modify a representation by parsing its selections to NGL\n        const parseRepresentationSelection = representation => {\n          const selection = representation.selection;\n          const parsedSelection = rangedSelectionParser(selection);\n          // WARNING: A single protein reference residue may correspond to multiple topology residues\n          const mappedSelection = topology.getReferenceResidueIndices(referenceId, parsedSelection);\n          // Representations with a selection not present in topology are discarded\n          if (!mappedSelection || mappedSelection.length === 0) return;\n          // Transform the residue indices to a NGL selection\n          const { rangedSelection: nglSelection, small } = topology.residueIndices2Ngl(mappedSelection);\n          const newRepresentation = { ...representation };\n          newRepresentation.selection = nglSelection;\n          // residueIndices2Ngl returns 'small' = true when there are series of 3 residues or less\n          // These small residue selections will be not represented in cartoon due to an NGL bug\n          // https://github.com/nglviewer/ngl/issues/223\n          if (small) newRepresentation.type = 'licorice';\n          mappedDomain.representations.push(newRepresentation);\n        };\n        if (domain.selection) {\n          const domainRepresentation = { name: domainName, selection: domain.selection };\n          parseRepresentationSelection(domainRepresentation);\n        }\n        if (domain.representations) {\n          domain.representations.forEach(parseRepresentationSelection);\n        }\n        // Domains whose representatios have been all discarded are also discarded\n        if (mappedDomain.representations.length > 0)\n          referenceDomains.push(mappedDomain);\n      });\n    });\n    // Create a new domains for every ligand reference\n    // Skip those whose name matches with an interacting agent or custom domain\n    ligandReferences && ligandReferences.forEach(ligandReference => {\n      // Set the ligand name as the domain name\n      const domainName = ligandReference.name;\n      // Discard the domain if its name matches an already existing domain\n      if (customDomains.find(domain => domain.name === domainName)) return;\n      if (interactionDomains.find(domain => domain.name === domainName))\n        return;\n      // Get the NGL selection for ligand residues\n      const residueIndices = topology.getReferenceResidueIndices(ligandReference.pubchem);\n      if (!residueIndices) throw new Error(`Ligand reference \"${ligandReference.pubchem}\" not found in topology`);\n      const { rangedSelection: nglSelection } = topology.residueIndices2Ngl(residueIndices);\n      // Set the ligand domain\n      const ligandDomain = {\n        name: domainName,\n        // description: \n        representations: [\n          {\n            name: domainName,\n            selection: nglSelection,\n            type: 'ball+stick',\n            color: 'element'\n          }\n        ],\n      };\n      // Add it to the reference domains list\n      referenceDomains.push(ligandDomain);\n    });\n    // Put all domains together\n    const domains = [\n      overallDomain,\n      ...customDomains,\n      ...referenceDomains,\n      ...interactionDomains,\n    ];\n    // Add the mutations domain if possible\n    if (mutationsRepresentation) {\n      const mutationsDomain = {\n        name: 'Mutations',\n        description:\n          'Show the entropies of each residue according to the bibliography',\n        representations: mutationsRepresentation,\n      };\n      domains.push(mutationsDomain);\n    }\n    if (epitopesRepresentation) {\n      const epitopesDomain = {\n        name: 'Epitopes',\n        description:\n          'Show regions considered as epitopes according to the bibliography',\n        representations: epitopesRepresentation,\n      };\n      domains.push(epitopesDomain);\n    }\n    // Reset the selected domain\n    setSelectedDomain(0);\n    return domains;\n  }, [\n    metadata,\n    defaultRepresentations,\n    mutationsRepresentation,\n    epitopesRepresentation,\n    topology,\n    proteinReferences,\n    interactions,\n  ]);\n\n  // Add the selected domain (if any) configuration to the viewer\n  useEffect(() => {\n    if (!domains) return;\n    const currentSelectedDomain = domains[selectedDomain];\n    const currentSelectedRepresentations = currentSelectedDomain.representations.map(\n      rep => {\n        return { ...rep };\n      },\n    );\n    const currentOverlapedDomain =\n      overlapedDomain !== null && domains[overlapedDomain];\n    const currentOverlapedRepresentations = currentOverlapedDomain\n      ? currentOverlapedDomain.representations.map(rep => {\n          return {\n            ...rep,\n            type: 'spacefill',\n            opacity: rep.opacity ? rep.opacity * 0.2 : 0.2,\n          };\n        })\n      : [];\n    // Set an NGL representation for each domain representation\n    const representations = [\n      ...currentSelectedRepresentations,\n      ...currentOverlapedRepresentations,\n    ];\n    // Add a representation with the whole strucutre in grey color and with the opacity reduced\n    if (currentSelectedDomain.name !== 'Overall')\n      representations.push({\n        name: 'Reference',\n        color: 'grey',\n        opacity: 0.1,\n      });\n\n    // Set the NGL selection for the focus\n    const focusSelection = `(${\n      currentSelectedDomain.representations\n        .map(rep => rep.selection)\n        .join(') or (')\n    })`;\n    const initialFocus = { sele: focusSelection };\n    setRepresentations(representations);\n    setInitialFocus(initialFocus);\n  }, [domains, selectedDomain, overlapedDomain, setRepresentations, setInitialFocus]);\n\n  // If project data is still loading then stop here\n  if (!domains) return <Loading />;\n\n  return (\n    <Suspense fallback={<Loading />}>\n      {domains && domains.length > 0 && (\n        <Card className={style.card}>\n          <CardContent>\n            <a className={style.title}>Domains</a>\n            {domains.map((dom, d) => (\n              <Chip\n                key={dom.name}\n                title={dom.description}\n                className={style.chips}\n                label={dom.name}\n                variant={\n                  selectedDomain === d || overlapedDomain === d\n                    ? undefined\n                    : 'outlined'\n                }\n                color={\n                  selectedDomain === d\n                    ? 'primary'\n                    : overlapedDomain === d\n                    ? 'secondary'\n                    : undefined\n                }\n                onClick={event => {\n                  // When the keys control, shift or command (ios) are hold while clicking\n                  const overlap =\n                    event.shiftKey || event.ctrlKey || event.metaKey;\n                  if (overlap)\n                    return setOverlapedDomain(previous => {\n                      if (previous === d) return null;\n                      if (selectedDomain === d) return null;\n                      return d;\n                    });\n                  else\n                    return setSelectedDomain(previous => {\n                      if (previous === d) return 0;\n                      if (overlapedDomain === d) setOverlapedDomain(null);\n                      return d;\n                    });\n                }}\n              />\n            ))}\n          </CardContent>\n        </Card>\n      )}\n    </Suspense>\n  );\n};\n\nexport default Domains;\n","import React, { useState } from 'react';\n// A hook to track whenever some element is on screen\nimport { useInView } from 'react-intersection-observer';\n\n// Visual components\nimport Card from '../../../components/animated-card';\nimport { CardContent } from '@mui/material';\n\n// Viewer available domains\nimport Domains from '../../../components/domains';\n// The molecular viewer\nimport ViewerWithControls from '../../../components/viewer-with-controls';\n// Component for the metadata table\nimport TrajectoryMetadata from './metadata';\n// Component for the chains analysis\nimport ChainsAnalysis from './chains';\n\n// CSS style\nimport style from './style.module.css';\n\n// Define permanent options for the \"useInView\"\nconst useInViewOptions = { triggerOnce: true, rootMargin: '100px' };\n\nconst Trajectory = () => {\n  // useInView acts as a React hook\n  // Track if the NGL viewer (nglRef) and the analyses (nightingaleRef) are on screen\n  // The status (e.g. isNglVisible) is returned true/false when the element is in/out the screen respectively\n  const [nglRef, isNglVisible] = useInView(useInViewOptions);\n  const [nightingaleRef, isNightingaleVisible] = useInView(useInViewOptions);\n\n  // Set the representations to be displayed in the viewer\n  const representationsState = useState(null);\n  const [ representations, setRepresentations ] = representationsState;\n\n  // Set the viewer initial focus\n  const [ initialFocus, setInitialFocus ] = useState(null);\n\n  return (\n    <>\n      <Domains setRepresentations={setRepresentations} setInitialFocus={setInitialFocus} />\n      <Card className={style['ngl-card']} ref={nglRef}>\n        {/* Render the NGL viewer when it is on screen*/}\n        {isNglVisible ? (\n          <ViewerWithControls\n            className={style.container}\n            representationsState={representationsState}\n            initialFocus={initialFocus}\n          />\n        ) : (\n          <div style={{ height: '50vh' }} />\n        )}\n      </Card>\n      <Card className={style.card}>\n        <CardContent>\n          <details>\n            <summary className={style['trajectory-metadata-title']}>\n              Trajectory metadata\n            </summary>\n            <br />\n            <span>\n              {/* Renders the metadata table */}\n              <TrajectoryMetadata />\n            </span>\n          </details>\n        </CardContent>\n      </Card>\n      <Card className={style.card} ref={nightingaleRef}>\n        {isNightingaleVisible ? (\n          <CardContent>\n            {/* Render chain analyses */}\n            <ChainsAnalysis />\n          </CardContent>\n        ) : (\n          <div style={{ height: '50vh' }} />\n        )}\n      </Card>\n    </>\n  );\n};\n\nexport default Trajectory;\n","// extracted by mini-css-extract-plugin\nexport default {\"entries\":\"style_entries__T4f7r\",\"has-signatures\":\"style_has-signatures__4CW-U\",\"label\":\"style_label__UT0BE\"};","// extracted by mini-css-extract-plugin\nexport default {\"text-field\":\"style_text-field__34cWZ\"};","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getInputAdornmentUtilityClass(slot) {\n  return generateUtilityClass('MuiInputAdornment', slot);\n}\nconst inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'standard', 'outlined', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\nexport default inputAdornmentClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _span;\nconst _excluded = [\"children\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from '../utils/capitalize';\nimport Typography from '../Typography';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from './inputAdornmentClasses';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\nconst InputAdornmentRoot = styled('div', {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  height: '0.01em',\n  // Fix IE11 flexbox alignment. To remove at some point.\n  maxHeight: '2em',\n  alignItems: 'center',\n  whiteSpace: 'nowrap',\n  color: (theme.vars || theme).palette.action.active\n}, ownerState.variant === 'filled' && {\n  // Styles applied to the root element if `variant=\"filled\"`.\n  [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n    marginTop: 16\n  }\n}, ownerState.position === 'start' && {\n  // Styles applied to the root element if `position=\"start\"`.\n  marginRight: 8\n}, ownerState.position === 'end' && {\n  // Styles applied to the root element if `position=\"end\"`.\n  marginLeft: 8\n}, ownerState.disablePointerEvents === true && {\n  // Styles applied to the root element if `disablePointerEvents={true}`.\n  pointerEvents: 'none'\n}));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n  const {\n      children,\n      className,\n      component = 'div',\n      disablePointerEvents = false,\n      disableTypography = false,\n      position,\n      variant: variantProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n  const ownerState = _extends({}, props, {\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"text.secondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ? ( /* notranslate needed while Google Translate will not fix zero-width space issue */_span || (_span = /*#__PURE__*/_jsx(\"span\", {\n          className: \"notranslate\",\n          children: \"\\u200B\"\n        }))) : null, children]\n      })\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;","// extracted by mini-css-extract-plugin\nexport default {\"popup\":\"style_popup__-6ZHj\",\"portal-container\":\"style_portal-container__B70Nq\",\"chain-analysis-list\":\"style_chain-analysis-list__TzUHq\",\"trajectory-metadata-title\":\"style_trajectory-metadata-title__7GlAT\"};","import React, {\n    memo,\n    useContext,\n    useEffect,\n} from 'react';\n\n// Visual components\nimport { Typography } from '@mui/material';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleRight } from '@fortawesome/free-solid-svg-icons';\n\n// Recover the metadata saved in this context by the accession script\nimport { ProjectCtx } from '../../../../contexts';\n\n// The single chain analysis component, using protvista\nimport ChainAnalysis from './chain-analysis';\n\n// Check if reduced motion is requested\nimport reducedMotion from '../../../../utils/reduced-motion';\n\n// CSS style\nimport style from './style.module.css';\n\nconst dbMap = new Map([\n    ['InterPro', 'InterPro'],\n    // special cases\n    ['TIGRFAM', 'tigrfams'],\n    ['PROSITE_PROFILES', 'profile'],\n    ['PROSITE_PATTERNS', 'prosite'],\n    ['SUPERFAMILY', 'ssf'],\n    ['GENE3D', 'cathgene3d'],\n    // just the same, but lowercase\n    ['CDD', 'cdd'],\n    ['HAMAP', 'hamap'],\n    ['PANTHER', 'panther'],\n    ['PFAM', 'pfam'],\n    ['PIRSF', 'pirsf'],\n    ['PRINTS', 'prints'],\n    ['SFLD', 'sfld'],\n    ['SMART', 'smart'],\n]);\n\nconst ChainsAnalysis = memo(() => {\n    // Load chains references and the topology manager\n    const { topology: topologyManager } = useContext(ProjectCtx);\n    // Portals create a window where a web page is pre rendered without navigating to\n    // You can navigate to this web page by clicking on the portal\n    // NOTE: see https://web.dev/hands-on-portals for tutorial on Portals\n    useEffect(() => {\n        // bypass React for DOM alteration\n        // document.createElement is a different way to create React elements\n        const popup = document.createElement('div');\n        popup.className = style.popup;\n        let portal, portalContainer;\n        if ('HTMLPortalElement' in window) {\n            portalContainer = document.createElement('div');\n            portalContainer.className = style['portal-container'];\n            portal = document.createElement('portal');\n            portalContainer.appendChild(portal);\n            popup.appendChild(portalContainer);\n            portal.addEventListener('click', () => {\n            const bcr = portal.getBoundingClientRect();\n            portal.animate(\n                { transform: [`scale(1) translate(${-bcr.left}px, ${-bcr.top}px)`] },\n                {\n                    duration: reducedMotion() ? 0 : 1000,\n                    easing: 'cubic-bezier(.23,-0.26,0,1)',\n                    fill: 'both',\n                },\n            ).onfinish = () => {\n                // TODO: whenever the bug removing history when activating a portal is\n                // TODO: fixed, use this piece of code\n                // portal.activate();\n                // TODO: in the meantime... (yes, it does an ugly flash 🤷‍)\n                window.location.href = portal.src;\n            };\n            });\n        }\n    \n        const link = document.createElement('a');\n        link.rel = 'noopener';\n        link.target = '_blank';\n        popup.appendChild(link);\n    \n        let displayed = false;\n        let timeout;\n    \n        const clearPopup = () => {\n            link.textContent = '';\n            link.href = '';\n            if (portal) {\n                portalContainer.style.display = 'none';\n                portal.src = null;\n                portal.removeAttribute('src');\n            }\n            popup.style.visibility = 'hidden';\n            popup.style.transform = 'translate(0, 0)';\n        };\n    \n        const popupEnterHandle = () => clearTimeout(timeout);\n        const popupLeaveHandle = () => (timeout = setTimeout(clearPopup, 1000));\n    \n        popup.addEventListener('mouseenter', popupEnterHandle);\n        popup.addEventListener('mouseleave', popupLeaveHandle);\n    \n        // event handler for events emitted by the nightingale/protvista components\n        const handler = event => {\n            if (!event.detail) return;\n            let bcrTarget, bcrPopup, bcrTrack;\n            switch (event.detail.eventtype) {\n            case 'mouseover':\n                if (!event.detail.feature.accession) return;\n    \n                clearTimeout(timeout);\n    \n                const IP_DB = dbMap.get(event.detail.feature.db);\n                const href = IP_DB &&\n                    `https://www.ebi.ac.uk/interpro/entry/${IP_DB}/${event.detail.feature.accession}/`;\n                if (portal && IP_DB) portal.src = href;\n                link.textContent = `${event.detail.feature.db} - ${event.detail.feature.accession}`;\n                link.href = href;\n                if (IP_DB) {\n                if (portal) portalContainer.style.display = 'block';\n                } else {\n                if (portal) {\n                    portalContainer.style.display = 'none';\n                    portal.removeAttribute('src');\n                    portal.src = null;\n                }\n                link.removeAttribute('href');\n                }\n    \n                bcrTarget = event.detail.target.getBoundingClientRect();\n                bcrPopup = popup.getBoundingClientRect();\n                bcrTrack = event.detail.target\n                    .closest('protvista-interpro-track')\n                    .getBoundingClientRect();\n    \n                // x\n                const translateX = Math.min(\n                Math.max(\n                    // center the popup in the middle of the region\n                    bcrTarget.left + bcrTarget.width / 2 - bcrPopup.width / 2,\n                    // make sure the popup doesn't overflow to the left\n                    bcrTrack.left,\n                ),\n                // make sure the popup doesn't overflow to the right\n                bcrTrack.right - bcrPopup.width,\n                );\n                // y\n                const translateY = window.scrollY + bcrTarget.top - bcrPopup.height;\n    \n                popup.style.visibility = 'visible';\n                popup.style.transform = `translate(${translateX}px, ${translateY}px)`;\n    \n                displayed = true;\n                break;\n            case 'mouseout':\n                if (!displayed) return; // no need to do DOM operation, it's already invisible\n                timeout = setTimeout(clearPopup, 1000);\n    \n                displayed = false;\n                break;\n            default:\n            // ignore\n            }\n        };\n        document.body.appendChild(popup);\n        window.addEventListener('change', handler);\n        // clean-up logic\n        return () => {\n            window.removeEventListener('change', handler);\n            popup.removeEventListener('mouseenter', popupEnterHandle);\n            popup.removeEventListener('mouseleave', popupLeaveHandle);\n            document.body.removeChild(popup);\n        };\n    }, []);\n    // If the topology manager is not ready yet then return here\n    if (!topologyManager) return;\n  \n    // Render the functional analysis with a brief introduction\n    // Here chainReferences contains the \"analysis\" data\n    // WARNING: Use the topology manager chain references, not the project manager references\n    // WARNING: Otherwise, chain references mya no contain the \"chains\" field in the first render\n    const chainReferences = topologyManager && topologyManager.chainReferences;\n    if (chainReferences && chainReferences.length > 0) {\n        return (\n        <>\n            {/* Brief introduction */}\n            <Typography variant=\"h5\">Protein functional analysis</Typography>\n            <br />\n            <Typography variant=\"subtitle2\">\n            <strong>{chainReferences.length}</strong> chains were analysed.\n            </Typography>\n            <ul className={style['chain-analysis-list']}>\n            {/* Here, main data is displayed */}\n            {(() => {\n                // Build all components in a list so we can sort them by chain at the end\n                const chainComponents = [];\n                chainReferences.forEach(chainReference => {\n                    const chainLetters = chainReference.chains;\n                    chainLetters.forEach(chainLetter => {\n                        // Get some data using the topology manager when it is available\n                        let name = '';\n                        let firstResidueNumber = 1;\n                        if (topologyManager) {\n                            const chain = topologyManager.getChainByName(chainLetter);\n                            name = chain.metadataChainName;\n                            firstResidueNumber = chain.residueNumbers[0];\n                        }\n                        chainComponents.push(\n                            <li key={chainLetter}>\n                                <Typography variant=\"h6\">\n                                <FontAwesomeIcon icon={faAngleRight} />\n                                {` Chain ${chainLetter} ${name ? '(' + name + ')' : ''}`}\n                                </Typography>\n                                {/* the main visual asset */}\n                                <ChainAnalysis\n                                    chain={chainLetter}\n                                    data={chainReference}\n                                    firstResidueNumber={firstResidueNumber}\n                                />\n                            </li>\n                        );\n                    });\n                });\n                // Sort chains alphabetically\n                return chainComponents.sort((a, b) => a.key.localeCompare(b.key));\n            })()}\n            </ul>\n            <Typography variant=\"body2\">\n            Data generated using{' '}\n            <a\n                href=\"https://www.ebi.ac.uk/\"\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n            >\n                EBI\n            </a>\n            's{' '}\n            <a\n                href=\"https://www.ebi.ac.uk/interpro/about/interproscan/\"\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n            >\n                InterProScan service\n            </a>{' '}\n            and visualised using the{' '}\n            <a\n                href=\"https://ebi-webcomponents.github.io/nightingale/\"\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n            >\n                Nightingale visualisation library\n            </a>\n            .\n            </Typography>\n        </>\n        );\n    } else return 'No chain analyses available';\n});\n\nexport default ChainsAnalysis;","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"style_card__T1Y+D\",\"ngl-card\":\"style_ngl-card__596lW\",\"container\":\"style_container__VwOAd\",\"trajectory-metadata-title\":\"style_trajectory-metadata-title__MQcG8\"};"],"names":["importer","as","namespace","_namespace","customElement","default","is","Error","alreadyExisting","window","customElements","get","define","protvistaLoadedResolve","protvistaLoaded","Promise","resolve","InterproTrack","memo","_ref","match","length","shape","classAttr","protvistaRef","useRef","useEffect","async","current","data","contributors","signatures","fillComponentWithData","_jsx","ref","class","_ref2","chain","firstResidueNumber","loadCustomElement","all","importProtVista","sequence","sequenceLength","interproscanData","interproscan","matches","results","processedMatches","processIPScanResults","displayEnd","shiftedSequence","repeat","_jsxs","attributes","children","rulerstart","displaystart","displayend","className","style","entries","height","scale","map","index","label","accession","undefined","MetadataTextField","title","value","unit","transform","displayValue","inputProps","endAdornment","InputAdornment","variant","position","TextField","disabled","InputProps","TrajectoryMetadata","metadata","useContext","ProjectCtx","frequency","FRAMESTEP","_Fragment","SYSTATS","PROTATS","PROT","SOL","NA","CL","BOXTYPE","BOXSIZEX","round2cents","BOXSIZEY","BOXSIZEZ","timeLength","TIMESTEP","mdFrames","FF","v","join","TEMP","WAT","ENSEMBLE","string","hash","i","charCodeAt","hashFromString","hue","Math","abs","saturation","lightness","concat","startAccessorDefault","interval","Number","isFinite","endAccessorDefault","intervals","startAccessor","arguments","endAccessor","sortedIntervals","Array","from","sort","a","b","output","push","max","processLocations","locations","location","fragments","shift","forEach","fragment","start","end","shiftLocations","processed","signature","entry","existing","find","m","db","color","colorFromString","mergeIntervals","signatureLibraryRelease","library","replace","KEYFRAMES","opacity","reducedMotion","ANIMATION_OPTIONS","fill","easing","duration","forwardRef","overrideComponent","props","_objectWithoutProperties","_excluded","containerRef","useLayoutEffect","node","firstElementChild","animate","document","querySelectorAll","findIndex","section","animation","_objectSpread","delay","cancel","Component","Card","component","getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","CardRoot","styled","Paper","name","overridesResolver","styles","root","overflow","React","inProps","useDefaultProps","raised","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","clsx","elevation","setRepresentations","setInitialFocus","proteinReferences","ligandReferences","topology","interactions","selectedDomain","setSelectedDomain","useState","overlapedDomain","setOverlapedDomain","defaultRepresentations","mutationsRepresentation","mutationsRepresentations","epitopesRepresentation","epitopesRepresentations","domains","useMemo","overallDomain","representations","customDomains","CUSTOMS","interactionDomains","interaction","failed","agent_1","atoms","atom_indices_1","agent_2","atom_indices_2","agent","domain","nglSelection","atomIndices2Ngl","selection","type","referenceDomains","proteinReference","referenceId","uniprot","wholeReferenceResidueIndices","getReferenceResidueIndices","wholeReferenceNglSelection","residueIndices2Ngl","wholeReferenceDomain","rangedSelection","referenceDataDomains","custom_domains","domainName","mappedDomain","description","parseRepresentationSelection","representation","parsedSelection","rangedSelectionParser","mappedSelection","small","newRepresentation","ligandReference","residueIndices","pubchem","ligandDomain","mutationsDomain","epitopesDomain","currentSelectedDomain","currentSelectedRepresentations","rep","currentOverlapedDomain","initialFocus","sele","Suspense","fallback","Loading","CardContent","dom","d","Chip","onClick","event","shiftKey","ctrlKey","metaKey","previous","useInViewOptions","triggerOnce","rootMargin","Trajectory","nglRef","isNglVisible","useInView","nightingaleRef","isNightingaleVisible","representationsState","Domains","ViewerWithControls","container","card","ChainsAnalysis","getInputAdornmentUtilityClass","_span","InputAdornmentRoot","capitalize","disablePointerEvents","theme","display","maxHeight","alignItems","whiteSpace","vars","palette","action","active","inputAdornmentClasses","positionStart","hiddenLabel","marginTop","marginRight","marginLeft","pointerEvents","disableTypography","variantProp","muiFormControl","useFormControl","size","slots","FormControlContext","Provider","Typography","dbMap","Map","topologyManager","popup","createElement","portal","portalContainer","appendChild","addEventListener","bcr","getBoundingClientRect","left","top","onfinish","href","src","link","rel","target","timeout","displayed","clearPopup","textContent","removeAttribute","visibility","popupEnterHandle","clearTimeout","popupLeaveHandle","setTimeout","handler","detail","bcrTarget","bcrPopup","bcrTrack","eventtype","feature","IP_DB","closest","translateX","min","width","right","translateY","scrollY","body","removeEventListener","removeChild","chainReferences","chainComponents","chainReference","chains","chainLetter","getChainByName","metadataChainName","residueNumbers","FontAwesomeIcon","icon","faAngleRight","ChainAnalysis","key","localeCompare"],"sourceRoot":""}