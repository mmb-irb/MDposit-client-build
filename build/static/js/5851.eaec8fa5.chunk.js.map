{"version":3,"file":"static/js/5851.eaec8fa5.chunk.js","mappings":"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","sources":["webpack://mdposit/./src/components/interaction-selector/style.module.css?5392","components/interaction-selector/index.js","../node_modules/@mui/material/Switch/switchClasses.js","../node_modules/@mui/material/Switch/Switch.js","webpack://mdposit/./src/components/double-side-switch/style.module.css?bc8b","components/double-side-switch/index.js","webpack://mdposit/./src/components/animated-card/style.module.css?d4d9","components/animated-card/index.js","webpack://mdposit/./src/pages/accession/energies/style.module.css?bb76","webpack://mdposit/./src/components/viewer-spawner/style.module.css?df6e","components/viewer-spawner/index.js","webpack://mdposit/./src/components/legend/style.module.css?c59e","components/legend/index.js","pages/accession/energies/index.js","../node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@mui/material/internal/svg-icons/CheckBox.js","../node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@mui/material/Checkbox/checkboxClasses.js","../node_modules/@mui/material/Checkbox/Checkbox.js","hooks/use-remfo/index.js","utils/version/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"horizontal\":\"style_horizontal__2DIWx\",\"horizontal-margined\":\"style_horizontal-margined__e9fQR\"};","import React, { Suspense } from 'react';\n\nimport {\n  FormControlLabel,\n  Radio,\n  RadioGroup,\n  Select,\n  MenuItem,\n  TextField,\n  IconButton,\n} from '@mui/material';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExchangeAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport Loading from '../loading';\n\nimport style from './style.module.css';\n\nconst residueOptions = [\n  { label: 'All residues', value: 'residue_indices' },\n  { label: 'Interface residues', value: 'interface_indices' },\n];\n\n// Render a panel which allows to select the desired interaction\n// If the user selects a new interaction then the 'setSelectedInteraction' is set as its index\n// Interactions have the following structure:\n// { name: string, label: string, ... }\n// The 'label' field will replace the 'name' in the selector labels if exists\n// When 'selectedResidues' is passed, render also tools to select interaction residues\n// Residue options are 'all' or 'interface' residues\n// DANI: La guinda sería un 'custom' en las opciones de residuos\n// DANI: La idea sería desplegar dos residue selectors, uno para cada interaction agent\nconst InteractionSelector = ({\n  interactions,\n  selectedInteraction,\n  setSelectedInteraction,\n  selectedResidues,\n  setSelectedResidues,\n  selectedOrder,\n  handleToggleOrder,\n  firstOrderLabel, // The label to be represented over the first order rectangle\n  firstOrderTooltip, // The tooltip to be shown for the first order rectangle\n  secondOrderLabel, // The label to be represented over the second order rectangle\n  secondOrderTooltip, // The tooltip to be shown for the second order rectangle\n  toggleOrderTooltip, // The tooltip to be shown for the toggle order button\n  interfaceOnly = false, // Set if the 'All residues' button is enabled\n}) => {\n  const changeInteraction = event => {\n    setSelectedInteraction(event.target.value);\n  };\n\n  const changeResidues = event => {\n    setSelectedResidues(event.target.value);\n  };\n\n  const changeOrder = () => {\n    handleToggleOrder();\n  };\n\n  const currentInteraction = interactions[selectedInteraction];\n\n  // Render\n  return (\n    <Suspense fallback={<Loading />}>\n      <Select\n        value={selectedInteraction}\n        onChange={changeInteraction}\n        className={style['horizontal-margined']}\n      >\n        {interactions.map((interaction, i) => (\n          <MenuItem key={i} value={i} disabled={interaction.failed}>\n            {interaction.label || interaction.name}\n          </MenuItem>\n        ))}\n      </Select>\n      {selectedResidues && (\n        <RadioGroup\n          value={selectedResidues}\n          onChange={changeResidues}\n          className={style.horizontal}\n        >\n          {residueOptions.map((opt, i) => (\n            <FormControlLabel\n              key={i}\n              value={opt.value}\n              control={<Radio color=\"primary\" />}\n              label={opt.label}\n              disabled={opt.label === 'All residues' && interfaceOnly}\n            />\n          ))}\n        </RadioGroup>\n      )}\n      {selectedOrder !== undefined && (\n        <>\n          <TextField\n            //margin=\"dense\"\n            label={firstOrderLabel}\n            title={firstOrderTooltip}\n            value={\n              selectedOrder\n                ? currentInteraction.agent_1\n                : currentInteraction.agent_2\n            }\n          />\n          <IconButton\n            title={toggleOrderTooltip}\n            onClick={changeOrder}\n            size=\"large\"\n          >\n            <FontAwesomeIcon icon={faExchangeAlt} />\n          </IconButton>\n          <TextField\n            //margin=\"dense\"\n            label={secondOrderLabel}\n            title={secondOrderTooltip}\n            value={\n              selectedOrder\n                ? currentInteraction.agent_2\n                : currentInteraction.agent_1\n            }\n          />\n        </>\n      )}\n    </Suspense>\n  );\n};\n\nexport default InteractionSelector;\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getSwitchUtilityClass(slot) {\n  return generateUtilityClass('MuiSwitch', slot);\n}\nconst switchClasses = generateUtilityClasses('MuiSwitch', ['root', 'edgeStart', 'edgeEnd', 'switchBase', 'colorPrimary', 'colorSecondary', 'sizeSmall', 'sizeMedium', 'checked', 'disabled', 'input', 'thumb', 'track']);\nexport default switchClasses;","'use client';\n\n// @inheritedComponent IconButton\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"edge\", \"size\", \"sx\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha, darken, lighten } from '@mui/system/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nimport { styled } from '../zero-styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport switchClasses, { getSwitchUtilityClass } from './switchClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    edge,\n    size,\n    color,\n    checked,\n    disabled\n  } = ownerState;\n  const slots = {\n    root: ['root', edge && `edge${capitalize(edge)}`, `size${capitalize(size)}`],\n    switchBase: ['switchBase', `color${capitalize(color)}`, checked && 'checked', disabled && 'disabled'],\n    thumb: ['thumb'],\n    track: ['track'],\n    input: ['input']\n  };\n  const composedClasses = composeClasses(slots, getSwitchUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst SwitchRoot = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.edge && styles[`edge${capitalize(ownerState.edge)}`], styles[`size${capitalize(ownerState.size)}`]];\n  }\n})({\n  display: 'inline-flex',\n  width: 34 + 12 * 2,\n  height: 14 + 12 * 2,\n  overflow: 'hidden',\n  padding: 12,\n  boxSizing: 'border-box',\n  position: 'relative',\n  flexShrink: 0,\n  zIndex: 0,\n  // Reset the stacking context.\n  verticalAlign: 'middle',\n  // For correct alignment with the text.\n  '@media print': {\n    colorAdjust: 'exact'\n  },\n  variants: [{\n    props: {\n      edge: 'start'\n    },\n    style: {\n      marginLeft: -8\n    }\n  }, {\n    props: {\n      edge: 'end'\n    },\n    style: {\n      marginRight: -8\n    }\n  }, {\n    props: {\n      size: 'small'\n    },\n    style: {\n      width: 40,\n      height: 24,\n      padding: 7,\n      [`& .${switchClasses.thumb}`]: {\n        width: 16,\n        height: 16\n      },\n      [`& .${switchClasses.switchBase}`]: {\n        padding: 4,\n        [`&.${switchClasses.checked}`]: {\n          transform: 'translateX(16px)'\n        }\n      }\n    }\n  }]\n});\nconst SwitchSwitchBase = styled(SwitchBase, {\n  name: 'MuiSwitch',\n  slot: 'SwitchBase',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.switchBase, {\n      [`& .${switchClasses.input}`]: styles.input\n    }, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme\n}) => ({\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  zIndex: 1,\n  // Render above the focus ripple.\n  color: theme.vars ? theme.vars.palette.Switch.defaultColor : `${theme.palette.mode === 'light' ? theme.palette.common.white : theme.palette.grey[300]}`,\n  transition: theme.transitions.create(['left', 'transform'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  [`&.${switchClasses.checked}`]: {\n    transform: 'translateX(20px)'\n  },\n  [`&.${switchClasses.disabled}`]: {\n    color: theme.vars ? theme.vars.palette.Switch.defaultDisabledColor : `${theme.palette.mode === 'light' ? theme.palette.grey[100] : theme.palette.grey[600]}`\n  },\n  [`&.${switchClasses.checked} + .${switchClasses.track}`]: {\n    opacity: 0.5\n  },\n  [`&.${switchClasses.disabled} + .${switchClasses.track}`]: {\n    opacity: theme.vars ? theme.vars.opacity.switchTrackDisabled : `${theme.palette.mode === 'light' ? 0.12 : 0.2}`\n  },\n  [`& .${switchClasses.input}`]: {\n    left: '-100%',\n    width: '300%'\n  }\n}), ({\n  theme\n}) => ({\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.activeChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.action.active, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  },\n  variants: [...Object.entries(theme.palette).filter(([, value]) => value.main && value.light) // check all the used fields in the style below\n  .map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      [`&.${switchClasses.checked}`]: {\n        color: (theme.vars || theme).palette[color].main,\n        '&:hover': {\n          backgroundColor: theme.vars ? `rgba(${theme.vars.palette[color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette[color].main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        },\n        [`&.${switchClasses.disabled}`]: {\n          color: theme.vars ? theme.vars.palette.Switch[`${color}DisabledColor`] : `${theme.palette.mode === 'light' ? lighten(theme.palette[color].main, 0.62) : darken(theme.palette[color].main, 0.55)}`\n        }\n      },\n      [`&.${switchClasses.checked} + .${switchClasses.track}`]: {\n        backgroundColor: (theme.vars || theme).palette[color].main\n      }\n    }\n  }))]\n}));\nconst SwitchTrack = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Track',\n  overridesResolver: (props, styles) => styles.track\n})(({\n  theme\n}) => ({\n  height: '100%',\n  width: '100%',\n  borderRadius: 14 / 2,\n  zIndex: -1,\n  transition: theme.transitions.create(['opacity', 'background-color'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  backgroundColor: theme.vars ? theme.vars.palette.common.onBackground : `${theme.palette.mode === 'light' ? theme.palette.common.black : theme.palette.common.white}`,\n  opacity: theme.vars ? theme.vars.opacity.switchTrack : `${theme.palette.mode === 'light' ? 0.38 : 0.3}`\n}));\nconst SwitchThumb = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Thumb',\n  overridesResolver: (props, styles) => styles.thumb\n})(({\n  theme\n}) => ({\n  boxShadow: (theme.vars || theme).shadows[1],\n  backgroundColor: 'currentColor',\n  width: 20,\n  height: 20,\n  borderRadius: '50%'\n}));\nconst Switch = /*#__PURE__*/React.forwardRef(function Switch(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiSwitch'\n  });\n  const {\n      className,\n      color = 'primary',\n      edge = false,\n      size = 'medium',\n      sx\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    edge,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  const icon = /*#__PURE__*/_jsx(SwitchThumb, {\n    className: classes.thumb,\n    ownerState: ownerState\n  });\n  return /*#__PURE__*/_jsxs(SwitchRoot, {\n    className: clsx(classes.root, className),\n    sx: sx,\n    ownerState: ownerState,\n    children: [/*#__PURE__*/_jsx(SwitchSwitchBase, _extends({\n      type: \"checkbox\",\n      icon: icon,\n      checkedIcon: icon,\n      ref: ref,\n      ownerState: ownerState\n    }, other, {\n      classes: _extends({}, classes, {\n        root: classes.switchBase\n      })\n    })), /*#__PURE__*/_jsx(SwitchTrack, {\n      className: classes.track,\n      ownerState: ownerState\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense switch styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Switch;","// extracted by mini-css-extract-plugin\nexport default {\"horizontal\":\"style_horizontal__wW0pI\"};","import React from 'react';\n\nimport { Switch, Typography } from '@mui/material';\nimport style from './style.module.css';\n\n// Render a switch with a label on each side\nconst DoubleSideSwitch = ({ firstLabel, secondLabel, isFirst, onChange }) => \n    <div className={style.horizontal}>\n        <Typography color={isFirst ? null : \"textSecondary\"} variant=\"h6\" >{firstLabel}</Typography>\n        <Switch checked={!isFirst} onChange={onChange} />\n        <Typography color={isFirst ? \"textSecondary\" : null} variant=\"h6\">{secondLabel}</Typography>\n    </div>\n\nexport default DoubleSideSwitch;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"style_container__M9GCG\"};","import React, { useLayoutEffect, useRef, forwardRef } from 'react';\nimport { Card } from '@mui/material';\n\nimport reducedMotion from '../../utils/reduced-motion';\n\nimport style from './style.module.css';\n\nconst KEYFRAMES = { opacity: [0, 1] };\n\nif (!reducedMotion()) {\n  KEYFRAMES.transform = ['translateY(50px)', 'translateY(0)'];\n}\n\nconst ANIMATION_OPTIONS = {\n  fill: 'both',\n  easing: 'cubic-bezier(0, .99, .56, 1.1)',\n  duration: 500,\n};\n\n// Make the card appear and slide softly from down to up when the page is loaded\nconst AnimatedCard = forwardRef(({ overrideComponent, ...props }, ref) => {\n  const containerRef = useRef(null);\n\n  useLayoutEffect(() => {\n    const node = containerRef.current && containerRef.current.firstElementChild;\n    if (!(node && node.animate)) return;\n\n    const index = Array.from(\n      document.querySelectorAll('main section'),\n    ).findIndex(section => node === section);\n\n    const animation = node.animate(KEYFRAMES, {\n      ...ANIMATION_OPTIONS,\n      delay: index * 150,\n    });\n\n    return () => animation.cancel();\n  }, []);\n\n  const Component = overrideComponent ? 'section' : Card;\n\n  return (\n    <div ref={containerRef} className={style.container}>\n      <Component component=\"section\" {...props} ref={ref} />\n    </div>\n  );\n});\n\nexport default AnimatedCard;\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"style_card__vXTgq\",\"horizontal\":\"style_horizontal__t0owt\",\"text-field\":\"style_text-field__bQrv2\",\"margined-bottom\":\"style_margined-bottom__pVY9i\",\"enabled\":\"style_enabled__3P0ll\",\"disabled\":\"style_disabled__XLm-A\"};","// extracted by mini-css-extract-plugin\nexport default {\"rnd\":\"style_rnd__Txifm\",\"floating-card\":\"style_floating-card__HHpby\"};","import React, { lazy, Suspense, useRef, useState } from 'react';\n\n// Rnd is the resizable and draggable system where the ngl viewer is placed\nimport { Rnd } from 'react-rnd';\n\nimport Card from '../animated-card';\n\nimport style from './style.module.css';\n\nconst ViewerWithControls = lazy(() =>\n  import(\n    /* webpackChunkName: 'viewer-with-controls' */ '../viewer-with-controls'\n  ),\n);\n\n// Minimal ngl window height\nconst MIN_NGL_DIMENSION = 150;\n\n// Counter to get always the maximum zIndex\n// This is useful to set a new or currently dragged/resized ngl window over the others\nlet maxZ = 0;\nconst nextZ = () => {\n  maxZ += 1;\n  return maxZ;\n};\n\n// This function spawns all the NGL viewers needed\n// i.e. one viewer with the requested 'props' and all previous viewers which have been nailed\nconst ViewerSpawner = ({ newViewer, nailing = true, onNail, onClose }) => {\n  // Store here all nailed NGL viewers\n  const [nailedViewers, setNailedViewers] = useState([]);\n\n  // Set the viewers as the nailed viewers and the new viewer\n  const viewers = [...nailedViewers];\n\n  // Keep listed all arrays which have been used (i.e. ngl viewers which have been nailed or closed)\n  const usedIds = useRef([]);\n\n  if (newViewer) {\n    // Find a new suitable Id that meet 2 conditions:\n    // - There is never 2 viewers with the same id, so we avoid errors\n    // - If we pick diferent frames in the graph without nailing anything, the current viewer has always the same id\n    // (This way the current viewer does not appear in the origin position every time)\n    const getNewId = () => {\n      let id = 0;\n      while (id < 999) {\n        if (usedIds.current.indexOf(id) === -1) return id;\n        id += 1;\n      }\n      console.error('Maximum number of viewers reached');\n    };\n\n    // Set a unique id for this props based in the last nailed viewer\n    newViewer.id = getNewId();\n    newViewer.close = () => {\n      if (nailing) {\n        setNailedViewers(nailed => {\n          const newNailed = [...nailed];\n          const index = nailed.indexOf(newViewer);\n          if (index !== -1) newNailed.splice(index, 1);\n          return newNailed;\n        });\n      }\n      if (onClose) onClose(newViewer);\n      usedIds.current.push(newViewer.id);\n    };\n    // If the nailer function is passed, add the logic for the viewer to be nailed further\n    if (nailing)\n      newViewer.nail = () => {\n        setNailedViewers(nailed => [...nailed, newViewer]);\n        if (onNail) onNail(newViewer);\n        usedIds.current.push(newViewer.id);\n      };\n    // Add the current viewer to the viewers list\n    viewers.push(newViewer);\n  }\n\n  // Render a viewer for each prop. Use the 'selected' parameter as unique id\n  return viewers.map(viewer => <NGLViewerInDND key={viewer.id} {...viewer} />);\n};\n\n// This component render a small NGL viewer\n// It is called when user clicks in a point in the projections component\n// Also it is called by the generic analysis page\nconst NGLViewerInDND = props => {\n  // Set a reference for the viewer\n  // If a reference is passed among the viewer arguments then use it instead\n  const viewerRef = props.viewerRef || useRef(null);\n\n  // Set the default position and size\n  const [place, setPlace] = useState(() => {\n    // Set an extra margin\n    const MARGIN = 20;\n    // Get the screen pixel sizes and vertical scroll position\n    const { innerWidth, innerHeight, scrollY } = window;\n    // The spawned elements are parented to the 'main' element, not to the 'body'\n    // We have to take this in count, since the header adds an extra offset in vertical position\n    const offsetHeight = document.querySelector('main').offsetTop;\n    // Set a reasonable dimension for the ngl window\n    const dimension = Math.max(\n      Math.min(innerWidth / 4, innerHeight / 4),\n      MIN_NGL_DIMENSION,\n    );\n    const reasonableHeight = 1.5 * dimension;\n    const reasonableWidth = 2 * dimension;\n    return {\n      // WARNING: If you set the width as 'auto' the window stays very wide when exiting fullscreen\n      width: reasonableWidth, // Let the Rnd logic set the width automatically\n      height: reasonableHeight, // Reasonable height\n      x: 0, // Left border\n      y: innerHeight - offsetHeight - reasonableHeight - MARGIN + scrollY, // Bottom border\n    };\n  });\n\n  return (\n    // Rnd is the draggable and resizable system where the ngl viewer is placed\n    <Rnd\n      position={{ x: place.x, y: place.y }}\n      size={{ width: place.width, height: place.height }}\n      // Update the zIndex to make this window the first visible\n      style={{ zIndex: nextZ() }}\n      className={style.rnd}\n      data-rnd\n      // Limits where the window can be dragged/resized to\n      // WARNING: bounds=\"main\" is problematic since the window may appear out of bounds\n      // WARNING: Then when it is moved for the first time it jumps inside the bonds, not elegant\n      bounds=\"window\"\n      // Prevent the mouse to drag/resize the window when it is over specific elements\n      cancel=\"canvas, [data-popover], #preventDragSize, .prevent-drag\"\n      // On drag/resize starts we do not change anything, but use the hook to re-render this component\n      // The Z Index is updated and the selected window becomes the first in the z axis automatically\n      // WARNING: Drag functions are also called when you just click (e.g. clicking buttons)\n      onDragStart={() => {\n        setPlace({ ...place });\n      }}\n      onResizeStart={() => {\n        setPlace({ ...place });\n      }}\n      onDragStop={(e, d) => {\n        // Use this to reject some bugged event calls: e.g. the frames number selector\n        if (e.layerX === 0 && e.layerY === 0) return;\n        // We re-render only if the new position does not equal the old position\n        if (place.x !== d.x || place.y !== d.y)\n          setPlace({\n            ...place,\n            x: d.x,\n            y: d.y,\n          });\n      }}\n      // Re-adapt the viewer and update the position/size when the window is resized\n      onResize={() => viewerRef.current && viewerRef.current.autoResize()}\n      onResizeStop={(e, direction, ref, delta, position) => {\n        setPlace({\n          width: ref.style.width,\n          height: ref.style.height,\n          ...position,\n        });\n        // if (!viewerRef.current) return;\n        // viewerRef.current.autoResize();\n        // viewerRef.current.autoResize.flush();\n      }}\n    >\n      <Card className={style['floating-card']} elevation={4}>\n        <Suspense fallback={null}>\n          <ViewerWithControls\n            className={style['floating-card']}\n            ref={viewerRef}\n            startsPlaying={false}\n            {...props}\n          />\n        </Suspense>\n      </Card>\n    </Rnd>\n  );\n};\n\nexport default ViewerSpawner;\n","// extracted by mini-css-extract-plugin\nexport default {\"graph-legend\":\"style_graph-legend__TA-gh\",\"precision\":\"style_precision__pJJFp\"};","import React from 'react';\n\nimport { FormControlLabel, Checkbox } from '@mui/material';\n\nimport style from './style.module.css';\n\n// Expected input format is entires =\n//  [\n//    {\n//      name: 'entry name',\n//      color: 'black',\n//      check: true,\n//    }\n//  ]\nconst Legend = ({ entries, onChange, onMouseOver, onMouseOut }) => {\n  return (\n    <div className={style['graph-legend']}>\n      {entries.map(({ name, color, check }) => (\n        <FormControlLabel\n          data-key={name}\n          key={name}\n          onChange={p => onChange(p.target.dataset.key)}\n          onMouseOver={onMouseOver}\n          onMouseOut={onMouseOut}\n          control={\n            <Checkbox\n              checked={check}\n              style={{ color: color || 'black' }}\n              inputProps={{ 'data-key': name }}\n            />\n          }\n          label={name}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Legend;\n","import React, { lazy, Suspense, useState, useContext, useMemo, useEffect, useCallback } from 'react';\n// Import tools to retrieve data using the API\nimport { BASE_PATH_PROJECTS } from '../../../utils/constants';\nimport useAPI from '../../../hooks/use-api';\n// Import project data\nimport { ProjectCtx } from '../../../contexts';\n// Import MUI components\nimport { CardContent, Typography, TextField } from '@mui/material';\n// Import some custom components\nimport Card from '../../../components/animated-card';\nimport ViewerSpawner from '../../../components/viewer-spawner';\nimport Loading from '../../../components/loading';\nimport InteractionSelector from '../../../components/interaction-selector';\nimport DoubleSideSwitch from 'src/components/double-side-switch';\nimport Legend from '../../../components/legend';\n// Import CSS style\nimport style from './style.module.css';\n// Import some auxiliar functions\nimport Version from 'src/utils/version';\n// Import a custom hook\nimport useRemfo from 'src/hooks/use-remfo';\n\nconst Graph = lazy(() =>\n  import(/* webpackChunkName: 'graph' */ '../../../components/graph'),\n);\n\n// Set references to find representations between different renders\nconst GUEST_REFERENCE = 'guest';\n\n// Return the rounded summatory\nconst getSum = values => {\n  const sum = values.reduce((a, b) => a + b, 0);\n  const rounded = Math.round(sum * 10000) / 10000;\n  return rounded;\n};\n\n// DANI: Note that here coexit the old and the new energies data format\n// DANI: Old energies contained all interactions data in a single place\n// DANI: New energies has an index in the main analysis and the results for every interaction separated\nconst Energies = () => {\n  // Get the current project data\n  const { accessionAndMdNumber, topology, interactions } = useContext(ProjectCtx);\n\n  // Send a request to the API with the url of the energies analyses index\n  const analysesUrlBase = `${BASE_PATH_PROJECTS}/${accessionAndMdNumber}/analyses`;\n  const indexUrl = `${analysesUrlBase}/energies`;\n  const { loading: indexLoading, payload: indexPayload, error: indexError } = useAPI(indexUrl);\n\n  // The interaction to be displayed\n  const [selectedInteraction, setSelectedInteraction] = useState(0);\n\n  // Set the target interaction name\n  const { interactionName, analysisName } = useMemo(() => {\n    // Wait for main data to be downloaded\n    if (!interactions || !indexPayload) return {};\n    // Get the selected interaction\n    const interaction = interactions[selectedInteraction];\n    // Check if the analysis is in the old or the new format\n    const isOld = indexPayload.data !== undefined;\n    // If so, there is no target analysis name, but the whole data is already in the payload\n    if (isOld) return { interactionName: interaction.name };\n    const targetEntry = indexPayload.find(entry => entry.name === interaction.name);\n    return { interactionName: interaction.name, analysisName: targetEntry.analysis }\n  }, [interactions, selectedInteraction, indexPayload]);\n\n  // Send a request to the API with the url of some specific energies analysis\n  const interactionAnalysisUrl = analysisName ? `${analysesUrlBase}/${analysisName}` : null;\n  const { loading, payload, error } = useAPI(interactionAnalysisUrl);\n\n  // Now set the actual dataset to be used\n  // Note that this is a compatibility layer between the old and the new energies system\n  const dataset = useRemfo(previous => {\n    // Wait for the download to finish\n    if (!indexPayload) return previous;\n    // Check if the analysis is in the old or the new format\n    const isOld = indexPayload.data !== undefined;\n    // If this is the new system then the dataset is the payload itself\n    if (!isOld) {\n      if (!payload) return previous;\n      return payload;\n    }\n    // If this is the old system then the dataset is in the index payload\n    const interactionData = indexPayload.data.find(entry => entry.name === interactionName);\n    if (!interactionData) return { error: `Dataset for interaction \"${interactionName}\" not found` };\n    return interactionData;\n  }, [indexPayload, payload, interactionName]);\n\n  // This is a toggle state for which agent data is shown\n  const [selectedOrder, setSelectedOrder] = useState(true);\n\n  // Mine data from the selected interaction\n  // Set some required host and gues atom/residue selections\n  const {\n    hostAtomIndices,\n    hostResidueIndices,\n    guestInterfaceAtomIndices,\n    strongBonds\n  } = useMemo(() => {\n    // Wait for main data to be downloaded\n    if (!topology || !interactions) return {}\n    // Get the selected interaction\n    const interaction = interactions[selectedInteraction];\n    // Get host atom indices\n    const hostAtomIndices = selectedOrder\n      ? interaction.atom_indices_1\n      : interaction.atom_indices_2;\n    // Convert atom indices to residue indices\n    const hostResidueIndices = topology.atom2residueIndices(hostAtomIndices);\n    // Get the guest interface atom indcies\n    const guestInterfaceAtomIndices = selectedOrder\n      ? interaction.interface_atom_indices_2\n      : interaction.interface_atom_indices_1;\n    // Get atom indices from covalent bonds between both interacting agents\n    const strongBonds = interaction['strong_bonds'];\n    return { hostAtomIndices, hostResidueIndices, guestInterfaceAtomIndices, strongBonds };\n  }, [topology, interactions, selectedInteraction, selectedOrder]);\n\n  // Get the default representations\n  const defaultRepresentations = topology && topology.defaultRepresentations;;\n\n  // Define the representations to be displayed in the viewer\n  const [ representations, setRepresentations ] = useState(null);\n\n  // Set the representations\n  useEffect(() => {\n    // Wait for main data to be downloaded\n    if (!topology || !defaultRepresentations || !guestInterfaceAtomIndices) return;\n    // Set the host NGL selection\n    const guestNglSelection = topology.atomIndices2Ngl(guestInterfaceAtomIndices);\n    // Set the viewer representations\n    setRepresentations(previousRepresentations => {\n      // If this is the first render then set the default values\n      if (previousRepresentations === null) return [\n        ...defaultRepresentations,\n        {\n          selection: guestNglSelection,\n          name: 'Guest elements',\n          type: 'ball+stick',\n          color: 'element',\n          opacity: 0.3,\n          //other: { radius: 0.6 },\n          reference: GUEST_REFERENCE\n        }\n      ];\n      // Otherwise just update the guest representation\n      const previousGuest = previousRepresentations.find(rep => rep.reference === GUEST_REFERENCE);\n      previousGuest.selection = guestNglSelection;\n      return [...previousRepresentations];\n    });\n  }, [topology, defaultRepresentations, guestInterfaceAtomIndices]);\n\n  // This is a toggle state for when data is displayed per atom or per residue\n  const [perResidue, setPerResidue] = useState(true);\n\n  // Reformat data se we can input it to the graph\n  const {\n    data,\n    dataError,\n    isDataPerResidue,\n    strongBondMarks,\n    esData,\n    vdwData,\n    bothData,\n    xTooltip,\n  } = useMemo(() => {\n    // Return if the dataset is not ready yet\n    if (!dataset || !topology) return {};\n    if (dataset.error) return {};\n    // Get the dataset version\n    const datasetVersion = new Version(dataset.version);\n    // Old versions of energies have only residue data, not atom data\n    const isDataPerResidue = datasetVersion.major < 1;\n    // Prepare data in a graph-friendly format\n    let data;\n    // Set the agent whose data will be displayed in the graph\n    const hostAgent = selectedOrder ? 'agent1' : 'agent2';\n    // Get the corresponding agent data\n    data = dataset[hostAgent];\n    // Data should exist at this point\n    if (!data) return {\n      data: null,\n      dataError: `Data for ${hostAgent} not found in the interaction \"${dataset.name}\"`\n    };\n\n    // Set the tags to be displayed on each graph x axis\n    // If data is represented per residue then we need the corresponding residue labels\n    if (perResidue) {\n      // Convert residue indices to their correspondong labels\n      const hostResiduesLabels = hostResidueIndices.map(\n        residueIndex => topology.getResidueByIndex(residueIndex).standardLabel\n      );\n      // Add this to the output formatted data\n      data.xTags = hostResiduesLabels;\n    }\n    // If data is represented per atom then we need the corresponding atom labels\n    else {\n      // Convert atom indices to atom labels\n      const hostAtomLabels = hostAtomIndices.map(\n        index => topology.getAtomByIndex(index).label\n      )\n      // Add this to the output formatted data\n      data.xTags = hostAtomLabels;\n    }\n\n    // In case of strong bonds, find the implicated residues and their position in the x axis\n    // They will be marked in the graph\n    const strongBondAtoms = [].concat.apply([], strongBonds);\n    const strongBondLabels = perResidue\n      ? strongBondAtoms.map(atomIndex =>\n        topology.getAtomByIndex(atomIndex).residue.standardLabel,\n      )\n      : strongBondAtoms.map(atomIndex =>\n        topology.getAtomByIndex(atomIndex).label,\n      );\n    const strongBondMarks = [];\n    strongBondLabels.forEach(residue => {\n      const xPosition = data.xTags.indexOf(residue);\n      if (xPosition !== -1)\n        strongBondMarks.push({\n          x: xPosition,\n          attr: {\n            fill: 'orange',\n            opacity: 0.5,\n          },\n        });\n    });\n\n    // Group data by residue IF data is to be represented by residue\n    const grouper = perResidue && !isDataPerResidue\n      ? values => {\n        const residueValues = {};\n        values.forEach((value, v) => {\n          const atomIndex = hostAtomIndices[v];\n          const residueIndex = topology.getAtomByIndex(atomIndex).residueIndex;\n          residueValues[residueIndex] = (residueValues[residueIndex] || 0) + value\n        });\n        return hostResidueIndices.map(residueIndex => residueValues[residueIndex]);\n      }\n      : values => values;\n\n    // Set the dataset for each graph\n    const esData = {\n      esi: { data: grouper(data.ies), color: 'red' },\n      esf: { data: grouper(data.fes), color: 'blue' },\n      es: { data: grouper(data.es), color: 'black' },\n    };\n    const vdwData = {\n      vdwi: { data: grouper(data.ivdw), color: 'red' },\n      vdwf: { data: grouper(data.fvdw), color: 'blue' },\n      vdw: { data: grouper(data.vdw), color: 'black' },\n    };\n    const bothData = {\n      bothi: { data: grouper(data.iboth), color: 'red' },\n      bothf: { data: grouper(data.fboth), color: 'blue' },\n      both: { data: grouper(data.both), color: 'black' },\n    };\n\n    // Set the tooltip generator for the graph hover\n    const xTooltip = (_, xIndex) =>\n      `${perResidue ? 'residue' : 'atom'} ${(data.xTags && data.xTags[xIndex]) || xIndex}`;\n\n    return {\n      data,\n      isDataPerResidue,\n      strongBondMarks,\n      esData,\n      vdwData,\n      bothData,\n      xTooltip,\n    };\n  }, [\n    dataset,\n    selectedOrder,\n    perResidue,\n    topology,\n    hostAtomIndices,\n    hostResidueIndices,\n    strongBonds,\n  ]);\n\n  // Set which data is displayed: all, start, end or any combination of them\n  const [display, setDisplay] = useState({ all: true, start: true, end: true });\n\n  // Memoize the display parameters for each graph\n  const { esDisplay, vdwDisplay, bothDisplay } = useMemo(() => {\n    const esDisplay = {\n      esi: display.start,\n      esf: display.end,\n      es: display.all,\n    };\n    const vdwDisplay = {\n      vdwi: display.start,\n      vdwf: display.end,\n      vdw: display.all,\n    };\n    const bothDisplay = {\n      bothi: display.start,\n      bothf: display.end,\n      both: display.all,\n    };\n    return { esDisplay, vdwDisplay, bothDisplay };\n  }, [display]);\n\n  // Track when one point in the graph is selected\n  const [selectedX, setSelectedX] = useState(null);\n\n  // Memoize the marks\n  const marks = useMemo(() => {\n    if (selectedX === null) return strongBondMarks;\n    const selectedMark = {\n      x: selectedX,\n      attr: { fill: '#c8c8c8' },\n    };\n    return [selectedMark, ...strongBondMarks];\n  }, [selectedX, strongBondMarks]);\n\n  // Set the selected residue indices (only one index with the current implmementation)\n  const selectedResidueIndices = useMemo(() => {\n    // If there is nothing selected then exit\n    if (selectedX === null) return null;\n    // If we are representing data by atom, not by residue, then exit\n    if (!perResidue) return null;\n    // Get the selected residue index\n    const residueIndex = hostResidueIndices[selectedX];\n    return [residueIndex];\n  }, [hostResidueIndices, perResidue, selectedX]);\n\n  // Set the selected residue indices (only one index with the current implmementation)\n  const selectedAtomIndices = useMemo(() => {\n    // If there is nothing selected then exit\n    if (selectedX === null) return null;\n    // If we are representing data by residue, not by atom, then exit\n    if (perResidue) return null;\n    // Get the selected residue index\n    const atomIndex = hostAtomIndices[selectedX];\n    return [atomIndex];\n  }, [hostAtomIndices, perResidue, selectedX]);\n\n  // Set a callback to reset the X selection whenever the viewer is closed or nail\n  const resetX = useCallback(viewer =>\n    setSelectedX(previous => {\n      if (viewer && viewer.selectedX === previous)\n        return null;\n      else return previous;\n    }), []);\n\n  // Set some state setters\n  const handleSelectInteraction = useCallback(newValue => {\n    setSelectedInteraction(newValue);\n    setSelectedX(null);\n  }, []);\n  const handleToggleOrder = useCallback(() => {\n    setSelectedOrder(previous => !previous);\n    setSelectedX(null);\n  }, []);\n  const handleTogglePerResidue = useCallback(() => {\n    setPerResidue(previous => !previous);\n    setSelectedX(null);\n  }, []);\n\n  // Check if anything is still beeing loaded\n  const anyLoading = indexLoading || loading\n\n  // Render loading or error messages according with the API response\n  if (indexError) return indexError.toString();\n  if (error) return error.toString();\n  if (dataset && dataset.error) return dataset.error;\n  if (!dataset) {\n    if (anyLoading) return <Loading />;\n    if (!interactions) return 'There are no interactions';\n    if (!topology) return 'There is no topology';\n    return 'Something bad happened';\n  }\n\n  // Check if there is only 1 residue\n  const singleValue = esData && esData.es.data.length === 1;\n\n  // Render\n  return (\n    <Suspense fallback={<Loading />}>\n      <Card className={style.card}>\n        <CardContent className={style.horizontal}>\n          <Typography variant=\"h6\">Interaction:</Typography>\n          <InteractionSelector\n            interactions={interactions}\n            selectedInteraction={selectedInteraction}\n            setSelectedInteraction={handleSelectInteraction}\n            selectedOrder={selectedOrder}\n            handleToggleOrder={handleToggleOrder}\n            firstOrderLabel={'Host'}\n            firstOrderTooltip={'Interactor whose energies are to be shown'}\n            secondOrderLabel={'Guest'}\n            secondOrderTooltip={'Interactor with the opposite energies'}\n            toggleOrderTooltip={'Toggle interactors'}\n          />\n        </CardContent>\n        <div className={anyLoading ? style.disabled : style.enabled}>\n          {dataError || !data ? null : (\n            <CardContent>\n              <legend className={style['margined-bottom']}>Overall energies summatory</legend>\n              <div>\n                <TextField\n                  className={style['text-field']}\n                  label=\"Electrostatic\"\n                  title=\"Sum electorstatic value along the whole trajectory\"\n                  value={getSum(data.es) + ' kcal/mol'}\n                />\n                <TextField\n                  className={style['text-field']}\n                  label=\"Electrostatic Initial\"\n                  title=\"Sum electorstatic value along the first 20% trajectory frames\"\n                  value={getSum(data.ies) + ' kcal/mol'}\n                />\n                <TextField\n                  className={style['text-field']}\n                  label=\"Electrostatic Final\"\n                  title=\"Sum electorstatic value along the last 20% trajectory frames\"\n                  value={getSum(data.fes) + ' kcal/mol'}\n                />\n              </div>\n              <div>\n                <TextField\n                  className={style['text-field']}\n                  label=\"Van der Waals\"\n                  title=\"Sum Van der Waals value along the whole trajectory\"\n                  value={getSum(data.vdw) + ' kcal/mol'}\n                />\n                <TextField\n                  className={style['text-field']}\n                  label=\"Van der Waals Initial\"\n                  title=\"Sum Van der Waals value along the first 20% trajectory frames\"\n                  value={getSum(data.ivdw) + ' kcal/mol'}\n                />\n                <TextField\n                  className={style['text-field']}\n                  label=\"Van der Waals Final\"\n                  title=\"Sum Van der Waals value along the last 20% trajectory frames\"\n                  value={getSum(data.fvdw) + ' kcal/mol'}\n                />\n              </div>\n              <div>\n                <TextField\n                  className={style['text-field']}\n                  label=\"Electrostatic + Van der Waals\"\n                  title=\"Sum electorstatic + Van der Waals value along the whole trajectory\"\n                  value={getSum(data.both) + ' kcal/mol'}\n                />\n                <TextField\n                  className={style['text-field']}\n                  label=\"Electrostatic + Van der Waals Initial\"\n                  title=\"Sum electorstatic + Van der Waals value along the first 20% trajectory frames\"\n                  value={getSum(data.iboth) + ' kcal/mol'}\n                />\n                <TextField\n                  className={style['text-field']}\n                  label=\"Electrostatic + Van der Waals Final\"\n                  title=\"Sum electorstatic + Van der Waals value along the last 20% trajectory frames\"\n                  value={getSum(data.fboth) + ' kcal/mol'}\n                />\n              </div>\n            </CardContent>\n          )}\n          {!isDataPerResidue && <DoubleSideSwitch\n            firstLabel={'Residues'}\n            secondLabel={'Atoms'}\n            isFirst={perResidue}\n            onChange={handleTogglePerResidue}\n          />}\n          {dataError || singleValue ? (\n            <CardContent>\n              <Typography variant=\"h6\">\n                {dataError ? dataError : `The host has only 1 ${perResidue ? 'residue' : 'atom'}`}\n              </Typography>\n            </CardContent>\n          ) : (\n            <CardContent>\n              <Graph\n                yData={esData}\n                xAxisValues={data.xTags}\n                xTooltip={xTooltip}\n                title={'Electrostatic'}\n                xScaleFactor={0.001}\n                yAxisLabel={'Interaction energy (kcal/mol)'}\n                onSelect={setSelectedX}\n                dataDisplay={esDisplay}\n                fullPrecision\n                marks={marks}\n              />\n              <Graph\n                yData={vdwData}\n                title={'Van der Waals'}\n                xAxisValues={data.xTags}\n                xTooltip={xTooltip}\n                yAxisLabel={'Interaction energy (kcal/mol)'}\n                onSelect={setSelectedX}\n                dataDisplay={vdwDisplay}\n                fullPrecision\n                marks={marks}\n              />\n              <Graph\n                yData={bothData}\n                title={'Electrostatic + Van der Waals'}\n                xAxisLabel={perResidue ? 'Residue' : 'Atom'}\n                xAxisValues={data.xTags}\n                xTooltip={xTooltip}\n                yAxisLabel={'Interaction energy (kcal/mol)'}\n                onSelect={setSelectedX}\n                dataDisplay={bothDisplay}\n                fullPrecision\n                marks={marks}\n              />\n              <Legend\n                entries={[\n                  { name: 'all', color: 'black', check: display.all },\n                  { name: 'start', color: 'red', check: display.start },\n                  { name: 'end', color: 'blue', check: display.end },\n                ]}\n                onChange={result =>\n                  setDisplay(previous => {\n                    // WARNING: Do not return the previous object modified\n                    // It won't trigger the re-render since it is the same object\n                    const newDisplay = { ...previous };\n                    newDisplay[result] = !newDisplay[result];\n                    return newDisplay;\n                  })\n                }\n              />\n              \n            </CardContent>\n          )}\n        </div>\n      </Card>\n      <ViewerSpawner\n        // Set the new viewer or null if there is not a proper \"selectedResidueIndices\" value\n        newViewer={selectedResidueIndices || selectedAtomIndices\n          ? {\n              selectedResidueIndices: selectedResidueIndices,\n              selectedAtoms: selectedAtomIndices,\n              representationsState: [ representations, setRepresentations ],\n              // Just for further reference\n              selectedX\n            }\n          : null\n        }\n        // If the nailed/closed viewer is the current viewer then reset the 'selectedX'\n        onNail={resetX}\n        onClose={resetX}\n      />\n    </Suspense>\n  );\n};\n\nexport default Energies;\n","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary', 'sizeSmall', 'sizeMedium']);\nexport default checkboxClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`, `size${capitalize(size)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, styles[`size${capitalize(ownerState.size)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: (theme.vars || theme).palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${ownerState.color === 'default' ? theme.vars.palette.action.activeChannel : theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: (theme.vars || theme).palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.action.disabled\n  }\n}));\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n  const {\n      checkedIcon = defaultCheckedIcon,\n      color = 'primary',\n      icon: iconProp = defaultIcon,\n      indeterminate = false,\n      indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n      inputProps,\n      size = 'medium',\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;","import { useMemo, useRef } from 'react';\n\n// Get a memoized value just like a useMemo would\n// However you can access the previous memoized value as the first (and only) function argument\nconst useRemfo = (func, deps) => {\n    const previousValue = useRef();\n    const newValue = useMemo(() => func(previousValue.current), deps);\n    previousValue.current = newValue;\n    return newValue;\n};\n\nexport default useRemfo;\n","// Set a class to handle version comparisions\nclass Version {\n    constructor (versionString) {\n        // If there is no version then consider it the 0.0.0\n        if (versionString === undefined) versionString = '0.0.0';\n        // Get the major, minor and patch versions\n        const splits = versionString.split('.');\n        this.major = splits[0] && +splits[0];\n        if (this.major > 999)\n            throw new Error('Major version is greater than 999 and this is not allowed');\n        this.minor = splits[1] && +splits[1];\n        if (this.minor > 999)\n            throw new Error('Minor version is greater than 999 and this is not allowed');\n        this.patch = splits[2] && +splits[2];\n        if (this.patch > 999)\n            throw new Error('Patch version is greater than 999 and this is not allowed');\n    }\n\n    // Get the version back in string format\n    // This has also an effect in the console-log display\n    toString () {\n        let string = this.major.toString();\n        if (this.minor === undefined) return string;\n        string += '.' + this.minor.toString();\n        if (this.patch === undefined) return string;\n        string += '.' + this.patch.toString();\n        return string;\n    }\n\n    // Check if two versions are equal\n    equals (other) {\n        // If this is a string instead of a version the parse it\n        if (typeof other === 'string') return this.equals(new Version(other));\n        // Check if versions are equal for all major, minor and patch versions\n        // If other version has not explicit patch or minor version then they are not compared\n        if (other.major !== this.major) return false;\n        if (other.minor !== undefined && other.minor !== this.minor) return false;\n        if (other.patch !== undefined && other.patch !== this.patch) return false;\n        return true;\n    }\n}\n\n// This allows version comparision in the classic JS notation\n// e.g. version1 >= version2\nVersion.prototype.valueOf = function() {\n    // Make sure the value will make version values coherent\n    // Note that the every version value is limited to 999 to make this function safe\n    return this.major * 1000000 + (this.minor || 0) * 1000 + (this.patch || 0);\n};\n\nexport default Version;"],"names":["residueOptions","label","value","_ref","interactions","selectedInteraction","setSelectedInteraction","selectedResidues","setSelectedResidues","selectedOrder","handleToggleOrder","firstOrderLabel","firstOrderTooltip","secondOrderLabel","secondOrderTooltip","toggleOrderTooltip","interfaceOnly","currentInteraction","_jsxs","Suspense","fallback","_jsx","Loading","children","Select","onChange","event","target","className","style","map","interaction","i","MenuItem","disabled","failed","name","RadioGroup","opt","FormControlLabel","control","Radio","color","undefined","_Fragment","TextField","title","agent_1","agent_2","IconButton","onClick","changeOrder","size","FontAwesomeIcon","icon","faExchangeAlt","getSwitchUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","SwitchRoot","styled","overridesResolver","props","styles","ownerState","root","edge","capitalize","display","width","height","overflow","padding","boxSizing","position","flexShrink","zIndex","verticalAlign","colorAdjust","variants","marginLeft","marginRight","switchClasses","thumb","switchBase","checked","transform","SwitchSwitchBase","SwitchBase","input","theme","top","left","vars","palette","Switch","defaultColor","mode","common","white","grey","transition","transitions","create","duration","shortest","defaultDisabledColor","track","opacity","switchTrackDisabled","_ref2","backgroundColor","action","activeChannel","hoverOpacity","alpha","active","Object","entries","filter","_ref3","main","light","_ref4","mainChannel","lighten","darken","SwitchTrack","_ref5","borderRadius","onBackground","black","switchTrack","SwitchThumb","_ref6","boxShadow","shadows","React","inProps","ref","useDefaultProps","sx","other","_objectWithoutPropertiesLoose","_extends","classes","slots","composedClasses","composeClasses","useUtilityClasses","clsx","type","checkedIcon","firstLabel","secondLabel","isFirst","Typography","variant","KEYFRAMES","reducedMotion","ANIMATION_OPTIONS","fill","easing","forwardRef","overrideComponent","containerRef","useRef","useLayoutEffect","node","current","firstElementChild","animate","index","Array","from","document","querySelectorAll","findIndex","section","animation","delay","cancel","Component","Card","component","ViewerWithControls","lazy","maxZ","NGLViewerInDND","viewerRef","place","setPlace","useState","innerWidth","innerHeight","scrollY","window","offsetHeight","querySelector","offsetTop","dimension","Math","max","min","reasonableHeight","x","y","Rnd","bounds","onDragStart","onResizeStart","onDragStop","e","d","layerX","layerY","onResize","autoResize","onResizeStop","direction","delta","elevation","startsPlaying","newViewer","nailing","onNail","onClose","nailedViewers","setNailedViewers","viewers","usedIds","getNewId","id","indexOf","console","error","close","nailed","newNailed","splice","push","nail","viewer","onMouseOver","onMouseOut","check","p","dataset","key","Checkbox","inputProps","Graph","GUEST_REFERENCE","getSum","values","sum","reduce","a","b","round","Energies","accessionAndMdNumber","topology","useContext","ProjectCtx","analysesUrlBase","BASE_PATH_PROJECTS","indexUrl","loading","indexLoading","payload","indexPayload","indexError","useAPI","interactionName","analysisName","useMemo","data","targetEntry","find","entry","analysis","interactionAnalysisUrl","useRemfo","previous","interactionData","setSelectedOrder","hostAtomIndices","hostResidueIndices","guestInterfaceAtomIndices","strongBonds","atom_indices_1","atom_indices_2","atom2residueIndices","interface_atom_indices_2","interface_atom_indices_1","defaultRepresentations","representations","setRepresentations","useEffect","guestNglSelection","atomIndices2Ngl","previousRepresentations","selection","reference","rep","perResidue","setPerResidue","dataError","isDataPerResidue","strongBondMarks","esData","vdwData","bothData","xTooltip","Version","version","major","hostAgent","hostResiduesLabels","residueIndex","getResidueByIndex","standardLabel","xTags","hostAtomLabels","getAtomByIndex","strongBondAtoms","concat","apply","strongBondLabels","atomIndex","residue","forEach","xPosition","attr","grouper","residueValues","v","esi","ies","esf","fes","es","vdwi","ivdw","vdwf","fvdw","vdw","bothi","iboth","bothf","fboth","both","_","xIndex","setDisplay","all","start","end","esDisplay","vdwDisplay","bothDisplay","selectedX","setSelectedX","marks","selectedResidueIndices","selectedAtomIndices","resetX","useCallback","handleSelectInteraction","newValue","handleTogglePerResidue","anyLoading","toString","singleValue","length","card","CardContent","horizontal","InteractionSelector","enabled","DoubleSideSwitch","yData","xAxisValues","xScaleFactor","yAxisLabel","onSelect","dataDisplay","fullPrecision","xAxisLabel","Legend","result","newDisplay","ViewerSpawner","selectedAtoms","representationsState","createSvgIcon","getCheckboxUtilityClass","CheckboxRoot","shouldForwardProp","prop","rootShouldForwardProp","indeterminate","text","secondary","disableRipple","checkboxClasses","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","_icon$props$fontSize","_indeterminateIcon$pr","iconProp","indeterminateIcon","indeterminateIconProp","fontSize","func","deps","previousValue","constructor","versionString","splits","split","this","Error","minor","patch","string","equals","prototype","valueOf"],"sourceRoot":""}