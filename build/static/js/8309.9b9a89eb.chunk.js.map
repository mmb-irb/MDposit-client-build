{"version":3,"file":"static/js/8309.9b9a89eb.chunk.js","mappings":"qQAEO,SAASA,EAAsBC,GACpC,OAAOC,EAAAA,EAAAA,IAAqB,YAAaD,EAC3C,CACA,MACA,GADsBE,EAAAA,EAAAA,GAAuB,YAAa,CAAC,OAAQ,YAAa,UAAW,aAAc,eAAgB,iBAAkB,YAAa,aAAc,UAAW,WAAY,QAAS,QAAS,U,eCA/M,MAAMC,EAAY,CAAC,YAAa,QAAS,OAAQ,OAAQ,MAiCnDC,GAAaC,EAAAA,EAAAA,IAAO,OAAQ,CAChCC,KAAM,YACNN,KAAM,OACNO,kBAAmBA,CAACC,EAAOC,KACzB,MAAM,WACJC,GACEF,EACJ,MAAO,CAACC,EAAOE,KAAMD,EAAWE,MAAQH,EAAO,OAADI,QAAQC,EAAAA,EAAAA,GAAWJ,EAAWE,QAAUH,EAAO,OAADI,QAAQC,EAAAA,EAAAA,GAAWJ,EAAWK,WAP3GV,CAShB,CACDW,QAAS,cACTC,MAAO,GACPC,OAAQ,GACRC,SAAU,SACVC,QAAS,GACTC,UAAW,aACXC,SAAU,WACVC,WAAY,EACZC,OAAQ,EAERC,cAAe,SAEf,eAAgB,CACdC,YAAa,SAEfC,SAAU,CAAC,CACTnB,MAAO,CACLI,KAAM,SAERgB,MAAO,CACLC,YAAa,IAEd,CACDrB,MAAO,CACLI,KAAM,OAERgB,MAAO,CACLE,aAAc,IAEf,CACDtB,MAAO,CACLO,KAAM,SAERa,MAAO,CACLX,MAAO,GACPC,OAAQ,GACRE,QAAS,EACT,CAAC,MAADP,OAAOkB,EAAcC,QAAU,CAC7Bf,MAAO,GACPC,OAAQ,IAEV,CAAC,MAADL,OAAOkB,EAAcE,aAAe,CAClCb,QAAS,EACT,CAAC,KAADP,OAAMkB,EAAcG,UAAY,CAC9BC,UAAW,0BAMfC,GAAmB/B,EAAAA,EAAAA,IAAOgC,EAAAA,EAAY,CAC1C/B,KAAM,YACNN,KAAM,aACNO,kBAAmBA,CAACC,EAAOC,KACzB,MAAM,WACJC,GACEF,EACJ,MAAO,CAACC,EAAOwB,WAAY,CACzB,CAAC,MAADpB,OAAOkB,EAAcO,QAAU7B,EAAO6B,OAChB,YAArB5B,EAAW6B,OAAuB9B,EAAO,QAADI,QAASC,EAAAA,EAAAA,GAAWJ,EAAW6B,YATrDlC,CAWtBmC,IAAA,IAAC,MACFC,GACDD,EAAA,MAAM,CACLlB,SAAU,WACVoB,IAAK,EACLC,KAAM,EACNnB,OAAQ,EAERe,MAAOE,EAAMG,KAAOH,EAAMG,KAAKC,QAAQC,OAAOC,aAAe,GAAHlC,OAA6B,UAAvB4B,EAAMI,QAAQG,KAAmBP,EAAMI,QAAQI,OAAOC,MAAQT,EAAMI,QAAQM,KAAK,MACjJC,WAAYX,EAAMY,YAAYC,OAAO,CAAC,OAAQ,aAAc,CAC1DC,SAAUd,EAAMY,YAAYE,SAASC,WAEvC,CAAC,KAAD3C,OAAMkB,EAAcG,UAAY,CAC9BC,UAAW,oBAEb,CAAC,KAADtB,OAAMkB,EAAc0B,WAAa,CAC/BlB,MAAOE,EAAMG,KAAOH,EAAMG,KAAKC,QAAQC,OAAOY,qBAAuB,GAAH7C,OAA6B,UAAvB4B,EAAMI,QAAQG,KAAmBP,EAAMI,QAAQM,KAAK,KAAOV,EAAMI,QAAQM,KAAK,OAExJ,CAAC,KAADtC,OAAMkB,EAAcG,QAAO,QAAArB,OAAOkB,EAAc4B,QAAU,CACxDC,QAAS,IAEX,CAAC,KAAD/C,OAAMkB,EAAc0B,SAAQ,QAAA5C,OAAOkB,EAAc4B,QAAU,CACzDC,QAASnB,EAAMG,KAAOH,EAAMG,KAAKgB,QAAQC,oBAAsB,GAAHhD,OAA6B,UAAvB4B,EAAMI,QAAQG,KAAmB,IAAO,KAE5G,CAAC,MAADnC,OAAOkB,EAAcO,QAAU,CAC7BK,KAAM,QACN1B,MAAO,UAEP6C,IAAA,IAAC,MACHrB,GACDqB,EAAA,MAAM,CACL,UAAW,CACTC,gBAAiBtB,EAAMG,KAAO,QAAH/B,OAAW4B,EAAMG,KAAKC,QAAQmB,OAAOC,cAAa,OAAApD,OAAM4B,EAAMG,KAAKC,QAAQmB,OAAOE,aAAY,MAAMC,EAAAA,EAAAA,IAAM1B,EAAMI,QAAQmB,OAAOI,OAAQ3B,EAAMI,QAAQmB,OAAOE,cAEvL,uBAAwB,CACtBH,gBAAiB,gBAGrBpC,SAAU,IAAI0C,OAAOC,QAAQ7B,EAAMI,SAAS0B,OAAOC,IAAA,IAAE,CAAEC,GAAMD,EAAA,OAAKC,EAAMC,MAAQD,EAAME,QACrFC,IAAIC,IAAA,IAAEtC,GAAMsC,EAAA,MAAM,CACjBrE,MAAO,CACL+B,SAEFX,MAAO,CACL,CAAC,KAADf,OAAMkB,EAAcG,UAAY,CAC9BK,OAAQE,EAAMG,MAAQH,GAAOI,QAAQN,GAAOmC,KAC5C,UAAW,CACTX,gBAAiBtB,EAAMG,KAAO,QAAH/B,OAAW4B,EAAMG,KAAKC,QAAQN,GAAOuC,YAAW,OAAAjE,OAAM4B,EAAMG,KAAKC,QAAQmB,OAAOE,aAAY,MAAMC,EAAAA,EAAAA,IAAM1B,EAAMI,QAAQN,GAAOmC,KAAMjC,EAAMI,QAAQmB,OAAOE,cACnL,uBAAwB,CACtBH,gBAAiB,gBAGrB,CAAC,KAADlD,OAAMkB,EAAc0B,WAAa,CAC/BlB,MAAOE,EAAMG,KAAOH,EAAMG,KAAKC,QAAQC,OAAO,GAADjC,OAAI0B,EAAK,kBAAmB,GAAH1B,OAA6B,UAAvB4B,EAAMI,QAAQG,MAAmB+B,EAAAA,EAAAA,GAAQtC,EAAMI,QAAQN,GAAOmC,KAAM,MAAQM,EAAAA,EAAAA,IAAOvC,EAAMI,QAAQN,GAAOmC,KAAM,QAG9L,CAAC,KAAD7D,OAAMkB,EAAcG,QAAO,QAAArB,OAAOkB,EAAc4B,QAAU,CACxDI,iBAAkBtB,EAAMG,MAAQH,GAAOI,QAAQN,GAAOmC,cAKxDO,GAAc5E,EAAAA,EAAAA,IAAO,OAAQ,CACjCC,KAAM,YACNN,KAAM,QACNO,kBAAmBA,CAACC,EAAOC,IAAWA,EAAOkD,OAH3BtD,CAIjB6E,IAAA,IAAC,MACFzC,GACDyC,EAAA,MAAM,CACLhE,OAAQ,OACRD,MAAO,OACPkE,aAAc,EACd3D,QAAS,EACT4B,WAAYX,EAAMY,YAAYC,OAAO,CAAC,UAAW,oBAAqB,CACpEC,SAAUd,EAAMY,YAAYE,SAASC,WAEvCO,gBAAiBtB,EAAMG,KAAOH,EAAMG,KAAKC,QAAQI,OAAOmC,aAAe,GAAHvE,OAA6B,UAAvB4B,EAAMI,QAAQG,KAAmBP,EAAMI,QAAQI,OAAOoC,MAAQ5C,EAAMI,QAAQI,OAAOC,OAC7JU,QAASnB,EAAMG,KAAOH,EAAMG,KAAKgB,QAAQ0B,YAAc,GAAHzE,OAA6B,UAAvB4B,EAAMI,QAAQG,KAAmB,IAAO,OAE9FuC,GAAclF,EAAAA,EAAAA,IAAO,OAAQ,CACjCC,KAAM,YACNN,KAAM,QACNO,kBAAmBA,CAACC,EAAOC,IAAWA,EAAOuB,OAH3B3B,CAIjBmF,IAAA,IAAC,MACF/C,GACD+C,EAAA,MAAM,CACLC,WAAYhD,EAAMG,MAAQH,GAAOiD,QAAQ,GACzC3B,gBAAiB,eACjB9C,MAAO,GACPC,OAAQ,GACRiE,aAAc,SA2IhB,EAzI4BQ,EAAAA,WAAiB,SAAgBC,EAASC,GACpE,MAAMrF,GAAQsF,EAAAA,EAAAA,GAAgB,CAC5BtF,MAAOoF,EACPtF,KAAM,eAEF,UACFyF,EAAS,MACTxD,EAAQ,UAAS,KACjB3B,GAAO,EAAK,KACZG,EAAO,SAAQ,GACfiF,GACExF,EACJyF,GAAQC,EAAAA,EAAAA,GAA8B1F,EAAOL,GACzCO,GAAayF,EAAAA,EAAAA,GAAS,CAAC,EAAG3F,EAAO,CACrC+B,QACA3B,OACAG,SAEIqF,EAxMkB1F,KACxB,MAAM,QACJ0F,EAAO,KACPxF,EAAI,KACJG,EAAI,MACJwB,EAAK,QACLL,EAAO,SACPuB,GACE/C,EACE2F,EAAQ,CACZ1F,KAAM,CAAC,OAAQC,GAAQ,OAAJC,QAAWC,EAAAA,EAAAA,GAAWF,IAAS,OAAFC,QAASC,EAAAA,EAAAA,GAAWC,KACpEkB,WAAY,CAAC,aAAc,QAAFpB,QAAUC,EAAAA,EAAAA,GAAWyB,IAAUL,GAAW,UAAWuB,GAAY,YAC1FzB,MAAO,CAAC,SACR2B,MAAO,CAAC,SACRrB,MAAO,CAAC,UAEJgE,GAAkBC,EAAAA,EAAAA,GAAeF,EAAOtG,EAAuBqG,GACrE,OAAOD,EAAAA,EAAAA,GAAS,CAAC,EAAGC,EAASE,IAuLbE,CAAkB9F,GAC5B+F,GAAoBC,EAAAA,EAAAA,KAAKnB,EAAa,CAC1CQ,UAAWK,EAAQpE,MACnBtB,WAAYA,IAEd,OAAoBiG,EAAAA,EAAAA,MAAMvG,EAAY,CACpC2F,WAAWa,EAAAA,EAAAA,GAAKR,EAAQzF,KAAMoF,GAC9BC,GAAIA,EACJtF,WAAYA,EACZmG,SAAU,EAAcH,EAAAA,EAAAA,KAAKtE,GAAkB+D,EAAAA,EAAAA,GAAS,CACtDW,KAAM,WACNL,KAAMA,EACNM,YAAaN,EACbZ,IAAKA,EACLnF,WAAYA,GACXuF,EAAO,CACRG,SAASD,EAAAA,EAAAA,GAAS,CAAC,EAAGC,EAAS,CAC7BzF,KAAMyF,EAAQnE,iBAEAyE,EAAAA,EAAAA,KAAKzB,EAAa,CAClCc,UAAWK,EAAQzC,MACnBjD,WAAYA,MAGlB,GClPA,EAA6B,0BCY7B,EAPyB8B,IAAA,IAAC,WAAEwE,EAAU,YAAEC,EAAW,QAAEC,EAAO,SAAEC,GAAU3E,EAAA,OACpEmE,EAAAA,EAAAA,MAAA,OAAKZ,UAAWnE,EAAiBiF,SAAA,EAC7BH,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAAC7E,MAAO2E,EAAU,KAAO,gBAAiBG,QAAQ,KAAIR,SAAGG,KACpEN,EAAAA,EAAAA,KAAC5D,EAAM,CAACZ,SAAUgF,EAASC,SAAUA,KACrCT,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAAC7E,MAAO2E,EAAU,gBAAkB,KAAMG,QAAQ,KAAIR,SAAEI,O,wECF3E,MAgLA,EAhLkCK,KAEhC,MAAM,SAAEC,IAAaC,EAAAA,EAAAA,YAAWC,EAAAA,GA2KhC,OAzK+BC,EAAAA,EAAAA,SAAQ,KAErC,IAAKH,EAAU,MAAO,GAEtB,MAAMI,EAAO,GAkKb,OA/JAJ,EAASK,aAAaC,QAAQC,IAE5B,MAAMC,EAAoBD,EAAMC,kBAC1BC,EAAaD,EAAiB,GAAAlH,OAC7BkH,EAAiB,YAAAlH,OAAWiH,EAAMxH,KAAI,cAAAO,OAChCiH,EAAMxH,MAEb2H,EAAgBH,EAAMI,SAKtBC,EAAoBC,IAExB,MAAMF,EAAWD,EAAc1D,OAAO8D,GAAWA,EAAQC,iBAAmBF,GAC5E,GAAwB,IAApBF,EAASK,OAAc,OAE3B,MAAMC,EAAaN,EAAS3D,OAAO8D,GAAWA,EAAQI,MACtD,GAAID,EAAWD,OAAS,EAAG,CACzB,MAAMG,EAAoBF,EAAW5D,IAAIyD,GAAWA,EAAQM,QACpDC,gBAAiBC,GAAiBtB,EAASuB,mBAAmBJ,GAEtEf,EAAKoB,KAAK,CACRzI,KAAK,GAADO,OAAKmH,EAAU,OAAAnH,OAAMuH,EAAO,2BAChCY,UAAWH,EACX/B,KAAM,YACNvE,MAAO,WAEX,CAEA,MAEM0G,EAFaf,EAAS3D,OAAO8D,IAAYA,EAAQI,MAElB7D,IAAIyD,GAAWA,EAAQM,OACtDO,EAAU,KAAKC,EAAAA,EAAAA,IAAeF,IAG9BG,EAAcF,EAAO3E,OAAO8E,GAASA,EAAMd,QAAU,GAC3D,GAAIa,EAAYb,OAAS,EAAG,CAE1B,MAAMe,EAAsBF,EAAYG,OAAO,CAACC,EAAIC,IAASD,EAAG3I,OAAO4I,GAAO,KACtEb,gBAAiBC,GAAiBtB,EAASuB,mBAAmBQ,GAEtE3B,EAAKoB,KAAK,CACRzI,KAAK,GAADO,OAAKmH,EAAU,OAAAnH,OAAMuH,EAAO,oBAChCY,UAAWH,EACX/B,KAAM,WACNvE,MAAO,WAEX,CAEA,MAAMmH,EAAaR,EAAO3E,OAAO8E,GAASA,EAAMd,OAAS,GACzD,GAAImB,EAAWnB,OAAS,EAAG,CAEzB,MAAMoB,EAAqBD,EAAWH,OAAO,CAACC,EAAIC,IAASD,EAAG3I,OAAO4I,GAAO,KACpEb,gBAAiBC,GAAiBtB,EAASuB,mBAAmBa,GAEtEhC,EAAKoB,KAAK,CACRzI,KAAK,GAADO,OAAKmH,EAAU,OAAAnH,OAAMuH,EAAO,YAChCY,UAAWH,EACX/B,KAAM,UACNvE,MAAO,YAGe,IAAIqH,IAAI,CAAE,MAAO,MAAO,YAC5BC,IAAIzB,IACtBT,EAAKoB,KAAK,CACRzI,KAAK,GAADO,OAAKmH,EAAU,OAAAnH,OAAMuH,EAAO,UAChCY,UAAWH,EACX/B,KAAM,OACNvE,MAAO,WAGb,GAGF4F,EAAkB,WAElBA,EAAkB,OAElBA,EAAkB,OAElBA,EAAkB,WAIlB,MAAM2B,EAAiB7B,EAAc1D,OAAO8D,GAAsC,WAA3BA,EAAQC,gBAC/D,GAAIwB,EAAevB,OAAS,EAAG,CAE7B,MAAMwB,EAAY,IAAIH,IAAIE,EAAelF,IAAIyD,GAAWA,EAAQ2B,cAChE,IAAK,MAAMC,KAAYF,EAAW,CAEhC,MAAMG,EAA8BJ,EACjCvF,OAAO8D,GAAWA,EAAQ2B,cAAgBC,GAC1CrF,IAAIyD,GAAWA,EAAQM,QAClBC,gBAAiBC,GAAiBtB,EAASuB,mBAAmBoB,GAEtEvC,EAAKoB,KAAK,CACRzI,KAAK,GAADO,OAAKmH,EAAU,cAAAnH,OAAaoJ,GAChCjB,UAAWH,EACX/B,KAAM,aACNvE,MAAO,WAEX,CACF,CAKA,MAAM4H,EAAe,IAAIP,IAAI,CAAE,QAAS,YAClCQ,EAAgBnC,EAAc1D,OAAO8D,GAAW8B,EAAaN,IAAIxB,EAAQC,iBAC/E,GAAI8B,EAAc7B,OAAS,EAAG,CAE5B,MAAM8B,EAAsBD,EAAcxF,IAAIyD,GAAWA,EAAQM,QACzDC,gBAAiBC,GAAiBtB,EAASuB,mBAAmBuB,GAEtE1C,EAAKoB,KAAK,CACRzI,KAAK,GAADO,OAAKmH,EAAU,aACnBgB,UAAWH,EACX/B,KAAM,WACNvE,MAAO,OACPqB,QAAS,IAEb,CAIA,MAAM0G,EAAcrC,EAAc1D,OAAO8D,GAAsC,QAA3BA,EAAQC,gBAC5D,GAAIgC,EAAY/B,OAAS,EAAG,CAE1B,MAAMgC,EAAoBD,EAAY1F,IAAIyD,GAAWA,EAAQM,QACrDC,gBAAiBC,GAAiBtB,EAASuB,mBAAmByB,GAEtE5C,EAAKoB,KAAK,CACRzI,KAAK,GAADO,OAAKmH,EAAU,WACnBgB,UAAWH,EACX/B,KAAM,YACNvE,MAAO,WAEX,CAIA,MAAMiI,EAAe,IAAIZ,IAAI,CAAE,UAAW,YACpCa,EAAgBxC,EAAc1D,OAAO8D,GAAWmC,EAAaX,IAAIxB,EAAQC,iBAC/E,GAAImC,EAAclC,OAAS,EAAG,CAE5B,MAAMmC,EAAuBD,EAAc7F,IAAIyD,GAAWA,EAAQM,QAC1DC,gBAAiBC,GAAiBtB,EAASuB,mBAAmB4B,GAEtE/C,EAAKoB,KAAK,CACRzI,KAAK,GAADO,OAAKmH,EAAU,YACnBgB,UAAWH,EACX/B,KAAM,WACNvE,MAAO,SACPqB,QAAS,IAEb,IAGK+D,GACN,CAACJ,I,8FClLN,QAA4B,yB,6CCMtBoD,EAAY,CAAE/G,QAAS,CAAC,EAAG,KAE5BgH,EAAAA,EAAAA,OACHD,EAAUxI,UAAY,CAAC,mBAAoB,kBAG7C,MAAM0I,EAAoB,CACxBC,KAAM,OACNC,OAAQ,iCACRxH,SAAU,KAgCZ,GA5BqByH,EAAAA,EAAAA,YAAW,CAAAxI,EAAkCqD,KAAS,IAA1C,kBAAEoF,GAA6BzI,EAAPhC,GAAK0K,EAAAA,EAAAA,GAAA1I,EAAArC,GAC5D,MAAMgL,GAAeC,EAAAA,EAAAA,QAAO,OAE5BC,EAAAA,EAAAA,iBAAgB,KACd,MAAMC,EAAOH,EAAaI,SAAWJ,EAAaI,QAAQC,kBAC1D,IAAMF,IAAQA,EAAKG,QAAU,OAE7B,MAAM9C,EAAQ+C,MAAMC,KAClBC,SAASC,iBAAiB,iBAC1BC,UAAUC,GAAWT,IAASS,GAE1BC,EAAYV,EAAKG,QAAQd,GAASsB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACnCpB,GAAiB,IACpBqB,MAAe,IAARvD,KAGT,MAAO,IAAMqD,EAAUG,UACtB,IAEH,MAAMC,EAAYnB,EAAoB,UAAYoB,EAAAA,EAElD,OACE3F,EAAAA,EAAAA,KAAA,OAAKb,IAAKsF,EAAcpF,UAAWnE,EAAgBiF,UACjDH,EAAAA,EAAAA,KAAC0F,GAASH,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAACK,UAAU,WAAc9L,GAAK,IAAEqF,IAAKA,Q,mFC1CrD,QAAsB,mBAAtB,EAAyD,6B,eCQzD,MAAM0G,GAAqBC,EAAAA,EAAAA,MAAK,IAC9B,wIAUF,IAAIC,EAAO,EACX,MA+DMC,EAAiBlM,IAGrB,MAAMmM,EAAYnM,EAAMmM,YAAavB,EAAAA,EAAAA,QAAO,OAGrCwB,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAEjC,MAEM,WAAEC,EAAU,YAAEC,EAAW,QAAEC,GAAYC,OAGvCC,EAAevB,SAASwB,cAAc,QAAQC,UAE9CC,EAAYC,KAAKC,IACrBD,KAAKE,IAAIV,EAAa,EAAGC,EAAc,GApFnB,KAuFhBU,EAAmB,IAAMJ,EAE/B,MAAO,CAELrM,MAHsB,EAAIqM,EAI1BpM,OAAQwM,EACRC,EAAG,EACHC,EAAGZ,EAAcG,EAAeO,EAlBnB,GAkB+CT,KAIhE,OAEEvG,EAAAA,EAAAA,KAACmH,EAAAA,EAAG,CACFvM,SAAU,CAAEqM,EAAGf,EAAMe,EAAGC,EAAGhB,EAAMgB,GACjC7M,KAAM,CAAEE,MAAO2L,EAAM3L,MAAOC,OAAQ0L,EAAM1L,QAE1CU,MAAO,CAAEJ,QAlGbiL,GAAQ,EACDA,IAkGH1G,UAAWnE,EACX,cAIAkM,OAAO,SAEP3B,OAAO,0DAIP4B,YAAaA,KACXlB,GAAQZ,EAAAA,EAAAA,GAAC,CAAC,EAAIW,KAEhBoB,cAAeA,KACbnB,GAAQZ,EAAAA,EAAAA,GAAC,CAAC,EAAIW,KAEhBqB,WAAYA,CAACC,EAAGC,KAEG,IAAbD,EAAEE,QAA6B,IAAbF,EAAEG,QAEpBzB,EAAMe,IAAMQ,EAAER,GAAKf,EAAMgB,IAAMO,EAAEP,GACnCf,GAAQZ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACLW,GAAK,IACRe,EAAGQ,EAAER,EACLC,EAAGO,EAAEP,MAIXU,SAAUA,IAAM3B,EAAUpB,SAAWoB,EAAUpB,QAAQgD,aACvDC,aAAcA,CAACN,EAAGO,EAAW5I,EAAK6I,EAAOpN,KACvCuL,GAAQZ,EAAAA,EAAAA,GAAC,CACPhL,MAAO4E,EAAIjE,MAAMX,MACjBC,OAAQ2E,EAAIjE,MAAMV,QACfI,KAKLuF,UAEFH,EAAAA,EAAAA,KAAC2F,EAAAA,EAAI,CAACtG,UAAWnE,EAAwB+M,UAAW,EAAE9H,UACpDH,EAAAA,EAAAA,KAACkI,EAAAA,SAAQ,CAACC,SAAU,KAAKhI,UACvBH,EAAAA,EAAAA,KAAC6F,GAAkBN,EAAAA,EAAAA,GAAA,CACjBlG,UAAWnE,EACXiE,IAAK8G,EACLmC,eAAe,GACXtO,WAQhB,EApJsBgC,IAAqD,IAApD,UAAEuM,EAAS,QAAEC,GAAU,EAAI,OAAEC,EAAM,QAAEC,GAAS1M,EAEnE,MAAO2M,EAAeC,IAAoBtC,EAAAA,EAAAA,UAAS,IAG7CuC,EAAU,IAAIF,GAGdG,GAAUlE,EAAAA,EAAAA,QAAO,IAEvB,GAAI2D,EAAW,CAKb,MAAMQ,EAAWA,KACf,IAAIC,EAAK,EACT,KAAOA,EAAK,KAAK,CACf,IAAqC,IAAjCF,EAAQ/D,QAAQkE,QAAQD,GAAY,OAAOA,EAC/CA,GAAM,CACR,CACAE,QAAQC,MAAM,sCAIhBZ,EAAUS,GAAKD,IACfR,EAAUa,MAAQ,KACZZ,GACFI,EAAiBS,IACf,MAAMC,EAAY,IAAID,GAChBlH,EAAQkH,EAAOJ,QAAQV,GAE7B,OADe,IAAXpG,GAAcmH,EAAUC,OAAOpH,EAAO,GACnCmH,IAGPZ,GAASA,EAAQH,GACrBO,EAAQ/D,QAAQxC,KAAKgG,EAAUS,KAG7BR,IACFD,EAAUiB,KAAO,KACfZ,EAAiBS,GAAU,IAAIA,EAAQd,IACnCE,GAAQA,EAAOF,GACnBO,EAAQ/D,QAAQxC,KAAKgG,EAAUS,MAGnCH,EAAQtG,KAAKgG,EACf,CAGA,OAAOM,EAAQzK,IAAIqL,IAAUvJ,EAAAA,EAAAA,KAACgG,GAAcT,EAAAA,EAAAA,GAAA,GAAqBgE,GAAfA,EAAOT,K","sources":["../node_modules/@mui/material/Switch/switchClasses.js","../node_modules/@mui/material/Switch/Switch.js","webpack://mdposit/./src/components/double-side-switch/style.module.css?bc8b","components/double-side-switch/index.js","components/ngl-viewer/use-default-representations/index.js","webpack://mdposit/./src/components/animated-card/style.module.css?d4d9","components/animated-card/index.js","webpack://mdposit/./src/components/viewer-spawner/style.module.css?df6e","components/viewer-spawner/index.js"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getSwitchUtilityClass(slot) {\n  return generateUtilityClass('MuiSwitch', slot);\n}\nconst switchClasses = generateUtilityClasses('MuiSwitch', ['root', 'edgeStart', 'edgeEnd', 'switchBase', 'colorPrimary', 'colorSecondary', 'sizeSmall', 'sizeMedium', 'checked', 'disabled', 'input', 'thumb', 'track']);\nexport default switchClasses;","'use client';\n\n// @inheritedComponent IconButton\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"edge\", \"size\", \"sx\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha, darken, lighten } from '@mui/system/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nimport { styled } from '../zero-styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport switchClasses, { getSwitchUtilityClass } from './switchClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    edge,\n    size,\n    color,\n    checked,\n    disabled\n  } = ownerState;\n  const slots = {\n    root: ['root', edge && `edge${capitalize(edge)}`, `size${capitalize(size)}`],\n    switchBase: ['switchBase', `color${capitalize(color)}`, checked && 'checked', disabled && 'disabled'],\n    thumb: ['thumb'],\n    track: ['track'],\n    input: ['input']\n  };\n  const composedClasses = composeClasses(slots, getSwitchUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst SwitchRoot = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.edge && styles[`edge${capitalize(ownerState.edge)}`], styles[`size${capitalize(ownerState.size)}`]];\n  }\n})({\n  display: 'inline-flex',\n  width: 34 + 12 * 2,\n  height: 14 + 12 * 2,\n  overflow: 'hidden',\n  padding: 12,\n  boxSizing: 'border-box',\n  position: 'relative',\n  flexShrink: 0,\n  zIndex: 0,\n  // Reset the stacking context.\n  verticalAlign: 'middle',\n  // For correct alignment with the text.\n  '@media print': {\n    colorAdjust: 'exact'\n  },\n  variants: [{\n    props: {\n      edge: 'start'\n    },\n    style: {\n      marginLeft: -8\n    }\n  }, {\n    props: {\n      edge: 'end'\n    },\n    style: {\n      marginRight: -8\n    }\n  }, {\n    props: {\n      size: 'small'\n    },\n    style: {\n      width: 40,\n      height: 24,\n      padding: 7,\n      [`& .${switchClasses.thumb}`]: {\n        width: 16,\n        height: 16\n      },\n      [`& .${switchClasses.switchBase}`]: {\n        padding: 4,\n        [`&.${switchClasses.checked}`]: {\n          transform: 'translateX(16px)'\n        }\n      }\n    }\n  }]\n});\nconst SwitchSwitchBase = styled(SwitchBase, {\n  name: 'MuiSwitch',\n  slot: 'SwitchBase',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.switchBase, {\n      [`& .${switchClasses.input}`]: styles.input\n    }, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme\n}) => ({\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  zIndex: 1,\n  // Render above the focus ripple.\n  color: theme.vars ? theme.vars.palette.Switch.defaultColor : `${theme.palette.mode === 'light' ? theme.palette.common.white : theme.palette.grey[300]}`,\n  transition: theme.transitions.create(['left', 'transform'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  [`&.${switchClasses.checked}`]: {\n    transform: 'translateX(20px)'\n  },\n  [`&.${switchClasses.disabled}`]: {\n    color: theme.vars ? theme.vars.palette.Switch.defaultDisabledColor : `${theme.palette.mode === 'light' ? theme.palette.grey[100] : theme.palette.grey[600]}`\n  },\n  [`&.${switchClasses.checked} + .${switchClasses.track}`]: {\n    opacity: 0.5\n  },\n  [`&.${switchClasses.disabled} + .${switchClasses.track}`]: {\n    opacity: theme.vars ? theme.vars.opacity.switchTrackDisabled : `${theme.palette.mode === 'light' ? 0.12 : 0.2}`\n  },\n  [`& .${switchClasses.input}`]: {\n    left: '-100%',\n    width: '300%'\n  }\n}), ({\n  theme\n}) => ({\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.activeChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.action.active, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  },\n  variants: [...Object.entries(theme.palette).filter(([, value]) => value.main && value.light) // check all the used fields in the style below\n  .map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      [`&.${switchClasses.checked}`]: {\n        color: (theme.vars || theme).palette[color].main,\n        '&:hover': {\n          backgroundColor: theme.vars ? `rgba(${theme.vars.palette[color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette[color].main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        },\n        [`&.${switchClasses.disabled}`]: {\n          color: theme.vars ? theme.vars.palette.Switch[`${color}DisabledColor`] : `${theme.palette.mode === 'light' ? lighten(theme.palette[color].main, 0.62) : darken(theme.palette[color].main, 0.55)}`\n        }\n      },\n      [`&.${switchClasses.checked} + .${switchClasses.track}`]: {\n        backgroundColor: (theme.vars || theme).palette[color].main\n      }\n    }\n  }))]\n}));\nconst SwitchTrack = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Track',\n  overridesResolver: (props, styles) => styles.track\n})(({\n  theme\n}) => ({\n  height: '100%',\n  width: '100%',\n  borderRadius: 14 / 2,\n  zIndex: -1,\n  transition: theme.transitions.create(['opacity', 'background-color'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  backgroundColor: theme.vars ? theme.vars.palette.common.onBackground : `${theme.palette.mode === 'light' ? theme.palette.common.black : theme.palette.common.white}`,\n  opacity: theme.vars ? theme.vars.opacity.switchTrack : `${theme.palette.mode === 'light' ? 0.38 : 0.3}`\n}));\nconst SwitchThumb = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Thumb',\n  overridesResolver: (props, styles) => styles.thumb\n})(({\n  theme\n}) => ({\n  boxShadow: (theme.vars || theme).shadows[1],\n  backgroundColor: 'currentColor',\n  width: 20,\n  height: 20,\n  borderRadius: '50%'\n}));\nconst Switch = /*#__PURE__*/React.forwardRef(function Switch(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiSwitch'\n  });\n  const {\n      className,\n      color = 'primary',\n      edge = false,\n      size = 'medium',\n      sx\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    edge,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  const icon = /*#__PURE__*/_jsx(SwitchThumb, {\n    className: classes.thumb,\n    ownerState: ownerState\n  });\n  return /*#__PURE__*/_jsxs(SwitchRoot, {\n    className: clsx(classes.root, className),\n    sx: sx,\n    ownerState: ownerState,\n    children: [/*#__PURE__*/_jsx(SwitchSwitchBase, _extends({\n      type: \"checkbox\",\n      icon: icon,\n      checkedIcon: icon,\n      ref: ref,\n      ownerState: ownerState\n    }, other, {\n      classes: _extends({}, classes, {\n        root: classes.switchBase\n      })\n    })), /*#__PURE__*/_jsx(SwitchTrack, {\n      className: classes.track,\n      ownerState: ownerState\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense switch styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Switch;","// extracted by mini-css-extract-plugin\nexport default {\"horizontal\":\"style_horizontal__wW0pI\"};","import React from 'react';\n\nimport { Switch, Typography } from '@mui/material';\nimport style from './style.module.css';\n\n// Render a switch with a label on each side\nconst DoubleSideSwitch = ({ firstLabel, secondLabel, isFirst, onChange }) => \n    <div className={style.horizontal}>\n        <Typography color={isFirst ? null : \"textSecondary\"} variant=\"h6\" >{firstLabel}</Typography>\n        <Switch checked={!isFirst} onChange={onChange} />\n        <Typography color={isFirst ? \"textSecondary\" : null} variant=\"h6\">{secondLabel}</Typography>\n    </div>\n\nexport default DoubleSideSwitch;\n","// React logic\nimport { useMemo, useContext } from 'react';\n\nimport { ProjectCtx } from '../../../contexts';\n\nimport { generateRanges } from 'src/utils/auxiliar-functions';\n\n// Use this hook to get the memoized NGL default representations\nconst useDefaultRepresentations = () => {\n  // Get current project data\n  const { topology } = useContext(ProjectCtx);\n  // Set the chains to be represented in the NGL viewer by default\n  const defaultRepresentations = useMemo(() => {\n    // If there is no topology yet then return here and wait for data to be downloaded\n    if (!topology) return [];\n    // Set a list to store all final representations\n    const reps = [];\n    // Iterate the different chains\n    // Every representation, no matter the type, will be organized as one per chain\n    topology.iterchains().forEach(chain => {\n      // Set the chain label\n      const metadataChainName = chain.metadataChainName\n      const chainLabel = metadataChainName\n        ? `${metadataChainName} (Chain ${chain.name})`\n        : `Chain ${chain.name}`;\n      // Get residues in the current chain\n      const chainResidues = chain.residues;\n      // 1. Polymers such as proteins and nucleic acids\n      // Represent polymers in cartoon and colored by chain\n      // Note that coarse grain (CG) residues will not be propery represented in cartoon\n      // For this reason we must create a separated representation for them in spacefill (vdw)\n      const respresentPolymer = polymer => {\n        // Start by classify residues (note that this logic is actually run only once and then stored)\n        const residues = chainResidues.filter(residue => residue.classification === polymer);\n        if (residues.length === 0) return;\n        // First of all handle coarse grain residues\n        const cgResidues = residues.filter(residue => residue.isCg);\n        if (cgResidues.length > 0) {\n          const cgResiduesIndices = cgResidues.map(residue => residue.index);\n          const { rangedSelection: nglSelection } = topology.residueIndices2Ngl(cgResiduesIndices);\n          // Set the new representation\n          reps.push({\n            name: `${chainLabel} - ${polymer} polymer (coarse grain)`,\n            selection: nglSelection,\n            type: 'spacefill',\n            color: 'chainid',\n          });\n        }\n        // Now keep going with the all atom residues\n        const aaResidues = residues.filter(residue => !residue.isCg);\n        // Get ranges of residue indices in a row\n        const aaResiduesIndices = aaResidues.map(residue => residue.index);\n        const ranges =  [ ...generateRanges(aaResiduesIndices) ];\n        // Those regions with 3 residues or less are not representable by cartoon (NGL limitation)\n        // Therefore, we will set an additional licorice representation for them\n        const shortRanges = ranges.filter(range => range.length <= 3);\n        if (shortRanges.length > 0) {\n          // Transform the residue indices to a NGL selection\n          const shortResidueIndices = shortRanges.reduce((ac, curr) => ac.concat(curr), []);\n          const { rangedSelection: nglSelection } = topology.residueIndices2Ngl(shortResidueIndices);\n          // Set the new representation\n          reps.push({\n            name: `${chainLabel} - ${polymer} polymer (short)`,\n            selection: nglSelection,\n            type: 'licorice',\n            color: 'chainid',\n          });\n        }\n        // The long ranges are to be displayed in cartoon\n        const longRanges = ranges.filter(range => range.length > 3);\n        if (longRanges.length > 0) {\n          // Transform the residue indices to a NGL selection\n          const longResidueIndices = longRanges.reduce((ac, curr) => ac.concat(curr), []);\n          const { rangedSelection: nglSelection } = topology.residueIndices2Ngl(longResidueIndices);\n          // Set the new representation\n          reps.push({\n            name: `${chainLabel} - ${polymer} polymer`,\n            selection: nglSelection,\n            type: 'cartoon',\n            color: 'chainid',\n          });\n          // If this is a nucleic polymer then set also a representation for its bases\n          const nucleicPolymers = new Set([ 'dna', 'rna', 'nucleic' ]);\n          if (nucleicPolymers.has(polymer)) {\n            reps.push({\n              name: `${chainLabel} - ${polymer} bases`,\n              selection: nglSelection,\n              type: 'base',\n              color: 'resname',\n            });\n          }\n        }\n      }\n      // Represent protein polymers\n      respresentPolymer('protein');\n      // Represent DNA polymers\n      respresentPolymer('dna');\n      // Represent RNA polymers\n      respresentPolymer('rna');\n      // Represent other nucleic polymers\n      respresentPolymer('nucleic');\n      // 2. Ligands, small molecules which are referenced\n      // Represent ligands in ball+stick (cpk) colored by element\n      // Start by classify residues (note that this logic is actually run only once and then stored)\n      const ligandResidues = chainResidues.filter(residue => residue.classification === 'ligand');\n      if (ligandResidues.length > 0) {\n        // In case we have more than a different ligand in this chain, set a representation for each one\n        const ligandIds = new Set(ligandResidues.map(residue => residue.referenceId));\n        for (const ligandId of ligandIds) {\n          // Get the NGL selection of traget residues\n          const currentLigandResidueIndices = ligandResidues\n            .filter(residue => residue.referenceId === ligandId)\n            .map(residue => residue.index);\n          const { rangedSelection: nglSelection } = topology.residueIndices2Ngl(currentLigandResidueIndices);\n          // Add the representation\n          reps.push({\n            name: `${chainLabel} - ligand ${ligandId}`,\n            selection: nglSelection,\n            type: 'ball+stick',\n            color: 'element'\n          });\n        }\n      }\n      // 3. Lipids, usually membranes\n      // Represent membranes in grey licorice, with a reduced oppacity\n      // Thus we ease observing what is there inside of the membrane\n      // Start by finding lipid residues\n      const lipidClasses = new Set([ 'fatty', 'steroid' ]);\n      const lipidResidues = chainResidues.filter(residue => lipidClasses.has(residue.classification));\n      if (lipidResidues.length > 0) {\n        // Now parse them to a NGL selection\n        const lipidResidueIndices = lipidResidues.map(residue => residue.index);\n        const { rangedSelection: nglSelection } = topology.residueIndices2Ngl(lipidResidueIndices);\n        // Add the representation\n        reps.push({\n          name: `${chainLabel} - lipids`,\n          selection: nglSelection,\n          type: 'licorice',\n          color: 'grey',\n          opacity: 0.5,\n        });\n      }\n      // 4. Ions, single atoms\n      // Represent ions using spacefill (vdw) and colored by element\n      // Start by finding ion residues\n      const ionResidues = chainResidues.filter(residue => residue.classification === 'ion');\n      if (ionResidues.length > 0) {\n        // Now parse them to a NGL selection\n        const ionResidueIndices = ionResidues.map(residue => residue.index);\n        const { rangedSelection: nglSelection } = topology.residueIndices2Ngl(ionResidueIndices);\n        // Add the representation\n        reps.push({\n          name: `${chainLabel} - ions`,\n          selection: nglSelection,\n          type: 'spacefill',\n          color: 'element',\n        });\n      }\n      // 5. Other, anything else\n      // Residues not falling in any previous section will be represented in low opacity purple licorice\n      // This includes solvent and unknown residues (e.g. carbohydrates)\n      const otherClasses = new Set([ 'solvent', 'unknown' ]);\n      const otherResidues = chainResidues.filter(residue => otherClasses.has(residue.classification));\n      if (otherResidues.length > 0) {\n        // Now parse them to a NGL selection\n        const otherResiduesIndices = otherResidues.map(residue => residue.index);\n        const { rangedSelection: nglSelection } = topology.residueIndices2Ngl(otherResiduesIndices);\n        // Add the representation\n        reps.push({\n          name: `${chainLabel} - other`,\n          selection: nglSelection,\n          type: 'licorice',\n          color: 'purple',\n          opacity: 0.3,\n        });\n      }\n    });\n\n    return reps;\n  }, [topology]);\n\n  return defaultRepresentations;\n};\n\nexport default useDefaultRepresentations;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"style_container__M9GCG\"};","import React, { useLayoutEffect, useRef, forwardRef } from 'react';\nimport { Card } from '@mui/material';\n\nimport reducedMotion from '../../utils/reduced-motion';\n\nimport style from './style.module.css';\n\nconst KEYFRAMES = { opacity: [0, 1] };\n\nif (!reducedMotion()) {\n  KEYFRAMES.transform = ['translateY(50px)', 'translateY(0)'];\n}\n\nconst ANIMATION_OPTIONS = {\n  fill: 'both',\n  easing: 'cubic-bezier(0, .99, .56, 1.1)',\n  duration: 500,\n};\n\n// Make the card appear and slide softly from down to up when the page is loaded\nconst AnimatedCard = forwardRef(({ overrideComponent, ...props }, ref) => {\n  const containerRef = useRef(null);\n\n  useLayoutEffect(() => {\n    const node = containerRef.current && containerRef.current.firstElementChild;\n    if (!(node && node.animate)) return;\n\n    const index = Array.from(\n      document.querySelectorAll('main section'),\n    ).findIndex(section => node === section);\n\n    const animation = node.animate(KEYFRAMES, {\n      ...ANIMATION_OPTIONS,\n      delay: index * 150,\n    });\n\n    return () => animation.cancel();\n  }, []);\n\n  const Component = overrideComponent ? 'section' : Card;\n\n  return (\n    <div ref={containerRef} className={style.container}>\n      <Component component=\"section\" {...props} ref={ref} />\n    </div>\n  );\n});\n\nexport default AnimatedCard;\n","// extracted by mini-css-extract-plugin\nexport default {\"rnd\":\"style_rnd__Txifm\",\"floating-card\":\"style_floating-card__HHpby\"};","import React, { lazy, Suspense, useRef, useState } from 'react';\n\n// Rnd is the resizable and draggable system where the ngl viewer is placed\nimport { Rnd } from 'react-rnd';\n\nimport Card from '../animated-card';\n\nimport style from './style.module.css';\n\nconst ViewerWithControls = lazy(() =>\n  import(\n    /* webpackChunkName: 'viewer-with-controls' */ '../viewer-with-controls'\n  ),\n);\n\n// Minimal ngl window height\nconst MIN_NGL_DIMENSION = 150;\n\n// Counter to get always the maximum zIndex\n// This is useful to set a new or currently dragged/resized ngl window over the others\nlet maxZ = 0;\nconst nextZ = () => {\n  maxZ += 1;\n  return maxZ;\n};\n\n// This function spawns all the NGL viewers needed\n// i.e. one viewer with the requested 'props' and all previous viewers which have been nailed\nconst ViewerSpawner = ({ newViewer, nailing = true, onNail, onClose }) => {\n  // Store here all nailed NGL viewers\n  const [nailedViewers, setNailedViewers] = useState([]);\n\n  // Set the viewers as the nailed viewers and the new viewer\n  const viewers = [...nailedViewers];\n\n  // Keep listed all arrays which have been used (i.e. ngl viewers which have been nailed or closed)\n  const usedIds = useRef([]);\n\n  if (newViewer) {\n    // Find a new suitable Id that meet 2 conditions:\n    // - There is never 2 viewers with the same id, so we avoid errors\n    // - If we pick diferent frames in the graph without nailing anything, the current viewer has always the same id\n    // (This way the current viewer does not appear in the origin position every time)\n    const getNewId = () => {\n      let id = 0;\n      while (id < 999) {\n        if (usedIds.current.indexOf(id) === -1) return id;\n        id += 1;\n      }\n      console.error('Maximum number of viewers reached');\n    };\n\n    // Set a unique id for this props based in the last nailed viewer\n    newViewer.id = getNewId();\n    newViewer.close = () => {\n      if (nailing) {\n        setNailedViewers(nailed => {\n          const newNailed = [...nailed];\n          const index = nailed.indexOf(newViewer);\n          if (index !== -1) newNailed.splice(index, 1);\n          return newNailed;\n        });\n      }\n      if (onClose) onClose(newViewer);\n      usedIds.current.push(newViewer.id);\n    };\n    // If the nailer function is passed, add the logic for the viewer to be nailed further\n    if (nailing)\n      newViewer.nail = () => {\n        setNailedViewers(nailed => [...nailed, newViewer]);\n        if (onNail) onNail(newViewer);\n        usedIds.current.push(newViewer.id);\n      };\n    // Add the current viewer to the viewers list\n    viewers.push(newViewer);\n  }\n\n  // Render a viewer for each prop. Use the 'selected' parameter as unique id\n  return viewers.map(viewer => <NGLViewerInDND key={viewer.id} {...viewer} />);\n};\n\n// This component render a small NGL viewer\n// It is called when user clicks in a point in the projections component\n// Also it is called by the generic analysis page\nconst NGLViewerInDND = props => {\n  // Set a reference for the viewer\n  // If a reference is passed among the viewer arguments then use it instead\n  const viewerRef = props.viewerRef || useRef(null);\n\n  // Set the default position and size\n  const [place, setPlace] = useState(() => {\n    // Set an extra margin\n    const MARGIN = 20;\n    // Get the screen pixel sizes and vertical scroll position\n    const { innerWidth, innerHeight, scrollY } = window;\n    // The spawned elements are parented to the 'main' element, not to the 'body'\n    // We have to take this in count, since the header adds an extra offset in vertical position\n    const offsetHeight = document.querySelector('main').offsetTop;\n    // Set a reasonable dimension for the ngl window\n    const dimension = Math.max(\n      Math.min(innerWidth / 4, innerHeight / 4),\n      MIN_NGL_DIMENSION,\n    );\n    const reasonableHeight = 1.5 * dimension;\n    const reasonableWidth = 2 * dimension;\n    return {\n      // WARNING: If you set the width as 'auto' the window stays very wide when exiting fullscreen\n      width: reasonableWidth, // Let the Rnd logic set the width automatically\n      height: reasonableHeight, // Reasonable height\n      x: 0, // Left border\n      y: innerHeight - offsetHeight - reasonableHeight - MARGIN + scrollY, // Bottom border\n    };\n  });\n\n  return (\n    // Rnd is the draggable and resizable system where the ngl viewer is placed\n    <Rnd\n      position={{ x: place.x, y: place.y }}\n      size={{ width: place.width, height: place.height }}\n      // Update the zIndex to make this window the first visible\n      style={{ zIndex: nextZ() }}\n      className={style.rnd}\n      data-rnd\n      // Limits where the window can be dragged/resized to\n      // WARNING: bounds=\"main\" is problematic since the window may appear out of bounds\n      // WARNING: Then when it is moved for the first time it jumps inside the bonds, not elegant\n      bounds=\"window\"\n      // Prevent the mouse to drag/resize the window when it is over specific elements\n      cancel=\"canvas, [data-popover], #preventDragSize, .prevent-drag\"\n      // On drag/resize starts we do not change anything, but use the hook to re-render this component\n      // The Z Index is updated and the selected window becomes the first in the z axis automatically\n      // WARNING: Drag functions are also called when you just click (e.g. clicking buttons)\n      onDragStart={() => {\n        setPlace({ ...place });\n      }}\n      onResizeStart={() => {\n        setPlace({ ...place });\n      }}\n      onDragStop={(e, d) => {\n        // Use this to reject some bugged event calls: e.g. the frames number selector\n        if (e.layerX === 0 && e.layerY === 0) return;\n        // We re-render only if the new position does not equal the old position\n        if (place.x !== d.x || place.y !== d.y)\n          setPlace({\n            ...place,\n            x: d.x,\n            y: d.y,\n          });\n      }}\n      // Re-adapt the viewer and update the position/size when the window is resized\n      onResize={() => viewerRef.current && viewerRef.current.autoResize()}\n      onResizeStop={(e, direction, ref, delta, position) => {\n        setPlace({\n          width: ref.style.width,\n          height: ref.style.height,\n          ...position,\n        });\n        // if (!viewerRef.current) return;\n        // viewerRef.current.autoResize();\n        // viewerRef.current.autoResize.flush();\n      }}\n    >\n      <Card className={style['floating-card']} elevation={4}>\n        <Suspense fallback={null}>\n          <ViewerWithControls\n            className={style['floating-card']}\n            ref={viewerRef}\n            startsPlaying={false}\n            {...props}\n          />\n        </Suspense>\n      </Card>\n    </Rnd>\n  );\n};\n\nexport default ViewerSpawner;\n"],"names":["getSwitchUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","SwitchRoot","styled","name","overridesResolver","props","styles","ownerState","root","edge","concat","capitalize","size","display","width","height","overflow","padding","boxSizing","position","flexShrink","zIndex","verticalAlign","colorAdjust","variants","style","marginLeft","marginRight","switchClasses","thumb","switchBase","checked","transform","SwitchSwitchBase","SwitchBase","input","color","_ref","theme","top","left","vars","palette","Switch","defaultColor","mode","common","white","grey","transition","transitions","create","duration","shortest","disabled","defaultDisabledColor","track","opacity","switchTrackDisabled","_ref2","backgroundColor","action","activeChannel","hoverOpacity","alpha","active","Object","entries","filter","_ref3","value","main","light","map","_ref4","mainChannel","lighten","darken","SwitchTrack","_ref5","borderRadius","onBackground","black","switchTrack","SwitchThumb","_ref6","boxShadow","shadows","React","inProps","ref","useDefaultProps","className","sx","other","_objectWithoutPropertiesLoose","_extends","classes","slots","composedClasses","composeClasses","useUtilityClasses","icon","_jsx","_jsxs","clsx","children","type","checkedIcon","firstLabel","secondLabel","isFirst","onChange","Typography","variant","useDefaultRepresentations","topology","useContext","ProjectCtx","useMemo","reps","iterchains","forEach","chain","metadataChainName","chainLabel","chainResidues","residues","respresentPolymer","polymer","residue","classification","length","cgResidues","isCg","cgResiduesIndices","index","rangedSelection","nglSelection","residueIndices2Ngl","push","selection","aaResiduesIndices","ranges","generateRanges","shortRanges","range","shortResidueIndices","reduce","ac","curr","longRanges","longResidueIndices","Set","has","ligandResidues","ligandIds","referenceId","ligandId","currentLigandResidueIndices","lipidClasses","lipidResidues","lipidResidueIndices","ionResidues","ionResidueIndices","otherClasses","otherResidues","otherResiduesIndices","KEYFRAMES","reducedMotion","ANIMATION_OPTIONS","fill","easing","forwardRef","overrideComponent","_objectWithoutProperties","containerRef","useRef","useLayoutEffect","node","current","firstElementChild","animate","Array","from","document","querySelectorAll","findIndex","section","animation","_objectSpread","delay","cancel","Component","Card","component","ViewerWithControls","lazy","maxZ","NGLViewerInDND","viewerRef","place","setPlace","useState","innerWidth","innerHeight","scrollY","window","offsetHeight","querySelector","offsetTop","dimension","Math","max","min","reasonableHeight","x","y","Rnd","bounds","onDragStart","onResizeStart","onDragStop","e","d","layerX","layerY","onResize","autoResize","onResizeStop","direction","delta","elevation","Suspense","fallback","startsPlaying","newViewer","nailing","onNail","onClose","nailedViewers","setNailedViewers","viewers","usedIds","getNewId","id","indexOf","console","error","close","nailed","newNailed","splice","nail","viewer"],"sourceRoot":""}