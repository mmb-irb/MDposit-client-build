{"version":3,"file":"static/js/854.467aca11.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/Switch/switchClasses.js","../node_modules/@mui/material/Switch/Switch.js","webpack://mdposit/./src/components/double-side-switch/style.module.css?bc8b","components/double-side-switch/index.js","webpack://mdposit/./src/components/animated-card/style.module.css?d4d9","components/animated-card/index.js","pages/accession/dihenergies/index.js","webpack://mdposit/./src/pages/accession/dihenergies/style.module.css?c452","../node_modules/@mui/material/internal/switchBaseClasses.js","../node_modules/@mui/material/internal/SwitchBase.js","webpack://mdposit/./src/components/viewer-spawner/style.module.css?df6e","components/viewer-spawner/index.js","webpack://mdposit/./src/components/selector/style.module.css?71ed","components/selector/index.js"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getSwitchUtilityClass(slot) {\n  return generateUtilityClass('MuiSwitch', slot);\n}\nconst switchClasses = generateUtilityClasses('MuiSwitch', ['root', 'edgeStart', 'edgeEnd', 'switchBase', 'colorPrimary', 'colorSecondary', 'sizeSmall', 'sizeMedium', 'checked', 'disabled', 'input', 'thumb', 'track']);\nexport default switchClasses;","'use client';\n\n// @inheritedComponent IconButton\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"edge\", \"size\", \"sx\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha, darken, lighten } from '@mui/system/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nimport { styled } from '../zero-styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport switchClasses, { getSwitchUtilityClass } from './switchClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    edge,\n    size,\n    color,\n    checked,\n    disabled\n  } = ownerState;\n  const slots = {\n    root: ['root', edge && `edge${capitalize(edge)}`, `size${capitalize(size)}`],\n    switchBase: ['switchBase', `color${capitalize(color)}`, checked && 'checked', disabled && 'disabled'],\n    thumb: ['thumb'],\n    track: ['track'],\n    input: ['input']\n  };\n  const composedClasses = composeClasses(slots, getSwitchUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst SwitchRoot = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.edge && styles[`edge${capitalize(ownerState.edge)}`], styles[`size${capitalize(ownerState.size)}`]];\n  }\n})({\n  display: 'inline-flex',\n  width: 34 + 12 * 2,\n  height: 14 + 12 * 2,\n  overflow: 'hidden',\n  padding: 12,\n  boxSizing: 'border-box',\n  position: 'relative',\n  flexShrink: 0,\n  zIndex: 0,\n  // Reset the stacking context.\n  verticalAlign: 'middle',\n  // For correct alignment with the text.\n  '@media print': {\n    colorAdjust: 'exact'\n  },\n  variants: [{\n    props: {\n      edge: 'start'\n    },\n    style: {\n      marginLeft: -8\n    }\n  }, {\n    props: {\n      edge: 'end'\n    },\n    style: {\n      marginRight: -8\n    }\n  }, {\n    props: {\n      size: 'small'\n    },\n    style: {\n      width: 40,\n      height: 24,\n      padding: 7,\n      [`& .${switchClasses.thumb}`]: {\n        width: 16,\n        height: 16\n      },\n      [`& .${switchClasses.switchBase}`]: {\n        padding: 4,\n        [`&.${switchClasses.checked}`]: {\n          transform: 'translateX(16px)'\n        }\n      }\n    }\n  }]\n});\nconst SwitchSwitchBase = styled(SwitchBase, {\n  name: 'MuiSwitch',\n  slot: 'SwitchBase',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.switchBase, {\n      [`& .${switchClasses.input}`]: styles.input\n    }, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme\n}) => ({\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  zIndex: 1,\n  // Render above the focus ripple.\n  color: theme.vars ? theme.vars.palette.Switch.defaultColor : `${theme.palette.mode === 'light' ? theme.palette.common.white : theme.palette.grey[300]}`,\n  transition: theme.transitions.create(['left', 'transform'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  [`&.${switchClasses.checked}`]: {\n    transform: 'translateX(20px)'\n  },\n  [`&.${switchClasses.disabled}`]: {\n    color: theme.vars ? theme.vars.palette.Switch.defaultDisabledColor : `${theme.palette.mode === 'light' ? theme.palette.grey[100] : theme.palette.grey[600]}`\n  },\n  [`&.${switchClasses.checked} + .${switchClasses.track}`]: {\n    opacity: 0.5\n  },\n  [`&.${switchClasses.disabled} + .${switchClasses.track}`]: {\n    opacity: theme.vars ? theme.vars.opacity.switchTrackDisabled : `${theme.palette.mode === 'light' ? 0.12 : 0.2}`\n  },\n  [`& .${switchClasses.input}`]: {\n    left: '-100%',\n    width: '300%'\n  }\n}), ({\n  theme\n}) => ({\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.activeChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.action.active, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  },\n  variants: [...Object.entries(theme.palette).filter(([, value]) => value.main && value.light) // check all the used fields in the style below\n  .map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      [`&.${switchClasses.checked}`]: {\n        color: (theme.vars || theme).palette[color].main,\n        '&:hover': {\n          backgroundColor: theme.vars ? `rgba(${theme.vars.palette[color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette[color].main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        },\n        [`&.${switchClasses.disabled}`]: {\n          color: theme.vars ? theme.vars.palette.Switch[`${color}DisabledColor`] : `${theme.palette.mode === 'light' ? lighten(theme.palette[color].main, 0.62) : darken(theme.palette[color].main, 0.55)}`\n        }\n      },\n      [`&.${switchClasses.checked} + .${switchClasses.track}`]: {\n        backgroundColor: (theme.vars || theme).palette[color].main\n      }\n    }\n  }))]\n}));\nconst SwitchTrack = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Track',\n  overridesResolver: (props, styles) => styles.track\n})(({\n  theme\n}) => ({\n  height: '100%',\n  width: '100%',\n  borderRadius: 14 / 2,\n  zIndex: -1,\n  transition: theme.transitions.create(['opacity', 'background-color'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  backgroundColor: theme.vars ? theme.vars.palette.common.onBackground : `${theme.palette.mode === 'light' ? theme.palette.common.black : theme.palette.common.white}`,\n  opacity: theme.vars ? theme.vars.opacity.switchTrack : `${theme.palette.mode === 'light' ? 0.38 : 0.3}`\n}));\nconst SwitchThumb = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Thumb',\n  overridesResolver: (props, styles) => styles.thumb\n})(({\n  theme\n}) => ({\n  boxShadow: (theme.vars || theme).shadows[1],\n  backgroundColor: 'currentColor',\n  width: 20,\n  height: 20,\n  borderRadius: '50%'\n}));\nconst Switch = /*#__PURE__*/React.forwardRef(function Switch(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiSwitch'\n  });\n  const {\n      className,\n      color = 'primary',\n      edge = false,\n      size = 'medium',\n      sx\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    edge,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  const icon = /*#__PURE__*/_jsx(SwitchThumb, {\n    className: classes.thumb,\n    ownerState: ownerState\n  });\n  return /*#__PURE__*/_jsxs(SwitchRoot, {\n    className: clsx(classes.root, className),\n    sx: sx,\n    ownerState: ownerState,\n    children: [/*#__PURE__*/_jsx(SwitchSwitchBase, _extends({\n      type: \"checkbox\",\n      icon: icon,\n      checkedIcon: icon,\n      ref: ref,\n      ownerState: ownerState\n    }, other, {\n      classes: _extends({}, classes, {\n        root: classes.switchBase\n      })\n    })), /*#__PURE__*/_jsx(SwitchTrack, {\n      className: classes.track,\n      ownerState: ownerState\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense switch styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Switch;","// extracted by mini-css-extract-plugin\nexport default {\"horizontal\":\"style_horizontal__wW0pI\"};","import React from 'react';\n\nimport { Switch, Typography } from '@mui/material';\nimport style from './style.module.css';\n\n// Render a switch with a label on each side\nconst DoubleSideSwitch = ({ firstLabel, secondLabel, isFirst, onChange }) => \n    <div className={style.horizontal}>\n        <Typography color={isFirst ? null : \"textSecondary\"} variant=\"h6\" >{firstLabel}</Typography>\n        <Switch checked={!isFirst} onChange={onChange} />\n        <Typography color={isFirst ? \"textSecondary\" : null} variant=\"h6\">{secondLabel}</Typography>\n    </div>\n\nexport default DoubleSideSwitch;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"style_container__M9GCG\"};","import React, { useLayoutEffect, useRef, forwardRef } from 'react';\nimport { Card } from '@mui/material';\n\nimport reducedMotion from '../../utils/reduced-motion';\n\nimport style from './style.module.css';\n\nconst KEYFRAMES = { opacity: [0, 1] };\n\nif (!reducedMotion()) {\n  KEYFRAMES.transform = ['translateY(50px)', 'translateY(0)'];\n}\n\nconst ANIMATION_OPTIONS = {\n  fill: 'both',\n  easing: 'cubic-bezier(0, .99, .56, 1.1)',\n  duration: 500,\n};\n\n// Make the card appear and slide softly from down to up when the page is loaded\nconst AnimatedCard = forwardRef(({ overrideComponent, ...props }, ref) => {\n  const containerRef = useRef(null);\n\n  useLayoutEffect(() => {\n    const node = containerRef.current && containerRef.current.firstElementChild;\n    if (!(node && node.animate)) return;\n\n    const index = Array.from(\n      document.querySelectorAll('main section'),\n    ).findIndex(section => node === section);\n\n    const animation = node.animate(KEYFRAMES, {\n      ...ANIMATION_OPTIONS,\n      delay: index * 150,\n    });\n\n    return () => animation.cancel();\n  }, []);\n\n  const Component = overrideComponent ? 'section' : Card;\n\n  return (\n    <div ref={containerRef} className={style.container}>\n      <Component component=\"section\" {...props} ref={ref} />\n    </div>\n  );\n});\n\nexport default AnimatedCard;\n","import React, { lazy, Suspense, useState, useContext, useMemo, useCallback, useEffect } from 'react';\n// Import tools to retrieve data using the API\nimport { BASE_PATH_PROJECTS } from '../../../utils/constants';\nimport useAPI from '../../../hooks/use-api';\n// Import project data\nimport { ProjectCtx } from '../../../contexts';\n// Import MUI components\nimport { CardContent, TextField } from '@mui/material';\n// Import tools to mae a custom color scheme\nimport { ColormakerRegistry } from 'ngl';\nimport { color as d3color, scaleLinear } from 'd3';\n// Import some custom components\nimport Card from '../../../components/animated-card';\nimport ViewerSpawner from '../../../components/viewer-spawner';\nimport Loading from '../../../components/loading';\nimport Selector from 'src/components/selector';\nimport DoubleSideSwitch from 'src/components/double-side-switch';\n// Import auxiliar function\nimport { caluclateAverage, round2cents, add, unique, min, max } from 'src/utils/auxiliar-functions';\n// Import CSS style\nimport style from './style.module.css';\n\nconst Graph = lazy(() =>\n    import(/* webpackChunkName: 'graph' */ '../../../components/graph'),\n);\n\n// Set the color of each residue in the NGL representation\n// WARNING: Grey looks better than white because the background may be white and residues are hard to see\nconst nglColorPlan = ['grey', 'yellow', 'red'];\n\n// Set functions to group a list of object according to one of its properties\nconst groupByDihedral = dihedrals => {\n    const grouped = {};\n    dihedrals.forEach(dihedral => {\n        const current = grouped[dihedral.name];\n        if (current) current.push(dihedral);\n        else grouped[dihedral.name] = [ dihedral ];\n    });\n    return grouped;\n}\nconst groupByResidue = dihedrals => {\n    const grouped = {};\n    dihedrals.forEach(dihedral => {\n        const current = grouped[dihedral.residue.index];\n        if (current) current.push(dihedral);\n        else grouped[dihedral.residue.index] = [ dihedral ];\n    });\n    return grouped;\n}\n\n// Two arrays with indetical atom names should have the same hash (if I am not wrong)\nconst getHash = atomNames => atomNames.sort().join();\n\n// The name how this analysis is tagged in the webpage\n// If no name is provided, the webpage will tag it with the default name\nconst TARGET_DIHEDRALS = new Map([\n    [getHash([\"O3'\", \"P\", \"O5'\", \"C5'\"]), 'alpha'],\n    [getHash([\"P\", \"O5'\", \"C5'\", \"C4'\"]), 'beta'],\n    [getHash([\"O5'\", \"C5'\", \"C4'\", \"C3'\"]), 'gamma'],\n    [getHash([\"C5'\", \"C4'\", \"C3'\", \"O3'\"]), 'delta'],\n    [getHash([\"C4'\", \"C3'\", \"O3'\", \"P\"]), 'epsilon'],\n    [getHash([\"C3'\", \"O3'\", \"P\", \"O5'\"]), 'zeta'],\n    [getHash([\"C1'\", \"C2'\", \"C3'\", \"C4'\"]), 'nu2'],\n    [getHash([\"O4'\", \"C1'\", \"N9\", \"C8\"]), 'chi'], // For purines\n    [getHash([\"O4'\", \"C1'\", \"N1\", \"C6\"]), 'chi'], // For pyrimidines\n]);\nconst AVAILABLE_TARGET_DIHEDRALS = Array.from(new Set(TARGET_DIHEDRALS.values()));\n\n// For each dihedral, set the name of the atom we take as reference to tell which is its residue\n// Note that we always use the second atom\nconst DIHEDRAL_RESIDUE_ATOM_REFERENCE = {\n    alpha: \"P\",\n    beta: \"O5'\",\n    gamma: \"C5'\",\n    delta: \"C4'\",\n    epsilon: \"C3'\",\n    zeta: \"O3'\",\n    nu2: \"C2'\",\n    chi: \"C1'\"\n}\n\nconst DihedralEnergies = () => {\n    // Get the current project data\n    const { accessionAndMdNumber, topology } = useContext(ProjectCtx);\n    // Send a request to the API with the url of some specific energies analysis\n    const url = `${BASE_PATH_PROJECTS}/${accessionAndMdNumber}/analyses/dihenergies`;\n    const { loading, payload, error } = useAPI(url);\n    // Classify dihedrals according to their name\n    // Then normalize non-bonded energies per dihedral group\n    const { dihedralsData, targetChains } = useMemo(() => {\n        // Wait for data to be downloaded\n        if (!payload || !topology) return {};\n        // Set an empty list for every dihedral type\n        const dihedralsData = [];\n        AVAILABLE_TARGET_DIHEDRALS.forEach(dihedralName => dihedralsData[dihedralName] = []);\n        // Iterate dihedrals in data and classify them\n        payload.forEach(dihedralData => {\n            // Make a shallow copy of dihedral data to avoid mutating the original payload\n            const dihedral = { ...dihedralData };\n            // Find the name of the dihedral according to its atom names\n            const atoms = dihedral.indices.map(index => topology.getAtomByIndex(index));\n            const atomNames = getHash(atoms.map(atom => atom.name));\n            const dihedralName = TARGET_DIHEDRALS.get(atomNames);\n            // If this is not one of our target dihedrals then ignore it\n            if (!dihedralName) return;\n            dihedral.name = dihedralName;\n            // Find the residue this dihedral belongs to\n            const referenceAtomName = DIHEDRAL_RESIDUE_ATOM_REFERENCE[dihedralName];\n            const referenceAtom = atoms.find(atom => atom.name === referenceAtomName);\n            dihedral.residue = referenceAtom.residue;\n            // Set the dihedral label according to its residue\n            dihedral.label = `${dihedral.residue.standardLabel} ${dihedralName}`;\n            // Normalize a few values\n            dihedral.normee = dihedral.ee ? dihedral.ee : 0;\n            dihedral.normvdw = dihedral.vdw ? dihedral.vdw : 0;\n            dihedral.total = dihedral.torsion + dihedral.normee + dihedral.normvdw\n            dihedralsData.push(dihedral);\n        });\n        // Get chain indices for chains with target dihedrals\n        const targetChains = unique(dihedralsData.map(dihedral => dihedral.residue.chain.name));\n        return { dihedralsData, targetChains };\n    }, [payload, topology]);\n\n    // Set the index of the chain whose data is to be displayed\n    const [selectedChain, setSelectedChain] = useState(null);\n    // Handle when a new chain is set\n    const handleChangeChain = useCallback(newValue => {\n        const chainIndex = topology.chainNames.indexOf(newValue);\n        setSelectedChain(chainIndex);\n        setSelectedX(null);\n    }, [topology]);\n    // Set the selected chain as the first target chain as soon as we know the available target chains\n    useEffect(() => {\n        if (!targetChains) return;\n        handleChangeChain(targetChains[0]);\n    }, [targetChains])\n\n    // Set the dihedral name/type whose data is to be displayed\n    const [selectedDihedral, setSelectedDihedral] = useState('alpha');\n    // Handle when the selected dihedral changes\n    const handleChangeDihedral = useCallback(newValue => {\n        setSelectedDihedral(newValue);\n        setSelectedX(null);\n    }, []);\n    // This is a toggle state for when data is displayed per atom or per residue\n    const [perResidue, setPerResidue] = useState(false);\n    // Handle when the per residue / per dihedral switch changes\n    const handleTogglePerResidue = useCallback(() => {\n        setPerResidue(previous => !previous);\n        setSelectedX(null);\n    }, []);\n    // Set selected data according to the selected dihedral or if it is to be sroted by residue\n    const {\n        selectedData,\n        summaryData,\n        torsionData,\n        eeData,\n        vdwData,\n        totalData,\n        xAxisValues,\n        xTooltip,\n        colorScheme\n    } = useMemo(() => {\n        // Wait for data to be downloaded and processed\n        if (!dihedralsData || selectedChain === null) return {};\n        // Filter away data which do not belong to the selected chain\n        const filteredData = dihedralsData.filter(dihedral =>\n            dihedral.residue.chainIndex === selectedChain);\n        // Group data according to user parameters\n        const groupedData = perResidue\n            ? groupByResidue(filteredData)\n            : groupByDihedral(filteredData);\n        // Set selected data according to user parameters\n        const selectedData = perResidue\n            ? Object.values(groupedData).map(dihedralGroup => {\n                // Get the residue label from a sample dihedral from the group\n                const residue = dihedralGroup[0].residue;\n                // Dihedrals must be joined by residue\n                return {\n                    residue: residue,\n                    label: residue.standardLabel,\n                    torsion: add(dihedralGroup.map(dihedral => dihedral.torsion)),\n                    normee: add(dihedralGroup.map(dihedral => dihedral.normee)),\n                    normvdw: add(dihedralGroup.map(dihedral => dihedral.normvdw)),\n                    total: add(dihedralGroup.map(dihedral => dihedral.total)),\n                } })\n            : groupedData[selectedDihedral];\n        // Set summary data\n        // This is data to be shown in the summary table\n        // Make an average of all values for every energy\n        // Note that in nu2 all electrostatic and Van Der Waals values are expected to be null\n        const torsionAverage = caluclateAverage(selectedData.map(dihedral => dihedral.torsion));\n        const eeAverage = caluclateAverage(selectedData.map(dihedral => dihedral.normee));\n        const vdwAverage = caluclateAverage(selectedData.map(dihedral => dihedral.normvdw));\n        const totalAverage = caluclateAverage(selectedData.map(dihedral => dihedral.total));\n        const summaryData = {\n            torsion: round2cents(torsionAverage) + ' kcal/mol',\n            ee: round2cents(eeAverage) + ' kcal/mol',\n            vdw: round2cents(vdwAverage) + ' kcal/mol',\n            total: round2cents(totalAverage) + ' kcal/mol',\n        }\n        // Now prepare graph data\n        // Set the dataset for each graph\n        const torsionData = {\n            torsion: { data: selectedData.map(dihedral => dihedral.torsion), color: 'black' },\n        };\n        const eeData = {\n            ee: { data: selectedData.map(dihedral => dihedral.normee), color: 'black' },\n        };\n        const vdwData = {\n            vdw: { data: selectedData.map(dihedral => dihedral.normvdw), color: 'black' },\n        };\n        const totalValues = selectedData.map(dihedral => dihedral.total);\n        const totalData = {\n            total: { data: totalValues, color: 'black' },\n        };\n        // Set x axes values\n        const xAxisValues = selectedData.map(dihedral => dihedral.label);\n        // Set the tooltip generator for the graph hover\n        const grouper = perResidue ? 'residue' : 'dihedral'\n        const xTooltip = (_, xIndex) =>\n            `${grouper} ${(xAxisValues[xIndex]) || xIndex}`;\n        // Save data per residue index so it is retrieved faster\n        // Note that selected data should never have more than one entry with the same residue index\n        // No matter if data is grouped by residue or by dihedral\n        const dataPerResidueIndex = {};\n        selectedData.forEach(data => dataPerResidueIndex[data.residue.index] = data.total);\n        // Set the color scale according to the maximum and minimum values\n        const minValue = min(totalValues);\n        const maxValue = max(totalValues);\n        const nglColorScale = scaleLinear()\n            .range(nglColorPlan)\n            .domain([minValue, (minValue + maxValue) / 2, maxValue]);\n        // Set each residue color in the ngl representation according to the color scale\n        // WARNING: Grey looks better than white because the background may be white\n        const colorScheme = ColormakerRegistry.addScheme(function(params) {\n            this.atomColor = atom => {\n            // Find the residue index and then the mean rmsd for this residue\n            const residueIndex = atom.residueIndex;\n            const value = dataPerResidueIndex[residueIndex];\n            // If there is no data for this residue then paint it white\n            if (value === undefined) return 16777215;\n            // Calculate the interpolated rgb for this value\n            // The interpolated color comes in rbg format\n            const hexColor = d3color(nglColorScale(value)).formatHex();\n            // The color interpolation returns a string like '#000000'\n            // We remove the first character ('#') and parse it to integer from hexadecimal\n            const color = parseInt(hexColor.substring(1), 16);\n            return color;\n            };\n        });\n        return {\n            selectedData,\n            summaryData,\n            torsionData,\n            eeData,\n            vdwData,\n            totalData,\n            xAxisValues,\n            xTooltip,\n            colorScheme\n        };\n    }, [selectedChain, dihedralsData, selectedDihedral, perResidue]);\n\n    // Get the default representations\n    const defaultRepresentations = topology && topology.defaultRepresentations;;\n    // Define the representations to be displayed in the viewer\n    const [ representations, setRepresentations ] = useState(null);\n\n    // Set the representations for the viewer\n    // Set a custom color scheme painting residues by their accumulated dihedral energy\n    useEffect(() => {\n        // Wait for topology and default representations to be ready\n        if (!topology || !defaultRepresentations) return;\n        // Set the custom representation\n        const selectedChainName = topology.chainNames[selectedChain];\n        const nglChainSelection = ':' + selectedChainName;\n        const customRepresentations = [\n            {\n                name: 'Dihedral energies',\n                selection: nglChainSelection,\n                color: 'custom',\n                customScheme: colorScheme,\n                reference: 'dihen_color'\n            },\n            {\n                name: 'Reference',\n                selection: 'not ' + nglChainSelection,\n                type: 'licorice',\n                color: 'element',\n                opacity: 0.2,\n                reference: 'dihen_ref'\n            }\n        ]\n        // Setup every representation or update the already existing ones\n        setRepresentations(previousRepresentations => {\n            // Set the list of the rest of representations besides our custom one\n            const restingRepresentations = previousRepresentations === null\n                ? defaultRepresentations\n                : previousRepresentations.filter(rep => {\n                    rep.reference && rep.reference.substr(0,5) !== 'dihen'\n                });\n            // Return new representations\n            return [\n                ...customRepresentations,\n                ...restingRepresentations\n            ]\n        });\n        \n    }, [topology, defaultRepresentations, selectedChain, colorScheme])\n\n    // Track when one point in the graph is selected\n    const [selectedX, setSelectedX] = useState(null);\n\n    // Memoize the marks\n    const marks = useMemo(() => {\n        if (selectedX === null) return [];\n        const selectedMark = {\n            x: selectedX,\n            attr: { fill: '#c8c8c8' },\n        };\n        return [selectedMark];\n    }, [selectedX]);\n\n    // Set a callback to reset the X selection whenever the viewer is closed or nail\n    const resetX = useCallback(viewer =>\n        setSelectedX(previous => {\n            if (viewer && viewer.selectedX === previous)\n            return null;\n            else return previous;\n        }), []);\n\n    if (!topology) return <Loading />;\n\n    if (error) return error.toString();\n    if (loading) return <Loading />;\n    if (!payload) return 'Something bad happened';\n\n    // Render\n    return (<Suspense fallback={<Loading />}>\n        <Card className={style.card}>\n            <div className={style.horizontal}>\n                <Selector\n                    label={'Chain'}\n                    options={targetChains}\n                    selection={topology.chainNames[selectedChain]}\n                    setter={handleChangeChain}\n                />\n                <Selector\n                    label={'Dihedral'}\n                    options={AVAILABLE_TARGET_DIHEDRALS}\n                    selection={selectedDihedral}\n                    setter={handleChangeDihedral}\n                    disabled={perResidue}\n                />\n                <DoubleSideSwitch\n                    firstLabel={'Per dihedral'}\n                    secondLabel={'Per residue'}\n                    isFirst={!perResidue}\n                    onChange={handleTogglePerResidue}\n                />\n            </div>\n            <CardContent className={style.horizontal}>\n                {!summaryData ? null : (<CardContent>\n                <legend className={style['margined-bottom']}>Energy averages</legend>\n                <TextField\n                    className={style['text-field']}\n                    label=\"Torsion\"\n                    title=\"Average torsion energy\"\n                    value={summaryData.torsion}\n                />\n                <TextField\n                    className={style['text-field']}\n                    label=\"Electrostatic\"\n                    title=\"Average electorstatic energy\"\n                    value={summaryData.ee}\n                />\n                <TextField\n                    className={style['text-field']}\n                    label=\"Van Der Waals\"\n                    title=\"Average Van Der Waals energy\"\n                    value={summaryData.vdw}\n                />\n                <TextField\n                    className={style['text-field']}\n                    label=\"Total\"\n                    title=\"Average total energy\"\n                    value={summaryData.total}\n                />\n                </CardContent>)}\n            </CardContent>\n            <CardContent>\n                <Graph\n                    yData={torsionData}\n                    xAxisValues={xAxisValues}\n                    xTooltip={xTooltip}\n                    title={'Torsions'}\n                    yAxisLabel={'Energy (kcal/mol)'}\n                    onSelect={setSelectedX}\n                    fullPrecision\n                    marks={marks}\n                />\n                <Graph\n                    yData={eeData}\n                    xAxisValues={xAxisValues}\n                    xTooltip={xTooltip}\n                    title={'Electrostatic'}\n                    yAxisLabel={'Energy (kcal/mol)'}\n                    onSelect={setSelectedX}\n                    fullPrecision\n                    marks={marks}\n                />\n                <Graph\n                    yData={vdwData}\n                    xAxisValues={xAxisValues}\n                    xTooltip={xTooltip}\n                    title={'Van Der Waals'}\n                    yAxisLabel={'Energy (kcal/mol)'}\n                    onSelect={setSelectedX}\n                    fullPrecision\n                    marks={marks}\n                />\n                <Graph\n                    yData={totalData}\n                    xAxisValues={xAxisValues}\n                    xTooltip={xTooltip}\n                    title={'Total'}\n                    yAxisLabel={'Energy (kcal/mol)'}\n                    onSelect={setSelectedX}\n                    fullPrecision\n                    marks={marks}\n                />\n            </CardContent>\n        </Card>\n        <ViewerSpawner\n            // Set the new viewer or null if there is not a proper \"selectedResidueIndices\" value\n            newViewer={selectedX\n            ? {\n                selectedResidueIndices: [ selectedData[selectedX].residue.index ],\n                representationsState: [ representations, setRepresentations ],\n                // Just for further reference\n                selectedX\n                }\n            : null\n            }\n            // If the nailed/closed viewer is the current viewer then reset the 'selectedX'\n            onNail={resetX}\n            onClose={resetX}\n        />\n    </Suspense>);\n};\n\nexport default DihedralEnergies;\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"style_card__bFecw\",\"horizontal\":\"style_horizontal__ZYIg8\",\"text-field\":\"style_text-field__CSo-z\",\"margined-bottom\":\"style_margined-bottom__kI93T\",\"disabled\":\"style_disabled__kJ0uc\"};","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getSwitchBaseUtilityClass(slot) {\n  return generateUtilityClass('PrivateSwitchBase', slot);\n}\nconst switchBaseClasses = generateUtilityClasses('PrivateSwitchBase', ['root', 'checked', 'disabled', 'input', 'edgeStart', 'edgeEnd']);\nexport default switchBaseClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"checked\", \"checkedIcon\", \"className\", \"defaultChecked\", \"disabled\", \"disableFocusRipple\", \"edge\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from '../utils/capitalize';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport ButtonBase from '../ButtonBase';\nimport { getSwitchBaseUtilityClass } from './switchBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    checked,\n    disabled,\n    edge\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && `edge${capitalize(edge)}`],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\nconst SwitchBaseRoot = styled(ButtonBase, {\n  name: 'MuiSwitchBase'\n})(({\n  ownerState\n}) => _extends({\n  padding: 9,\n  borderRadius: '50%'\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}));\nconst SwitchBaseInput = styled('input', {\n  name: 'MuiSwitchBase',\n  shouldForwardProp: rootShouldForwardProp\n})({\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n\n/**\n * @ignore - internal component.\n */\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n      autoFocus,\n      checked: checkedProp,\n      checkedIcon,\n      className,\n      defaultChecked,\n      disabled: disabledProp,\n      disableFocusRipple = false,\n      edge = false,\n      icon,\n      id,\n      inputProps,\n      inputRef,\n      name,\n      onBlur,\n      onChange,\n      onFocus,\n      readOnly,\n      required = false,\n      tabIndex,\n      type,\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n    if (onChange) {\n      // TODO v6: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n  let disabled = disabledProp;\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    disableFocusRipple,\n    edge\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SwitchBaseRoot, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SwitchBaseInput, _extends({\n      autoFocus: autoFocus,\n      checked: checkedProp,\n      defaultChecked: defaultChecked,\n      className: classes.input,\n      disabled: disabled,\n      id: hasLabelFor ? id : undefined,\n      name: name,\n      onChange: handleInputChange,\n      readOnly: readOnly,\n      ref: inputRef,\n      required: required,\n      ownerState: ownerState,\n      tabIndex: tabIndex,\n      type: type\n    }, type === 'checkbox' && value === undefined ? {} : {\n      value\n    }, inputProps)), checked ? checkedIcon : icon]\n  }));\n});\n\n// NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;","// extracted by mini-css-extract-plugin\nexport default {\"rnd\":\"style_rnd__Txifm\",\"floating-card\":\"style_floating-card__HHpby\"};","import React, { lazy, Suspense, useRef, useState } from 'react';\n\n// Rnd is the resizable and draggable system where the ngl viewer is placed\nimport { Rnd } from 'react-rnd';\n\nimport Card from '../animated-card';\n\nimport style from './style.module.css';\n\nconst ViewerWithControls = lazy(() =>\n  import(\n    /* webpackChunkName: 'viewer-with-controls' */ '../viewer-with-controls'\n  ),\n);\n\n// Minimal ngl window height\nconst MIN_NGL_DIMENSION = 150;\n\n// Counter to get always the maximum zIndex\n// This is useful to set a new or currently dragged/resized ngl window over the others\nlet maxZ = 0;\nconst nextZ = () => {\n  maxZ += 1;\n  return maxZ;\n};\n\n// This function spawns all the NGL viewers needed\n// i.e. one viewer with the requested 'props' and all previous viewers which have been nailed\nconst ViewerSpawner = ({ newViewer, nailing = true, onNail, onClose }) => {\n  // Store here all nailed NGL viewers\n  const [nailedViewers, setNailedViewers] = useState([]);\n\n  // Set the viewers as the nailed viewers and the new viewer\n  const viewers = [...nailedViewers];\n\n  // Keep listed all arrays which have been used (i.e. ngl viewers which have been nailed or closed)\n  const usedIds = useRef([]);\n\n  if (newViewer) {\n    // Find a new suitable Id that meet 2 conditions:\n    // - There is never 2 viewers with the same id, so we avoid errors\n    // - If we pick diferent frames in the graph without nailing anything, the current viewer has always the same id\n    // (This way the current viewer does not appear in the origin position every time)\n    const getNewId = () => {\n      let id = 0;\n      while (id < 999) {\n        if (usedIds.current.indexOf(id) === -1) return id;\n        id += 1;\n      }\n      console.error('Maximum number of viewers reached');\n    };\n\n    // Set a unique id for this props based in the last nailed viewer\n    newViewer.id = getNewId();\n    newViewer.close = () => {\n      if (nailing) {\n        setNailedViewers(nailed => {\n          const newNailed = [...nailed];\n          const index = nailed.indexOf(newViewer);\n          if (index !== -1) newNailed.splice(index, 1);\n          return newNailed;\n        });\n      }\n      if (onClose) onClose(newViewer);\n      usedIds.current.push(newViewer.id);\n    };\n    // If the nailer function is passed, add the logic for the viewer to be nailed further\n    if (nailing)\n      newViewer.nail = () => {\n        setNailedViewers(nailed => [...nailed, newViewer]);\n        if (onNail) onNail(newViewer);\n        usedIds.current.push(newViewer.id);\n      };\n    // Add the current viewer to the viewers list\n    viewers.push(newViewer);\n  }\n\n  // Render a viewer for each prop. Use the 'selected' parameter as unique id\n  return viewers.map(viewer => <NGLViewerInDND key={viewer.id} {...viewer} />);\n};\n\n// This component render a small NGL viewer\n// It is called when user clicks in a point in the projections component\n// Also it is called by the generic analysis page\nconst NGLViewerInDND = props => {\n  // Set a reference for the viewer\n  // If a reference is passed among the viewer arguments then use it instead\n  const viewerRef = props.viewerRef || useRef(null);\n\n  // Set the default position and size\n  const [place, setPlace] = useState(() => {\n    // Set an extra margin\n    const MARGIN = 20;\n    // Get the screen pixel sizes and vertical scroll position\n    const { innerWidth, innerHeight, scrollY } = window;\n    // The spawned elements are parented to the 'main' element, not to the 'body'\n    // We have to take this in count, since the header adds an extra offset in vertical position\n    const offsetHeight = document.querySelector('main').offsetTop;\n    // Set a reasonable dimension for the ngl window\n    const dimension = Math.max(\n      Math.min(innerWidth / 4, innerHeight / 4),\n      MIN_NGL_DIMENSION,\n    );\n    const reasonableHeight = 1.5 * dimension;\n    const reasonableWidth = 2 * dimension;\n    return {\n      // WARNING: If you set the width as 'auto' the window stays very wide when exiting fullscreen\n      width: reasonableWidth, // Let the Rnd logic set the width automatically\n      height: reasonableHeight, // Reasonable height\n      x: 0, // Left border\n      y: innerHeight - offsetHeight - reasonableHeight - MARGIN + scrollY, // Bottom border\n    };\n  });\n\n  return (\n    // Rnd is the draggable and resizable system where the ngl viewer is placed\n    <Rnd\n      position={{ x: place.x, y: place.y }}\n      size={{ width: place.width, height: place.height }}\n      // Update the zIndex to make this window the first visible\n      style={{ zIndex: nextZ() }}\n      className={style.rnd}\n      data-rnd\n      // Limits where the window can be dragged/resized to\n      // WARNING: bounds=\"main\" is problematic since the window may appear out of bounds\n      // WARNING: Then when it is moved for the first time it jumps inside the bonds, not elegant\n      bounds=\"window\"\n      // Prevent the mouse to drag/resize the window when it is over specific elements\n      cancel=\"canvas, [data-popover], #preventDragSize, .prevent-drag\"\n      // On drag/resize starts we do not change anything, but use the hook to re-render this component\n      // The Z Index is updated and the selected window becomes the first in the z axis automatically\n      // WARNING: Drag functions are also called when you just click (e.g. clicking buttons)\n      onDragStart={() => {\n        setPlace({ ...place });\n      }}\n      onResizeStart={() => {\n        setPlace({ ...place });\n      }}\n      onDragStop={(e, d) => {\n        // Use this to reject some bugged event calls: e.g. the frames number selector\n        if (e.layerX === 0 && e.layerY === 0) return;\n        // We re-render only if the new position does not equal the old position\n        if (place.x !== d.x || place.y !== d.y)\n          setPlace({\n            ...place,\n            x: d.x,\n            y: d.y,\n          });\n      }}\n      // Re-adapt the viewer and update the position/size when the window is resized\n      onResize={() => viewerRef.current && viewerRef.current.autoResize()}\n      onResizeStop={(e, direction, ref, delta, position) => {\n        setPlace({\n          width: ref.style.width,\n          height: ref.style.height,\n          ...position,\n        });\n        // if (!viewerRef.current) return;\n        // viewerRef.current.autoResize();\n        // viewerRef.current.autoResize.flush();\n      }}\n    >\n      <Card className={style['floating-card']} elevation={4}>\n        <Suspense fallback={null}>\n          <ViewerWithControls\n            className={style['floating-card']}\n            ref={viewerRef}\n            startsPlaying={false}\n            {...props}\n          />\n        </Suspense>\n      </Card>\n    </Rnd>\n  );\n};\n\nexport default ViewerSpawner;\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"style_content__eXhNP\",\"horizontal-margined\":\"style_horizontal-margined__w4tJp\"};","import React from 'react';\n\nimport { Card, CardContent, MenuItem, Select, Typography } from '@mui/material';\n\nimport style from './style.module.css';\n\nconst Selector = ({ label, options, selection, setter, disabled }) => {\n  // Make sure we have the mandatory parameters\n  if (!options) return 'Missing options argument';\n  if (!selection) return 'Missing selection argument';\n  if (!setter) return 'Missing setter argument';\n  // Handle when interactions change\n  const changeSelection = event => { setter(event.target.value) };\n  // Render the component\n  return (\n    <CardContent className={style.content}>\n      {label && (\n        <Typography variant=\"h5\">\n          {label}\n        </Typography>\n      )}\n      <Select\n        value={selection}\n        onChange={changeSelection}\n        className={style['horizontal-margined']}\n        disabled={disabled}\n      >\n        {options.map((option, i) => (\n          <MenuItem key={i} value={option}>\n            {option}\n          </MenuItem>\n        ))}\n      </Select>\n    </CardContent>\n  );\n};\n\nexport default Selector;\n"],"names":["getSwitchUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","SwitchRoot","styled","name","overridesResolver","props","styles","ownerState","root","edge","capitalize","size","display","width","height","overflow","padding","boxSizing","position","flexShrink","zIndex","verticalAlign","colorAdjust","variants","style","marginLeft","marginRight","switchClasses","thumb","switchBase","checked","transform","SwitchSwitchBase","SwitchBase","input","color","_ref","theme","top","left","vars","palette","Switch","defaultColor","mode","common","white","grey","transition","transitions","create","duration","shortest","disabled","defaultDisabledColor","track","opacity","switchTrackDisabled","_ref2","backgroundColor","action","activeChannel","hoverOpacity","alpha","active","Object","entries","filter","_ref3","value","main","light","map","_ref4","mainChannel","lighten","darken","SwitchTrack","_ref5","borderRadius","onBackground","black","switchTrack","SwitchThumb","_ref6","boxShadow","shadows","React","inProps","ref","useDefaultProps","className","sx","other","_objectWithoutPropertiesLoose","_extends","classes","slots","composedClasses","composeClasses","useUtilityClasses","icon","_jsx","_jsxs","clsx","children","type","checkedIcon","firstLabel","secondLabel","isFirst","onChange","Typography","variant","KEYFRAMES","reducedMotion","ANIMATION_OPTIONS","fill","easing","forwardRef","overrideComponent","containerRef","useRef","useLayoutEffect","node","current","firstElementChild","animate","index","Array","from","document","querySelectorAll","findIndex","section","animation","delay","cancel","Component","Card","component","Graph","lazy","nglColorPlan","getHash","atomNames","sort","join","TARGET_DIHEDRALS","Map","AVAILABLE_TARGET_DIHEDRALS","Set","values","DIHEDRAL_RESIDUE_ATOM_REFERENCE","beta","gamma","delta","epsilon","zeta","nu2","chi","DihedralEnergies","accessionAndMdNumber","topology","useContext","ProjectCtx","url","BASE_PATH_PROJECTS","loading","payload","error","useAPI","dihedralsData","targetChains","useMemo","forEach","dihedralName","dihedralData","dihedral","atoms","indices","getAtomByIndex","atom","get","referenceAtomName","referenceAtom","find","residue","label","standardLabel","normee","ee","normvdw","vdw","total","torsion","push","unique","chain","selectedChain","setSelectedChain","useState","handleChangeChain","useCallback","newValue","chainIndex","chainNames","indexOf","setSelectedX","useEffect","selectedDihedral","setSelectedDihedral","handleChangeDihedral","perResidue","setPerResidue","handleTogglePerResidue","previous","selectedData","summaryData","torsionData","eeData","vdwData","totalData","xAxisValues","xTooltip","colorScheme","filteredData","groupedData","dihedrals","grouped","groupByResidue","groupByDihedral","dihedralGroup","add","torsionAverage","caluclateAverage","eeAverage","vdwAverage","totalAverage","round2cents","data","totalValues","grouper","dataPerResidueIndex","minValue","min","maxValue","max","nglColorScale","scaleLinear","range","domain","ColormakerRegistry","addScheme","params","this","atomColor","residueIndex","undefined","hexColor","d3color","formatHex","parseInt","substring","_","xIndex","defaultRepresentations","representations","setRepresentations","nglChainSelection","customRepresentations","selection","customScheme","reference","previousRepresentations","restingRepresentations","rep","substr","selectedX","marks","x","attr","resetX","viewer","toString","Loading","Suspense","fallback","card","horizontal","Selector","options","setter","DoubleSideSwitch","CardContent","TextField","title","yData","yAxisLabel","onSelect","fullPrecision","ViewerSpawner","newViewer","selectedResidueIndices","representationsState","onNail","onClose","getSwitchBaseUtilityClass","SwitchBaseRoot","ButtonBase","SwitchBaseInput","shouldForwardProp","rootShouldForwardProp","cursor","margin","autoFocus","checkedProp","defaultChecked","disabledProp","disableFocusRipple","id","inputProps","inputRef","onBlur","onFocus","readOnly","required","tabIndex","setCheckedState","useControlled","controlled","default","Boolean","state","muiFormControl","useFormControl","hasLabelFor","centerRipple","focusRipple","role","event","nativeEvent","defaultPrevented","newChecked","target","ViewerWithControls","maxZ","NGLViewerInDND","viewerRef","place","setPlace","innerWidth","innerHeight","scrollY","window","offsetHeight","querySelector","offsetTop","dimension","Math","reasonableHeight","y","Rnd","bounds","onDragStart","onResizeStart","onDragStop","e","d","layerX","layerY","onResize","autoResize","onResizeStop","direction","elevation","startsPlaying","nailing","nailedViewers","setNailedViewers","viewers","usedIds","getNewId","console","close","nailed","newNailed","splice","nail","Select","option","i","MenuItem"],"sourceRoot":""}