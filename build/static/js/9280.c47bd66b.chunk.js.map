{"version":3,"file":"static/js/9280.c47bd66b.chunk.js","mappings":"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","sources":["webpack://mdposit/./src/pages/accession/overview/style.module.css?45c5","webpack://mdposit/./src/components/animated-card/style.module.css?d4d9","components/animated-card/index.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","../node_modules/@mui/material/TableContainer/tableContainerClasses.js","../node_modules/@mui/material/TableContainer/TableContainer.js","../node_modules/@mui/material/CardActions/cardActionsClasses.js","../node_modules/@mui/material/CardActions/CardActions.js","utils/pretty-enumerate/index.js","utils/rdkit/rdkit_load.js","utils/rdkit/rdkit_viewer.js","pages/accession/overview/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"style_card__9TULw\",\"card-content\":\"style_card-content__u-RUX\",\"horizontal-marginned\":\"style_horizontal-marginned__F1cTH\",\"vertcial-marginned\":\"style_vertcial-marginned__AFi23\",\"chip\":\"style_chip__LmEJP\",\"summary-list\":\"style_summary-list__5sQf1\",\"grey\":\"style_grey__aJ5pz\",\"title\":\"style_title__N2SOZ\",\"white-background\":\"style_white-background__KCBRe\",\"highlight\":\"style_highlight__VBCsN\",\"textarea\":\"style_textarea__M9S0p\",\"card-background\":\"style_card-background__M3M84\",\"decorated-list-item__title\":\"style_decorated-list-item__title__nsBvl\",\"decorated-list-item__content\":\"style_decorated-list-item__content__A8FMc\",\"info\":\"style_info__7RITL\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"style_container__M9GCG\"};","import React, { useLayoutEffect, useRef, forwardRef } from 'react';\nimport { Card } from '@mui/material';\n\nimport reducedMotion from '../../utils/reduced-motion';\n\nimport style from './style.module.css';\n\nconst KEYFRAMES = { opacity: [0, 1] };\n\nif (!reducedMotion()) {\n  KEYFRAMES.transform = ['translateY(50px)', 'translateY(0)'];\n}\n\nconst ANIMATION_OPTIONS = {\n  fill: 'both',\n  easing: 'cubic-bezier(0, .99, .56, 1.1)',\n  duration: 500,\n};\n\n// Make the card appear and slide softly from down to up when the page is loaded\nconst AnimatedCard = forwardRef(({ overrideComponent, ...props }, ref) => {\n  const containerRef = useRef(null);\n\n  useLayoutEffect(() => {\n    const node = containerRef.current && containerRef.current.firstElementChild;\n    if (!(node && node.animate)) return;\n\n    const index = Array.from(\n      document.querySelectorAll('main section'),\n    ).findIndex(section => node === section);\n\n    const animation = node.animate(KEYFRAMES, {\n      ...ANIMATION_OPTIONS,\n      delay: index * 150,\n    });\n\n    return () => animation.cancel();\n  }, []);\n\n  const Component = overrideComponent ? 'section' : Card;\n\n  return (\n    <div ref={containerRef} className={style.container}>\n      <Component component=\"section\" {...props} ref={ref} />\n    </div>\n  );\n});\n\nexport default AnimatedCard;\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableContainerUtilityClass(slot) {\n  return generateUtilityClass('MuiTableContainer', slot);\n}\nconst tableContainerClasses = generateUtilityClasses('MuiTableContainer', ['root']);\nexport default tableContainerClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled from '../styles/styled';\nimport { getTableContainerUtilityClass } from './tableContainerClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableContainerUtilityClass, classes);\n};\nconst TableContainerRoot = styled('div', {\n  name: 'MuiTableContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  width: '100%',\n  overflowX: 'auto'\n});\nconst TableContainer = /*#__PURE__*/React.forwardRef(function TableContainer(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTableContainer'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TableContainerRoot, _extends({\n    ref: ref,\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableContainer.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally `Table`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableContainer;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiCardActions', slot);\n}\nconst cardActionsClasses = generateUtilityClasses('MuiCardActions', ['root', 'spacing']);\nexport default cardActionsClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"disableSpacing\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getCardActionsUtilityClass } from './cardActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableSpacing\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getCardActionsUtilityClass, classes);\n};\nconst CardActionsRoot = styled('div', {\n  name: 'MuiCardActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableSpacing && styles.spacing];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8\n}, !ownerState.disableSpacing && {\n  '& > :not(style) ~ :not(style)': {\n    marginLeft: 8\n  }\n}));\nconst CardActions = /*#__PURE__*/React.forwardRef(function CardActions(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardActions'\n  });\n  const {\n      disableSpacing = false,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    disableSpacing\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardActions;","// Given an array of strings, return a single string with the follwoing format:\n// e.g. ['red', 'green', 'blue'] => 'red, green and blue'\n// Handle when the values is a string instead of an array (old values)\nexport const prettyEnumerate = array => {\n    if (typeof array === 'string') return array;\n    if (array.length === 0) return '';\n    if (array.length === 1) return array[0];\n    return `${array.slice(0, array.length - 1).join(', ')} and ${array[array.length - 1]}`;\n}\n\n// Just separte values by semicolons\n// Handle when the values is a string instead of an array (old values)\nexport const rawEnumerate = array => {\n    if (typeof array === 'string') return array;\n    return array.join('; ');\n}","const RDKitHandler = {\n    RDKit: null,\n    async load() {\n      if (this.RDKit) return this.RDKit; // Si ya está cargado, lo devuelve\n  \n      return new Promise((resolve, reject) => {\n        if (window.RDKit) {\n          // Si ya está definido en window, lo usamos\n          this.RDKit = window.RDKit;\n          resolve(window.RDKit);\n          return;\n        }\n  \n        const script = document.createElement(\"script\");\n        script.src = \"https://unpkg.com/@rdkit/rdkit/dist/RDKit_minimal.js\";\n        script.async = true;\n        script.onload = async () => {\n          try {\n            const RDKitModule = await window.initRDKitModule();\n            console.log(\"✅ RDKit cargado:\", RDKitModule.version());\n            this.RDKit = RDKitModule;\n            window.RDKit = RDKitModule; // Guardar en window para evitar recargas\n            resolve(RDKitModule);\n          } catch (error) {\n            console.error(\"❌ Error al inicializar RDKit:\", error);\n            reject(error);\n          }\n        };\n  \n        script.onerror = () => reject(new Error(\"❌ No se pudo cargar el script de RDKit.\"));\n        document.body.appendChild(script);\n      });\n    }\n  };\n  \n  export default RDKitHandler;\n  ","import React, { useState, useEffect, useRef } from \"react\";\nimport RDKitHandler from \"./rdkit_load\";\nimport { Button } from \"molstar/lib/mol-plugin-ui/controls/common\";\nimport { add } from \"lodash-es\";\n\nconst MoleculeViewer = ({ smiles, fingerprintData, mol_block }) => {\n  const [RDKit, setRDKit] = useState(null);\n  const [selectedBit, setSelectedBit] = useState(null);\n  const [highlightAtoms, setHighlightAtoms] = useState([]);\n  const canvasRef = useRef(null); // Referencia para el canvas\n  // Cargar RDKit al montar el componente\n  useEffect(() => {\n    RDKitHandler.load()\n      .then((module) => setRDKit(module))\n      .catch((error) => console.error(\"❌ Error al cargar RDKit:\", error));\n  }, []);\n\n  // Actualizar los átomos resaltados cuando cambia el bit seleccionado\n  useEffect(() => {\n    if (selectedBit !== null && Array.isArray(fingerprintData[selectedBit])) {\n      setHighlightAtoms(fingerprintData[selectedBit]); // ✅ No usar .map()\n    } else {\n      setHighlightAtoms([]);\n    }\n  }, [selectedBit, fingerprintData]);\n  \n  if (!fingerprintData || Object.keys(fingerprintData).length === 0) {\n    return <p>No fingerprint data available</p>;\n  }\n  // style={{ color: \"red\" }}\n\n  // Dibujar la molécula en el canvas\n  useEffect(() => {\n    if (!RDKit || !canvasRef.current) return;\n\n    try {\n      const mol = RDKit.get_mol(mol_block);\n      const canvas = canvasRef.current;\n      // const molBlock = mol.get_molblock();\n      // const mol2 = RDKit.get_mol(molBlock);\n      // console.log(\"mol2:\", mol2);\n      // console.log(\"molBlock:\", molBlock);\n\n      // All the canvas options: https://www.rdkitjs.com/#drawing-molecules-canvas\n      const ctx = canvas.getContext(\"2d\");\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      canvas.width = window.innerWidth;     // equals window dimension\n      canvas.height = window.innerHeight;\n      mol.draw_to_canvas_with_highlights(canvas, JSON.stringify({\n        atoms: highlightAtoms,\n        highlightRadius: 0.6,\n        highlightColor: [1, 0, 0], // Rojo (RGB)\n        addAtomIndices: true,\n        explicitMethyl: true\n      }));\n    } catch (error) {\n      console.error(\"❌ Error al renderizar la molécula:\", error);\n    }\n  }, [RDKit, smiles, highlightAtoms]);\n\n  return (\n    <div style={{  alignItems: \"center\", width: \"100%\" }}>\n      <canvas ref={canvasRef} style={{ width: \"100%\", maxWidth: \"400px\", height: \"auto\" }} />\n      <div style={{ marginTop: \"10px\",  alignItems: \"center\" }}>\n        <label htmlFor=\"fragmentSelector\" style={{ marginBottom: \"5px\" }}>Select a fragment:  </label>\n        <select id=\"fragmentSelector\" onChange={(e) => setSelectedBit(parseInt(e.target.value) || null)} value={selectedBit || \"\"}>\n          <option value=\"\">None</option>\n          {Object.keys(fingerprintData).map((bit) => (\n            <option key={bit} value={bit}>\n              Number {bit}\n            </option>\n          ))}\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default MoleculeViewer;\n","import React, { useContext, useState, useEffect, useRef, useMemo } from 'react';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TablePagination,\n  TextField,\n  Paper,\n  CardContent,\n  CardActions,\n  Button,\n  Typography,\n  Chip,\n} from '@mui/material';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faLink,\n  faExclamationTriangle,\n} from '@fortawesome/free-solid-svg-icons';\nimport { useTheme } from '@mui/material/styles';\nimport  Info  from '../../../components/info';\nimport { docs } from '../../help/documentation';\nimport Card from '../../../components/animated-card';\nimport LazyImg from '../../../components/lazy-img';\n\nimport { prettyEnumerate } from '../../../utils/pretty-enumerate';\n\nimport { ProjectCtx } from '../../../contexts';\nimport https from 'https-browserify';\n\nimport style from './style.module.css';\n\nimport { HOST_CONFIG } from '../../../utils/constants';\nimport MoleculeViewer from 'src/utils/rdkit/rdkit_viewer';\n\nconst COMMA_SEPARATOR = /\\s*,\\s*/;\n\n\nconst LigandTable = ({ ligandReference }) => {\n  if (!ligandReference) return null;\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const mordredData = ligandReference.mordred || {};\n  const rows = Object.entries(mordredData || {}).map(([key, value]) => ({\n    key,\n    value: typeof value === 'number' ? value.toFixed(2) : String(value),\n  }));\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows =\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n\n  const filteredRows = rows.filter(\n    ({key,value}) =>\n      key.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      value.toString().includes(searchTerm)\n  );\n\n  const handleSearch = (event) => {\n    setSearchTerm(event.target.value);\n    setPage(0);\n  };\n\n  const handleChangePage = (_, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return (\n    <Paper \n      sx={{ \n        width: \"auto\", \n        maxWidth: \"400px\", \n        padding: \"10px\", \n        overflow: \"hidden\", \n        boxShadow: \"none\",\n        margin: \"auto\",\n        marginTop: \"0px\",\n        marginBottom: \"10px\",\n        display:\"table\",\n        borderCollapse: \"collapse\"\n      }}\n    >\n      <TextField\n        label=\"Search...\"\n        variant=\"outlined\"\n        fullWidth\n        margin=\"dense\"\n        size=\"small\"\n        value={searchTerm}\n        onChange={handleSearch}\n      />\n      <TableContainer>\n        <Table size=\"small\"> {/* Reduce el tamaño de las filas */}\n          <TableHead>\n            <TableRow>\n              <TableCell sx={{ fontWeight: \"bold\", padding: \"5px\", textAlign: \"center\" }}>Descriptor</TableCell>\n              <TableCell sx={{ fontWeight: \"bold\", padding: \"5px\", textAlign: \"center\" }}>Valor</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {filteredRows.length > 0 ? filteredRows\n              .slice(page * rowsPerPage, (page + 1) * rowsPerPage)\n              .map(({key,value}) => (\n                <TableRow key={key} sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }} >\n                  <TableCell component=\"th\" sx={{ padding: \"5px\", textAlign: \"center\" }}>{key}</TableCell>\n                  <TableCell component=\"th\" sx={{ padding: \"5px\", textAlign: \"center\" }}>{value}</TableCell>\n                </TableRow>\n              ))\n            : null}\n            {emptyRows > 0 && (\n              <TableRow style={{ height: 33 * emptyRows }}>\n                <TableCell colSpan={2} />\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n        component=\"div\"\n        colSpan={3}\n        count={filteredRows.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n        sx={{ fontSize: \"12px\" }}\n        display=\"flex\"\n        //justifyContent=\"center\"\n        //alignItems=\"flex-start\"\n        margin=\"auto\"\n      />\n    </Paper>\n  );\n};\n\nconst Overview = React.memo(() => {\n  const {\n    accession,\n    internalId,\n    identifier,\n    published,\n    metadata,\n    ligandReferences,\n    proteinReferences,\n    pdbReferences,\n    mdCount,\n    node,\n    creationDate,\n    updateDate\n  } = useContext(ProjectCtx);\n  \n  // Define the state and the function to show the table or not for Mordred (ligands)\n  const [showTable, setShowTable] = useState(new Set());\n  const handleSeeMore = pubchemId => {\n    setShowTable((prev) => {\n      const newShowTable = new Set(prev);\n      if (newShowTable.has(pubchemId)) newShowTable.delete(pubchemId);\n      else newShowTable.add(pubchemId);\n      return newShowTable;\n    });\n  };\n\n  // Define the state and the function to show the Morgan Fingerprint array (ligands)\n  const [selectedFP, setSelectedFP] = useState(new Set());\n  const showMorganFPArray = pubchemId => {\n    setSelectedFP((prev) => {\n      const newSelectedFP = new Set(prev);\n      if (newSelectedFP.has(pubchemId)) newSelectedFP.delete(pubchemId);\n      else newSelectedFP.add(pubchemId);\n      return newSelectedFP;\n    });\n  };\n\n  // Create a little button to show the inchi array\n  const InchiViewer = ({ ligandReference }) => {\n    const [expanded, setExpanded] = useState(false);\n    const maxLength = 30;\n    const toggleExpand = () => setExpanded(!expanded);\n    const inchi = ligandReference.inchi;\n    const displayText = expanded ? inchi : `${inchi.substring(0, maxLength)}... `;\n  \n    return (\n      <div>\n        <div>\n          {displayText.split('').map((char, index) => (\n            <span key={index} className=\"highlight\">{char}</span>\n          ))}\n          {inchi.length > maxLength && (\n            <button onClick={toggleExpand} \n            className=\"ml-2 text-blue-500 hover:underline\"\n            //cursor=\"pointer\"\n            style={{\n              padding: '4px 6px',\n              borderRadius: '1.5px',\n              cursor: 'pointer',\n              display: 'inline-block',\n              fontSize: '14px',\n              margin: '2px 4px',\n            }}\n            >\n              {expanded ? 'See less' : 'See more'}\n            </button>\n          )}\n        </div>\n      </div>\n    );\n  };\n  // Get the provided theme\n  const theme = useTheme();\n  const secondaryColor = theme.palette.secondary;\n  const primaryDarkColor = theme.palette.primary.dark;\n  const typeSettings = {\n    trajectory: {\n      label: 'Trajectory',\n      color: theme.palette.secondary.main, // light blue\n    },\n    ensemble: {\n      label: 'Ensemble',\n      color: theme.palette.secondary.dark, // light yellow\n    },\n  };\n  const SmilesViewer = ({ ligandReference }) => {\n    const [expanded, setExpanded] = useState(false);\n    const maxLength = 120;\n    const toggleExpand = () => setExpanded(!expanded);\n    const smiles = ligandReference.smiles;\n    const displayText = expanded ? smiles : `${smiles.substring(0, maxLength)}`;\n\n    return (\n      <div className=\"text-align-center margin-auto max-width-100\">\n        <div className=\"display-inline word-break\">\n          {displayText.split('').map((char, index) => (\n            <span key={index} className=\"highlight\">{char}</span>\n          ))}\n          {smiles.length > maxLength && (\n            <button onClick={toggleExpand} \n            className=\"ml-2 text-blue-500 hover:underline\"\n            //cursor=\"pointer\"\n            style={{\n              padding: '4px 6px',\n              borderRadius: '1.5px',\n              cursor: 'pointer',\n              display: 'inline-block',\n              fontSize: '14px',\n              margin: '2px 4px',\n            }}\n            >\n              {expanded ? 'See less' : 'See more'}\n            </button>\n          )}\n        </div>\n      </div>\n    );\n  };\n  // Set mordred and morgan documentation\n  const mordredDoc = docs.find(doc => doc.id === 'mordred-descriptors');\n  const mordredTooltip = mordredDoc && mordredDoc.page && (\n    <>\n      {mordredDoc.page}\n      <br />\n      <br />\n      To learn more about this page and how data is obtained please{' '}\n      <a\n        href={`/#/help#${mordredDoc.id}`}\n        target=\"_blank\"\n        rel=\"noreferrer noopener\"\n      >\n        {'click here'}\n      </a>\n      .\n    </>\n  );\n  const morganDoc = docs.find(doc => doc.id === 'morgan-fingerprint');\n  const morganTooltip = morganDoc && morganDoc.page && (\n    <>\n      {morganDoc.page}\n      <br />\n      <br />\n      To learn more about this page and how data is obtained please{' '}\n      <a\n        href={`/#/help#${morganDoc.id}`}\n        target=\"_blank\"\n        rel=\"noreferrer noopener\"\n      >\n        {'click here'}\n      </a>\n      .\n    </>\n  );\n\n  const pdbIds = metadata.PDBIDS;\n  // Ask the PDBBind for every PDB code to see if they have an entry for it\n  const [pdbBindInfo, setPdbBindInfo] = useState({});\n  useEffect(() => {\n    if (!pdbIds) return;\n    // Store requests so we can abort them all in the useEffect cleanup function in case they were not completed on time\n    const requests = [];\n    pdbIds.forEach(pdbId => {\n      // Set the target URL\n      // LORE:\n      // We want to check if the PDB code exists or not in PDBBind\n      // Note that the PDBBind API is not fast so just asking for the PDB code takes a while when the PDB code exists\n      // Note that the PDBBind API is not user friendly and not documented so I don't know if there is a better endpoint\n      // I wrote a message to the PDBBing technical support and they answered they did not have an API so...\n      // I found the content endpoint which is a bit faster responding\n      // If the pdb is not found the response is an instant object (still 200)\n      // However if the pdb is found the response is a whole mmCif but the first chunk is fast\n      const url = `https://www.pdbbind-plus.org.cn:11033/api/browser/content?pdbcode=${pdbId}`;\n      const request = https.get(url, response => {\n        response.on('data', chunk => {\n          // Get the first chunk (since there will be no more) and convert it to string\n          const firstChunk = '' + chunk;\n          // If the first characters is '{' then it means this is a JSON, thus the pdb code does not exist\n          // Otherwise the pdb code exists\n          const exists = firstChunk[0] !== '{';\n          setPdbBindInfo(previous => {\n            return { ...previous, [pdbId]: exists };\n          });\n          // Now finish the response since we do not need the rest\n          response.destroy();\n        });\n      });\n      // Add the request to the list\n      requests.push(request);\n    });\n    // DANI: No he comprovado que esto funcione debidamente\n    return () => {\n      for (const request of requests) request.abort();\n    };\n  }, [pdbIds]);\n\n  // Download ligand information for every ligand pubchem id in metadata\n  const pubchemIds = metadata.LIGANDS;\n  const [pubchemInfo, setPubchemInfo] = useState({});\n  useEffect(() => {\n    if (!pubchemIds) return;\n    // Store requests so we can abort them all in the useEffect cleanup function in case they were not completed on time\n    const requests = [];\n    pubchemIds.forEach(pubchemId => {\n      if (typeof pubchemId !== 'string') return;\n      const pubchemAPIurl = `https://pubchem.ncbi.nlm.nih.gov/rest/pug_view/data/compound/${pubchemId}/JSON/`;\n      let body = '';\n      const request = https.get(pubchemAPIurl, response => {\n        response.on('data', chunk => {\n          body += chunk;\n        });\n        response.on('end', () => {\n          // Get the original API response data\n          const sourceData = JSON.parse(body);\n          // Mine all data we want to display\n          const data = {};\n          // First get the ligand name\n          const record =  sourceData.Record;\n          data.name = record.RecordTitle;\n          // If there is a forced name then use add it to the name\n          const forcedLigandName = metadata.LIGANDNAMES && metadata.LIGANDNAMES[pubchemId];\n          if (forcedLigandName && forcedLigandName !== data.name) data.name += ` (${forcedLigandName})`;\n          // Get chembl id and url\n          const reference = record.Reference;\n          const chemblReference = reference.find(ref => ref.SourceName === 'ChEMBL');\n          if (chemblReference) {\n            data.chemblURL = chemblReference.URL;\n            const chemblSplits = chemblReference.URL.split('/');\n            data.chemblID = chemblSplits[chemblSplits.length - 1];\n          }\n          // Get drugbank id and url\n          const drugbankReference = reference.find(ref => ref.SourceName === 'DrugBank');\n          if (drugbankReference) {\n            data.drugbankURL = drugbankReference.URL;\n            const drugbankSplits = drugbankReference.URL.split('/');\n            data.drugbankID = drugbankSplits[drugbankSplits.length - 1];\n          }\n          // Add current ligand data to the overall ligands data object\n          setPubchemInfo(previous => {\n            return { ...previous, [pubchemId]: data };\n          });\n        });\n      });\n      requests.push(request);\n    });\n    // DANI: No he comprovado que esto funcione debidamente\n    return () => {\n      for (const request of requests) request.abort();\n    };\n  }, [pubchemIds]);\n\n  // Parse the citation text\n  // i.e. add break lines, \"elevated\" text, etc.\n  let citation;\n  if (metadata && metadata.CITATION) {\n    // Replace the metadat break lines by proper JSX break lines\n    citation = metadata.CITATION.replace(/\\(br\\)/g, '\\n');\n    // Get all sup characters\n    const pattern = /\\^([\\S\\s])/g;\n    const sups = [];\n    let sup;\n    while ((sup = pattern.exec(metadata.CITATION)) != null) {\n      sups.push(sup[1]);\n    }\n    // Split the citation by 'sups' and remove them\n    const fragments = citation.split(/\\^[\\S\\s]/g);\n    // Foreach sup, join the previous fragment with it\n    const compiled = [];\n    for (const sup in sups) {\n      compiled.push(fragments[sup]);\n      compiled.push(<sup key={sup}>{sups[sup]}</sup>);\n    }\n    compiled.push(fragments[fragments.length - 1]);\n    // Finally, join everything into a single string\n    citation = compiled;\n  }\n\n  return (\n    <>\n      {metadata && (\n        <Card className={style.card}>\n          <CardContent className={style['card-content']}>\n            <a className={style.title}>{metadata.NAME || 'Unnamed'}</a>\n            {mdCount > 1 && metadata.mdName && <a className={style.grey}>({metadata.mdName})</a>}\n            <div className={style['summary-list']}>\n              {metadata.TYPE && (\n                <Chip\n                  label={typeSettings[metadata.TYPE].label}\n                  variant=\"outlined\"\n                  style={{\n                    backgroundColor: typeSettings[metadata.TYPE].color,\n                    color: secondaryColor.contrastText,\n                    fontSize: '1em',\n                    marginRight: '0.8em',\n                  }}\n                  className={style.chip}\n                />\n              )}\n              {metadata.METHOD}\n              {metadata.DESCRIPTION && metadata.DESCRIPTION.length > 0 &&\n              <div style={{ display: 'flex', alignItems: 'center' }}>\n                <div className={style['decorated-list-item__title']}>Description</div>\n                <div className={style['decorated-list-item__content']} style={{  wordBreak: 'break-word', borderLeft: `.110rem solid ${secondaryColor.dark}` }}>\n                  {metadata.DESCRIPTION}\n                </div>\n              </div>}\n              {metadata.AUTHORS && metadata.AUTHORS.length > 0 &&\n              <div style={{ display: 'flex', alignItems: 'center' }}>\n                <div className={style['decorated-list-item__title']}>Authors</div>\n                <div className={style['decorated-list-item__content']} style={{ wordBreak: 'break-word', borderLeft: `.110rem solid ${secondaryColor.dark}` }}>\n                  {prettyEnumerate(metadata.AUTHORS)}\n                </div>\n              </div>}\n              {metadata.GROUPS && metadata.GROUPS.length > 0 &&\n              <div style={{ display: 'flex', alignItems: 'center' }}>\n                <div className={style['decorated-list-item__title']}>Groups</div>\n                <div className={style['decorated-list-item__content']} style={{ wordBreak: 'break-word', borderLeft: `.110rem solid ${secondaryColor.dark}` }}>\n                  {prettyEnumerate(metadata.GROUPS)}\n                </div>\n              </div>}\n              {/* Node will exist only in the global API, and the global client has nodes as options */}\n              {HOST_CONFIG.global && node && \n              <div style={{ display: 'flex', alignItems: 'center' }}>\n                <div className={style['decorated-list-item__title']}>Node</div>\n                <div className={style['decorated-list-item__content']} style={{ wordBreak: 'break-word', borderLeft: `.110rem solid ${secondaryColor.dark}` }}>\n                  {HOST_CONFIG.optionsNiceNames[node] || node}\n                </div>\n              </div>}\n              {metadata.CONTACT && metadata.CONTACT.length > 0 &&\n               <div style={{ display: 'flex', alignItems: 'center' }}>\n                <div className={style['decorated-list-item__title']}>Contact</div>\n                <div className={style['decorated-list-item__content']} style={{ wordBreak: 'break-word', borderLeft: `.110rem solid ${secondaryColor.dark}` }}>\n                  {metadata.CONTACT}\n                </div>\n              </div>}\n              {metadata.PROGRAM && metadata.PROGRAM.length > 0 &&\n              <div style={{ display: 'flex', alignItems: 'center' }}>\n                <div className={style['decorated-list-item__title']}>Program</div>\n                <div className={style['decorated-list-item__content']} style={{ borderLeft: `.110rem solid ${secondaryColor.dark}` }}>\n                  {metadata.PROGRAM}\n                </div>\n              </div>}\n              {metadata.VERSION && metadata.VERSION.length > 0 &&\n              <div style={{ display: 'flex', alignItems: 'center' }}>\n                <div className={style['decorated-list-item__title']}>Version</div>\n                <div className={style['decorated-list-item__content']} style={{ borderLeft: `.110rem solid ${secondaryColor.dark}` }}>\n                  {metadata.VERSION}\n                </div>\n              </div>}\n              {metadata.LINKS && metadata.LINKS.length > 0 &&\n              <div style={{ display: 'flex', alignItems: 'center' }}>\n                <div className={style['decorated-list-item__title']}>Links</div>\n                <div className={style['decorated-list-item__content']} style={{ borderLeft: `.110rem solid ${secondaryColor.dark}` }}>\n                {metadata.LINKS.map((link, l) => (\n                  <div key={l}>\n                    {link.name}:{' '}\n                    <a\n                      href={link.url}\n                      target=\"_blank\"\n                      rel=\"noreferrer noopener\"\n                    >\n                      {link.url}\n                    </a>\n                  </div>\n                ))}\n                </div>\n              </div>}\n              {metadata.WARNINGS &&\n                metadata.WARNINGS.map((warning, w) => (\n                  <div key={w} style={{ fontWeight: 'bold' }}>\n                    <FontAwesomeIcon icon={faExclamationTriangle} size={'lg'} />\n                    {' ' + warning.message}\n                  </div>\n                ))}\n            </div>\n          </CardContent>\n        </Card>\n      )}\n      {metadata && Array.isArray(metadata.NUCLSEQ) && metadata.NUCLSEQ.length > 0 && (\n        <Card className={style.card}>\n          <CardContent className={style['card-content']}>\n          <div>\n              <Typography marginBottom={'10px'} variant=\"h6\">Nucleic Sequences:</Typography>\n              {metadata.NUCLSEQ.map((seq, index) => (\n                <div \n                  key={index} \n                  className={style['card-background']}\n                >\n                <Typography variant=\"h6\" style={{ marginBottom: '5px', marginTop: '10px', fontSize: 'inherit' }}>Sequence {index + 1} (5' -&gt; 3'):</Typography>\n                  <textarea\n                    readOnly\n                    value={seq}\n                    className={style['textarea']}\n                  />\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      )}\n      {metadata && Array.isArray(metadata.PROTSEQ) && metadata.PROTSEQ.length > 0  && (\n        <Card className={style.card}>\n          <CardContent className={style['card-content']}>\n            <div>\n              <Typography marginBottom={'10px'} variant=\"h6\" sx={{ fontSize: '1.4rem' }}>Protein Sequences:</Typography>\n              {metadata.PROTSEQ.map((seq, index) => (\n                <div \n                  key={index} \n                  className={style['card-background']}\n                >\n                <Typography variant=\"h6\" style={{ marginBottom: '5px', marginTop: '10px', fontSize: 'inherit' }} sx={{ fontSize: '1.4rem' }}>Sequence {index + 1}:</Typography>\n                  <textarea\n                    readOnly\n                    value={seq}\n                    className={style['textarea']}\n                  />\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      )}\n      {proteinReferences && proteinReferences.length > 0 && (\n        <Card className={style.card}>\n          <CardContent className={style['horizontal-marginned']}>\n            {proteinReferences.map((reference, i) => (\n              <div key={i}>\n                {i !== 0 && (\n                  <hr style={{ color: 'lightGrey' }} />\n                ) /* An horizontal line to separate references */}\n                <CardContent className={style['vertcial-marginned']}>\n                  <div>\n                    <div className={style['summary-list']}>\n                      <Typography variant=\"h6\" sx={{ fontSize: '1.4rem' }}>{reference.name}</Typography>\n                      <div style={{ display: 'flex', alignItems: 'center' }}>\n                        <div className={style['decorated-list-item__title']}>Gene</div>\n                        <div className={style['decorated-list-item__content']} style={{ borderLeft: `.110rem solid ${secondaryColor.dark}` }}>\n                        {reference.gene && `${reference.gene}`}</div>\n                      </div>\n                      <div style={{ display: 'flex', alignItems: 'center' }}>\n                        <div className={style['decorated-list-item__title']}>Organism</div>\n                        <div className={style['decorated-list-item__content']} style={{ borderLeft: `.110rem solid ${secondaryColor.dark}` }}>\n                          {reference.organism && `${reference.organism}`}\n                        </div>\n                      </div>\n                      <div style={{ display: 'flex', alignItems: 'center' }}>\n                        <div className={style['decorated-list-item__title']}>UniProt ID</div>\n                        <div className={style['decorated-list-item__content']} style={{ borderLeft: `.110rem solid ${secondaryColor.dark}` }}>\n                          {reference.uniprot&& `UniProt ID: `}\n                        <a\n                          href={\n                            'https://www.uniprot.org/uniprotkb/' +\n                            reference.uniprot\n                          }\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          {reference.uniprot}\n                        </a>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </CardContent>\n              </div>\n            ))}\n          </CardContent>\n        </Card>\n      )}\n      {pdbReferences && pdbReferences.length > 0 && (\n        <Card className={style.card}>\n          <CardContent className={style['horizontal-marginned']}>\n            {pdbReferences.map((reference, i) => {\n              const pdbId = reference.id;\n              if (!reference) return 'PDB ' + pdbId + ' not found';\n              // Mine pdb info\n              const title = reference.title;\n              const experimentalMethod = reference.method;\n              const publishDate = new Date(reference.date);\n              const keywords = Array.from(\n                new Set((reference.class || '').split(COMMA_SEPARATOR)),\n              );\n              // Get the organisms from the reference with reference.organism as old fallback\n              const organisms = reference.organisms ||  Array.from(\n                new Set((reference.organism || '').split(COMMA_SEPARATOR)),\n              ).filter(organism => organism); // Remove empty organism strings\n              // Set the url to get the pdb image\n              const lowerPdb = pdbId.toLowerCase();\n              const imgSrc = pdbId &&\n                `https://cdn.rcsb.org/images/structures/${lowerPdb.substr(1, 2)}/${lowerPdb}/${lowerPdb}_assembly-1.jpeg`;\n              // Get the PDBBind URL from the RCSB data\n              const PDBBindExists  = pdbBindInfo[pdbId];\n              return (\n                <div key={i}>\n                  {i !== 0 && <hr style={{ color: 'lightGrey' }} />}\n                  <CardContent className={style['vertcial-marginned']} style={{ minHeight: 380, marginTop: '-1rem' }}>\n                    <div>\n                      <LazyImg\n                        src={imgSrc}\n                        width=\"350\"\n                        height=\"350\"\n                        loading=\"lazy\"\n                        alt={`3D view of the ${pdbId} structure`}\n                      />\n                      <div className={style['summary-list']}>\n                        <Typography variant=\"h6\" sx={{ fontSize: '1.2rem' }}>{title}</Typography>\n                        <div style={{ display: 'flex', alignItems: 'center' }}>\n                          <div className={style['decorated-list-item__title']}>PDB Accession</div>\n                            <div className={style['decorated-list-item__content']} style={{ borderLeft: `.110rem solid ${secondaryColor.dark}` }}>\n                              {pdbId}\n                            </div>\n                          </div>\n\n                        <div style={{ display: 'flex', alignItems: 'center' }}>\n                          <div className={style['decorated-list-item__title']}>Experimental method</div>\n                          <div className={style['decorated-list-item__content']} style={{ borderLeft: `.110rem solid ${secondaryColor.dark}` }}>\n                          {experimentalMethod}\n                          </div>\n                        </div>\n                        <div>\n                          <div style={{ display: 'flex', alignItems: 'center' }}>\n                            <div className={style['decorated-list-item__title']}>\n                              Organism\n                          {organisms.length > 1 && 's'}{' '}\n                            </div>\n                            <div className={style['decorated-list-item__content']} style={{ paddingLeft: '0rem' }}>\n                              {organisms.length > 0 ? organisms.map((organism, o) => (\n                                <Chip\n                                  key={o}\n                                  label={organism}\n                                  variant=\"outlined\"\n                                  sx={{\n                                    color: secondaryColor.dark,\n                                    borderColor: secondaryColor.dark\n                                  }}                                \n                                  className={style.chip}\n                                />\n                              )) : <span className={style['grey']}>not available</span>}\n                            </div>\n                          </div>\n                        </div>\n                        <div style={{ display: 'flex', alignItems: 'center' }}>\n                          <div className={style['decorated-list-item__title']}>Keyword</div>\n                          <div className={style['decorated-list-item__content']} style={{ paddingLeft: '0rem' }}> \n                          {keywords.length > 1 && 's'}{' '}\n                          {keywords.map((keyword, k) => (\n                            <Chip\n                              key={k}\n                              label={keyword}\n                              variant=\"outlined\"\n                              sx={{\n                                color: secondaryColor.dark,\n                                borderColor: secondaryColor.dark\n                              }}                            \n                              className={style.chip}\n                            />\n                          ))}\n                        </div>\n                        </div>\n                        <div style={{ display: 'flex', alignItems: 'center' }}>\n                          <div className={style['decorated-list-item__title']} style={{flexBasis: '12vw'}}>Publication date:</div>\n                          <div className={style['decorated-list-item__content']} style={{ paddingLeft: '0rem' }}>\n                          <time dateTime={publishDate.toISOString()}>\n                            {publishDate.toDateString()}\n                          </time>\n                        </div>\n                        </div>\n                      </div>\n                    </div>\n                    <CardActions>\n                    <Button\n                        component=\"a\"\n                        variant=\"contained\"\n                        href={`https://www.ebi.ac.uk/pdbe/entry/pdb/${pdbId}`}\n                        size=\"small\"\n                        sx={{\n                          backgroundColor: secondaryColor.dark,\n                          border: `1px solid ${secondaryColor.dark}`,\n                          color: '#000',\n                          '&:hover': {\n                            backgroundColor: secondaryColor.main,\n                            border: `1px solid ${secondaryColor.main}`,\n                          }\n                        }}\n                        target=\"_blank\"\n                        rel=\"noreferrer noopener\"\n                      >\n                        <FontAwesomeIcon icon={faLink} />\n                        &nbsp;PDBe website\n                      </Button>\n                      <Button\n                        component={'a'}\n                        variant=\"contained\"\n                        href={`https://www.rcsb.org/structure/${pdbId}`}\n                        size=\"small\"\n                        sx={{\n                          backgroundColor: secondaryColor.dark,\n                          border: `1px solid ${secondaryColor.dark}`,\n                          color: '#000',\n                          '&:hover': {\n                            backgroundColor: secondaryColor.main,\n                            border: `1px solid ${secondaryColor.main}`,\n                          }\n                        }}\n                        target=\"_blank\"\n                        rel=\"noreferrer noopener\"\n                      >\n                        <FontAwesomeIcon icon={faLink} />\n                        &nbsp;RCSB website\n                      </Button>\n                      <Button\n                        component={'a'}\n                        variant=\"contained\"\n                        href={`https://3dbionotes.cnb.csic.es/?queryId=${pdbId}`}\n                        size=\"small\"\n                        sx={{\n                          backgroundColor: secondaryColor.dark,\n                          border: `1px solid ${secondaryColor.dark}`,\n                          color: '#000',\n                          '&:hover': {\n                            backgroundColor: secondaryColor.main,\n                            border: `1px solid ${secondaryColor.main}`,\n                          }\n                        }}\n                        target=\"_blank\"\n                        rel=\"noreferrer noopener\"\n                      >\n                        <FontAwesomeIcon icon={faLink} />\n                        &nbsp;3DBIONOTES\n                      </Button>\n                      {PDBBindExists && <Button\n                        component={'a'}\n                        variant=\"contained\"\n                        href={`https://www.pdbbind-plus.org.cn/browse/${pdbId}`}\n                        size=\"small\"\n                        sx={{\n                          backgroundColor: secondaryColor.dark,\n                          border: `1px solid ${secondaryColor.dark}`,\n                          color: '#000',\n                          '&:hover': {\n                            backgroundColor: secondaryColor.main,\n                            border: `1px solid ${secondaryColor.main}`,\n                          }\n                        }}\n                        target=\"_blank\"\n                        rel=\"noreferrer noopener\"\n                      >\n                        <FontAwesomeIcon icon={faLink} />\n                        &nbsp;PDBBind\n                      </Button>}\n                    </CardActions>\n                  </CardContent>\n                </div>\n              );\n            })}\n          </CardContent>\n        </Card>\n      )}\n      {Object.keys(pubchemInfo).length > 0 &&\n        <Card className={style.card}>\n          <CardContent className={style['card-content']}>\n            {Object.entries(pubchemInfo).map(([pubchemId, pubchemData], i) => {\n              const ligandReference = ligandReferences && ligandReferences.find(ref => ref.pubchem === pubchemId);\n              return(\n                <div key={i} className={style['summary-list']}>\n                  {i !== 0 && (\n                    <hr style={{ color: 'lightGrey' }} />\n                  ) /* An horizontal line to separate protein references */}\n                  <LazyImg\n                    src={`https://pubchem.ncbi.nlm.nih.gov/image/imgsrv.fcgi?cid=${pubchemId}&t=l`}\n                    width=\"250\" height=\"250\" loading=\"lazy\"\n                    alt={`3D view of the ${pubchemData.name} structure`}\n                    // cross origin and referrer policy should prevent pubchem cookies\n                    crossOrigin=\"anonymous\" referrerPolicy=\"no-referrer\"\n                    // default background color is like a \"broken\" white but this CSS trick fixes it\n                    // this was recommended by people from pubchem\n                    className={style['white-background']}\n                  />\n                  <Typography variant=\"h6\" sx={{ fontSize: '1.4rem' }}>{pubchemData.name}</Typography>\n                  <div style={{ display: 'flex', alignItems: 'center' }}>\n                  <div className={style[\"decorated-list-item__title\"]}>Pubchem ID</div>\n                    <div className={style[\"decorated-list-item__content\"]} style={{ borderLeft: `.110rem solid ${secondaryColor.dark}` }}>\n                    <a href={`https://pubchem.ncbi.nlm.nih.gov/compound/${pubchemId}`}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      {pubchemId}\n                    </a>\n                    </div>\n                  </div>\n                  <div style={{ display: 'flex', alignItems: 'center' }}>\n                    <div className={style[\"decorated-list-item__title\"]}>Molecular Formula</div>\n                    <div className={style[\"decorated-list-item__content\"]} style={{ borderLeft: `.110rem solid ${secondaryColor.dark}` }}>\n                      {ligandReference && ligandReference.formula.toString().split('').map((char, index) => {\n                        if (char.match(/[A-Z]/)) {\n                          return <span key={index} style={{ fontSize: '1.1em' }}>{char}</span>;\n                        } else if (char.match(/[0-9]/)) {\n                          return <sub key={index} style={{ fontSize: '0.9em' }}>{char}</sub>;\n                        } else {\n                          return char;\n                        }\n                      })}\n                    </div>\n                  </div>\n                  <div style={{ display: 'flex', alignItems: 'center' }}>\n                    {ligandReference && ligandReference.smiles && <>\n                      <div className={style[\"decorated-list-item__title\"]}>SMILES</div>\n                      <div className={style[\"decorated-list-item__content\"]} style={{ borderLeft: `.110rem solid ${secondaryColor.dark}` }}>\n                        <SmilesViewer ligandReference={ligandReference}/>\n                      </div>\n                      </>\n                      }\n                  </div>\n                  <div style={{ display: 'flex', alignItems: 'center' }}>\n                    {ligandReference && ligandReference.inchi && <>\n                      <div className={style[\"decorated-list-item__title\"]}>InChI</div>\n                      <div className={style[\"decorated-list-item__content\"]} style={{ borderLeft: `.110rem solid ${secondaryColor.dark}` }}>\n                        <InchiViewer ligandReference={ligandReference}/>\n                      </div>\n                      </>\n                      }\n                  </div>\n                  <div style={{ display: 'flex', alignItems: 'center' }}>\n                    {ligandReference && ligandReference.inchikey && <>\n                      <div className={style[\"decorated-list-item__title\"]}>InChIKey</div>\n                      <div className={style[\"decorated-list-item__content\"]} style={{ borderLeft: `.110rem solid ${secondaryColor.dark}` }}>\n                        {ligandReference.inchikey}\n                      </div>\n                      </>\n                      }\n                  </div>\n                  <div>\n                  {pubchemData.chemblID && (<div style={{ display: 'flex', alignItems: 'center' }}>\n                    <div className={style[\"decorated-list-item__title\"]}>ChEMBL ID</div>\n                    <div className={style[\"decorated-list-item__content\"]} style={{ borderLeft: `.110rem solid ${secondaryColor.dark}` }}>\n                    <a href={pubchemData.chemblURL}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      {pubchemData.chemblID}\n                    </a>\n                    </div>\n                  </div>)}\n                  </div>\n                  <div>\n                  {pubchemData.drugbankID && (<div style={{ display: 'flex', alignItems: 'center' }}>\n                    <div className={style[\"decorated-list-item__title\"]}>DrugBank ID</div>\n                    <div className={style[\"decorated-list-item__content\"]} style={{ borderLeft: `.110rem solid ${secondaryColor.dark}` }}>\n                    <a href={pubchemData.drugbankURL}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      {pubchemData.drugbankID}\n                    </a>\n                    </div>\n                  </div>)}\n                  </div>\n                  <div>\n                    {ligandReference?.mordred || ligandReference?.morgan_fp_bit_array ? (\n                      <>\n                        <Button onClick={() => handleSeeMore(pubchemId)} \n                        variant='outlined' \n                        style={{ marginTop: '10px', marginBottom: '10px', marginLeft: '1rem' }}\n                        sx={{\n                          backgroundColor: secondaryColor.main,\n                          border: `1px solid ${secondaryColor.dark}`,\n                          color: '#000',\n                          '&:hover': {\n                            backgroundColor: secondaryColor.light,\n                            border: `1px solid ${secondaryColor.dark}`,\n                          }\n                        }}\n                        >\n                          Ligand Descriptors\n                        </Button>\n                        {showTable.has(pubchemId) && (\n                          <Card className={style.card}>\n                              <div style={{ display: \"flex\" }}>                            \n                              {ligandReference.mordred ? (\n                                <div style={{ flex: 1, width: \"40%\", textAlign: \"center\" }}>\n                                  <Typography variant=\"h6\" className={style.title}>\n                                    Mordred Descriptors\n                                    {mordredDoc && mordredDoc.page && (\n                                      <Info tooltip={mordredTooltip} className={style.info} sx={{color: primaryDarkColor}}/>\n                                    )}\n                                  </Typography>\n                                  <LigandTable ligandReference={ligandReference} type=\"mordred\"/>\n                                </div>\n                              ) : <></>}\n                              {ligandReference.morgan_fp_bit_array ? (\n                                <div style={{ flex: 1, width: \"60%\", textAlign: \"center\" }}>\n                                  <Typography variant=\"h6\" className={style.title}>\n                                    Morgan Fingerprint\n                                    {morganDoc && morganDoc.page && (\n                                      <Info tooltip={morganTooltip} className={style.info} sx={{color: primaryDarkColor}}/>\n                                    )}\n                                  </Typography>\n                                  <MoleculeViewer smiles={ligandReference.smiles} \n                                  fingerprintData={ligandReference.morgan_highlight_atoms}\n                                  mol_block={ligandReference.mol_block}/>\n                                  {ligandReference.morgan_fp_bit_array && (\n                                    <div>\n                                      <Button onClick={() => showMorganFPArray(pubchemId)} \n                                      variant='outlined' \n                                      style={{ marginTop: '10px', marginBottom: '10px' }}\n                                      sx={{\n                                        backgroundColor: secondaryColor.main,\n                                        border: `1px solid ${secondaryColor.dark}`,\n                                        color: '#000',\n                                        '&:hover': {\n                                          backgroundColor: secondaryColor.light,\n                                          border: `1px solid ${secondaryColor.dark}`,\n                                        }\n                                      }}\n                                      >\n                                        Show Morgan Fingerprint Array\n                                      </Button>\n                                      {selectedFP.has(pubchemId) && (\n                                        <div>\n                                          <textarea\n                                            readOnly\n                                            value={ligandReference.morgan_fp_bit_array}\n                                            className={style['textarea']}\n                                          />\n                                        </div>\n                                      )}\n                                    </div>\n                                  )}\n                                </div>\n                              ) : (\n                                <div style={{ flex: 1, width: \"60%\", textAlign: \"center\" }}>\n                                  <h4>Morgan Fingerprint not available</h4>\n                                </div>\n                              )}\n                          </div>\n                            </Card>\n                          )}\n                        </>\n                      ) : (\n                        <p>No descriptors available</p>\n                      )}\n                  </div>\n                  {ligandReference && ligandReference.pdbid && (<div>\n                    <CardActions>\n                      <Button\n                            component={'a'}\n                            variant=\"contained\"\n                            href={`https://www.ebi.ac.uk/pdbe-srv/pdbechem/chemicalCompound/show/${ligandReference.pdbid}`}\n                            size=\"small\"\n                            target=\"_blank\"\n                            rel=\"noreferrer noopener\"\n                            sx={{\n                              backgroundColor: secondaryColor.dark,\n                              border: `1px solid ${secondaryColor.dark}`,\n                              color: '#000',\n                              '&:hover': {\n                                backgroundColor: secondaryColor.main,\n                                border: `1px solid ${secondaryColor.main}`,\n                              }\n                            }}\n                          >\n                            <FontAwesomeIcon icon={faLink} />\n                            &nbsp;PDBe website\n                          </Button>\n                          <Button\n                            component={'a'}\n                            variant=\"contained\"\n                            href={`https://www.rcsb.org/ligand/${ligandReference.pdbid}`}\n                            size=\"small\"\n                            target=\"_blank\"\n                            rel=\"noreferrer noopener\"\n                            sx={{\n                              backgroundColor: secondaryColor.dark,\n                              border: `1px solid ${secondaryColor.dark}`,\n                              color: '#000',\n                              '&:hover': {\n                                backgroundColor: secondaryColor.main,\n                                border: `1px solid ${secondaryColor.main}`,\n                              }\n                            }}\n                          >\n                            <FontAwesomeIcon icon={faLink} />\n                            &nbsp;RCSB website\n                          </Button>\n                      </CardActions>\n                  </div>)}\n                </div>\n              );\n            })}\n          </CardContent>\n        </Card>\n      }\n      <Card className={style.card}>\n        <CardContent className={style['card-content']}>\n          <Typography variant=\"h6\">License</Typography>\n          <div className={style['summary-list']}>\n            <div>{(metadata && metadata.LICENSE) || 'Not available'}</div>\n            <a\n              href={metadata && metadata.LINKCENSE}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {metadata && metadata.LINKCENSE && 'More information'}\n            </a>\n          </div>\n        </CardContent>\n        {citation && (\n          <CardContent className={style['card-content']}>\n            <Typography variant=\"h6\">Citation</Typography>\n            <div className={style['summary-list']}>\n              <div>\n                The use of any trajectory data in any reports or publications of\n                results obtained with the trajectory data should be acknowledged\n                by including a citation to:\n              </div>\n              <div>{citation}</div>\n            </div>\n          </CardContent>\n        )}\n        {metadata.THANKS && (\n          <CardContent className={style['card-content']}>\n            <Typography variant=\"h6\">Acknowledgements</Typography>\n            <div className={style['summary-list']}>\n              <div>{metadata.THANKS}</div>\n            </div>\n          </CardContent>\n        )}\n        <CardContent className={style['card-content']}>\n          <Typography variant=\"h6\">Project information</Typography>\n          <div className={style['summary-list']}>\n          <div style={{ display: 'flex', alignItems: 'center' }}>\n             <div className={style['decorated-list-item__title']} style={{flexBasis: '16vw'}}>Public project accession:</div>\n             <div className={style['decorated-list-item__content']} style={{ paddingLeft: '0rem' }}>\n              {accession || <code>not assigned</code>}\n            </div>\n          </div>\n          <div style={{ display: 'flex', alignItems: 'center' }}>\n             <div className={style['decorated-list-item__title']} style={{flexBasis: '16vw'}}>Internal project identifier:</div>\n             <div className={style['decorated-list-item__content']} style={{ paddingLeft: '0rem' }}>\n              {internalId || identifier}\n            </div>\n          </div>\n          <div style={{ display: 'flex', alignItems: 'center' }}>\n             <div className={style['decorated-list-item__title']} style={{ flexBasis: '16vw'}}>Status:</div>\n             <div className={style['decorated-list-item__content']} style={{ paddingLeft: '0rem' }}>\n             {published ? 'published' : 'unpublished'}\n            </div>\n          </div>\n          <div style={{ display: 'flex', alignItems: 'center' }}>\n             <div className={style['decorated-list-item__title']} style={{flexBasis: '16vw'}}>Addition date:</div>\n             <div className={style['decorated-list-item__content']} style={{ paddingLeft: '0rem' }}>\n             {creationDate ? creationDate : 'Not available'}\n            </div>\n          </div>\n          <div style={{ display: 'flex', alignItems: 'center' }}>\n            <div className={style['decorated-list-item__title']} style={{flexBasis: '16vw'}}>Last modification:</div>\n            <div className={style['decorated-list-item__content']} style={{ paddingLeft: '0rem' }}>\n              {updateDate ? updateDate : (creationDate ? creationDate : 'Not available')}\n            </div>\n          </div>\n          </div>\n        </CardContent>\n      </Card>\n    </>\n  );\n});\n\nOverview.displayName = 'Overview';\nexport default Overview;\n"],"names":["KEYFRAMES","opacity","reducedMotion","transform","ANIMATION_OPTIONS","fill","easing","duration","forwardRef","_ref","ref","overrideComponent","props","_objectWithoutProperties","_excluded","containerRef","useRef","useLayoutEffect","node","current","firstElementChild","animate","index","Array","from","document","querySelectorAll","findIndex","section","animation","_objectSpread","delay","cancel","Component","Card","_jsx","className","style","children","component","getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","CardRoot","styled","Paper","name","overridesResolver","styles","root","overflow","React","inProps","useDefaultProps","raised","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","clsx","elevation","undefined","getTableContainerUtilityClass","TableContainerRoot","width","overflowX","as","getCardActionsUtilityClass","CardActionsRoot","disableSpacing","spacing","display","alignItems","padding","marginLeft","slots","prettyEnumerate","array","length","concat","slice","join","RDKit","load","this","Promise","resolve","reject","window","script","createElement","src","async","onload","RDKitModule","initRDKitModule","console","log","version","error","onerror","Error","body","appendChild","smiles","fingerprintData","mol_block","setRDKit","useState","selectedBit","setSelectedBit","highlightAtoms","setHighlightAtoms","canvasRef","useEffect","RDKitHandler","then","module","catch","isArray","Object","keys","mol","get_mol","canvas","getContext","clearRect","height","innerWidth","innerHeight","draw_to_canvas_with_highlights","JSON","stringify","atoms","highlightRadius","highlightColor","addAtomIndices","explicitMethyl","_jsxs","maxWidth","marginTop","htmlFor","marginBottom","id","onChange","e","parseInt","target","value","map","bit","COMMA_SEPARATOR","LigandTable","ligandReference","searchTerm","setSearchTerm","page","setPage","rowsPerPage","setRowsPerPage","mordredData","mordred","rows","entries","_ref2","key","toFixed","String","emptyRows","Math","max","filteredRows","filter","_ref3","toLowerCase","includes","toString","sx","boxShadow","margin","borderCollapse","TextField","label","variant","fullWidth","size","event","TableContainer","Table","TableHead","TableRow","TableCell","fontWeight","textAlign","TableBody","_ref4","border","colSpan","TablePagination","rowsPerPageOptions","count","onPageChange","handleChangePage","_","newPage","onRowsPerPageChange","fontSize","Overview","accession","internalId","identifier","published","metadata","ligandReferences","proteinReferences","pdbReferences","mdCount","creationDate","updateDate","useContext","ProjectCtx","showTable","setShowTable","Set","selectedFP","setSelectedFP","InchiViewer","_ref5","expanded","setExpanded","inchi","displayText","substring","split","char","onClick","toggleExpand","borderRadius","cursor","theme","useTheme","secondaryColor","palette","secondary","primaryDarkColor","primary","dark","typeSettings","trajectory","color","main","ensemble","SmilesViewer","_ref6","mordredDoc","docs","find","doc","mordredTooltip","_Fragment","href","rel","morganDoc","morganTooltip","pdbIds","PDBIDS","pdbBindInfo","setPdbBindInfo","requests","forEach","pdbId","url","request","https","response","on","chunk","exists","previous","destroy","push","abort","pubchemIds","LIGANDS","pubchemInfo","setPubchemInfo","citation","pubchemId","pubchemAPIurl","sourceData","parse","data","record","Record","RecordTitle","forcedLigandName","LIGANDNAMES","reference","Reference","chemblReference","SourceName","chemblURL","URL","chemblSplits","chemblID","drugbankReference","drugbankURL","drugbankSplits","drugbankID","CITATION","replace","pattern","sups","sup","exec","fragments","compiled","card","CardContent","title","NAME","mdName","grey","TYPE","Chip","backgroundColor","contrastText","marginRight","chip","METHOD","DESCRIPTION","wordBreak","borderLeft","AUTHORS","GROUPS","HOST_CONFIG","global","optionsNiceNames","CONTACT","PROGRAM","VERSION","LINKS","link","l","WARNINGS","warning","w","FontAwesomeIcon","icon","faExclamationTriangle","message","NUCLSEQ","Typography","seq","readOnly","PROTSEQ","i","gene","organism","uniprot","experimentalMethod","method","publishDate","Date","date","keywords","class","organisms","lowerPdb","imgSrc","substr","PDBBindExists","minHeight","LazyImg","loading","alt","paddingLeft","o","borderColor","keyword","k","flexBasis","dateTime","toISOString","toDateString","CardActions","Button","faLink","_ref7","pubchemData","pubchem","crossOrigin","referrerPolicy","formula","match","inchikey","morgan_fp_bit_array","prev","newShowTable","has","delete","add","handleSeeMore","light","flex","Info","tooltip","info","type","MoleculeViewer","morgan_highlight_atoms","newSelectedFP","showMorganFPArray","pdbid","LICENSE","LINKCENSE","THANKS","displayName"],"sourceRoot":""}