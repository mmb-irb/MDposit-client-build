{"version":3,"file":"static/js/9280.eb61e070.chunk.js","mappings":"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","sources":["webpack://mdposit/./src/pages/accession/overview/style.module.css?45c5","webpack://mdposit/./src/components/animated-card/style.module.css?d4d9","components/animated-card/index.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","../node_modules/@mui/material/TableContainer/tableContainerClasses.js","../node_modules/@mui/material/TableContainer/TableContainer.js","../node_modules/@mui/material/CardActions/cardActionsClasses.js","../node_modules/@mui/material/CardActions/CardActions.js","utils/pretty-enumerate/index.js","utils/rdkit/rdkit_load.js","utils/rdkit/rdkit_viewer.js","pages/accession/overview/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"style_card__9TULw\",\"card-content\":\"style_card-content__u-RUX\",\"horizontal-marginned\":\"style_horizontal-marginned__F1cTH\",\"vertcial-marginned\":\"style_vertcial-marginned__AFi23\",\"chip\":\"style_chip__LmEJP\",\"summary-list\":\"style_summary-list__5sQf1\",\"grey\":\"style_grey__aJ5pz\",\"title\":\"style_title__N2SOZ\",\"white-background\":\"style_white-background__KCBRe\",\"highlight\":\"style_highlight__VBCsN\",\"textarea\":\"style_textarea__M9S0p\",\"card-background\":\"style_card-background__M3M84\",\"decorated-list-item__title\":\"style_decorated-list-item__title__nsBvl\",\"decorated-list-item__content\":\"style_decorated-list-item__content__A8FMc\",\"info\":\"style_info__7RITL\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"style_container__M9GCG\"};","import React, { useLayoutEffect, useRef, forwardRef } from 'react';\nimport { Card } from '@mui/material';\n\nimport reducedMotion from '../../utils/reduced-motion';\n\nimport style from './style.module.css';\n\nconst KEYFRAMES = { opacity: [0, 1] };\n\nif (!reducedMotion()) {\n  KEYFRAMES.transform = ['translateY(50px)', 'translateY(0)'];\n}\n\nconst ANIMATION_OPTIONS = {\n  fill: 'both',\n  easing: 'cubic-bezier(0, .99, .56, 1.1)',\n  duration: 500,\n};\n\n// Make the card appear and slide softly from down to up when the page is loaded\nconst AnimatedCard = forwardRef(({ overrideComponent, ...props }, ref) => {\n  const containerRef = useRef(null);\n\n  useLayoutEffect(() => {\n    const node = containerRef.current && containerRef.current.firstElementChild;\n    if (!(node && node.animate)) return;\n\n    const index = Array.from(\n      document.querySelectorAll('main section'),\n    ).findIndex(section => node === section);\n\n    const animation = node.animate(KEYFRAMES, {\n      ...ANIMATION_OPTIONS,\n      delay: index * 150,\n    });\n\n    return () => animation.cancel();\n  }, []);\n\n  const Component = overrideComponent ? 'section' : Card;\n\n  return (\n    <div ref={containerRef} className={style.container}>\n      <Component component=\"section\" {...props} ref={ref} />\n    </div>\n  );\n});\n\nexport default AnimatedCard;\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableContainerUtilityClass(slot) {\n  return generateUtilityClass('MuiTableContainer', slot);\n}\nconst tableContainerClasses = generateUtilityClasses('MuiTableContainer', ['root']);\nexport default tableContainerClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled from '../styles/styled';\nimport { getTableContainerUtilityClass } from './tableContainerClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableContainerUtilityClass, classes);\n};\nconst TableContainerRoot = styled('div', {\n  name: 'MuiTableContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  width: '100%',\n  overflowX: 'auto'\n});\nconst TableContainer = /*#__PURE__*/React.forwardRef(function TableContainer(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTableContainer'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TableContainerRoot, _extends({\n    ref: ref,\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableContainer.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally `Table`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableContainer;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiCardActions', slot);\n}\nconst cardActionsClasses = generateUtilityClasses('MuiCardActions', ['root', 'spacing']);\nexport default cardActionsClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"disableSpacing\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getCardActionsUtilityClass } from './cardActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableSpacing\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getCardActionsUtilityClass, classes);\n};\nconst CardActionsRoot = styled('div', {\n  name: 'MuiCardActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableSpacing && styles.spacing];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8\n}, !ownerState.disableSpacing && {\n  '& > :not(style) ~ :not(style)': {\n    marginLeft: 8\n  }\n}));\nconst CardActions = /*#__PURE__*/React.forwardRef(function CardActions(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardActions'\n  });\n  const {\n      disableSpacing = false,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    disableSpacing\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardActions;","// Given an array of strings, return a single string with the follwoing format:\n// e.g. ['red', 'green', 'blue'] => 'red, green and blue'\n// Handle when the values is a string instead of an array (old values)\nexport const prettyEnumerate = array => {\n    if (typeof array === 'string') return array;\n    if (array.length === 0) return '';\n    if (array.length === 1) return array[0];\n    return `${array.slice(0, array.length - 1).join(', ')} and ${array[array.length - 1]}`;\n}\n\n// Just separte values by semicolons\n// Handle when the values is a string instead of an array (old values)\nexport const rawEnumerate = array => {\n    if (typeof array === 'string') return array;\n    return array.join('; ');\n}","const RDKitHandler = {\n    RDKit: null,\n    async load() {\n      if (this.RDKit) return this.RDKit; // Si ya está cargado, lo devuelve\n  \n      return new Promise((resolve, reject) => {\n        if (window.RDKit) {\n          // Si ya está definido en window, lo usamos\n          this.RDKit = window.RDKit;\n          resolve(window.RDKit);\n          return;\n        }\n  \n        const script = document.createElement(\"script\");\n        script.src = \"https://unpkg.com/@rdkit/rdkit/dist/RDKit_minimal.js\";\n        script.async = true;\n        script.onload = async () => {\n          try {\n            const RDKitModule = await window.initRDKitModule();\n            console.log(\"✅ RDKit cargado:\", RDKitModule.version());\n            this.RDKit = RDKitModule;\n            window.RDKit = RDKitModule; // Guardar en window para evitar recargas\n            resolve(RDKitModule);\n          } catch (error) {\n            console.error(\"❌ Error al inicializar RDKit:\", error);\n            reject(error);\n          }\n        };\n  \n        script.onerror = () => reject(new Error(\"❌ No se pudo cargar el script de RDKit.\"));\n        document.body.appendChild(script);\n      });\n    }\n  };\n  \n  export default RDKitHandler;\n  ","import React, { useState, useEffect, useRef } from \"react\";\nimport RDKitHandler from \"./rdkit_load\";\nimport { Button } from \"molstar/lib/mol-plugin-ui/controls/common\";\nimport { add } from \"lodash-es\";\n\nconst MoleculeViewer = ({ smiles, fingerprintData, mol_block }) => {\n  const [RDKit, setRDKit] = useState(null);\n  const [selectedBit, setSelectedBit] = useState(null);\n  const [highlightAtoms, setHighlightAtoms] = useState([]);\n  const canvasRef = useRef(null); // Referencia para el canvas\n  // Cargar RDKit al montar el componente\n  useEffect(() => {\n    RDKitHandler.load()\n      .then((module) => setRDKit(module))\n      .catch((error) => console.error(\"❌ Error al cargar RDKit:\", error));\n  }, []);\n\n  // Actualizar los átomos resaltados cuando cambia el bit seleccionado\n  useEffect(() => {\n    if (selectedBit !== null && Array.isArray(fingerprintData[selectedBit])) {\n      setHighlightAtoms(fingerprintData[selectedBit]); // ✅ No usar .map()\n    } else {\n      setHighlightAtoms([]);\n    }\n  }, [selectedBit, fingerprintData]);\n  \n  if (!fingerprintData || Object.keys(fingerprintData).length === 0) {\n    return <p>No fingerprint data available</p>;\n  }\n  // style={{ color: \"red\" }}\n\n  // Dibujar la molécula en el canvas\n  useEffect(() => {\n    if (!RDKit || !canvasRef.current) return;\n\n    try {\n      const mol = RDKit.get_mol(mol_block);\n      const canvas = canvasRef.current;\n      // const molBlock = mol.get_molblock();\n      // const mol2 = RDKit.get_mol(molBlock);\n      // console.log(\"mol2:\", mol2);\n      // console.log(\"molBlock:\", molBlock);\n\n      // All the canvas options: https://www.rdkitjs.com/#drawing-molecules-canvas\n      const ctx = canvas.getContext(\"2d\");\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      canvas.width = window.innerWidth;     // equals window dimension\n      canvas.height = window.innerHeight;\n      mol.draw_to_canvas_with_highlights(canvas, JSON.stringify({\n        atoms: highlightAtoms,\n        highlightRadius: 0.6,\n        highlightColor: [1, 0, 0], // Rojo (RGB)\n        addAtomIndices: true,\n        explicitMethyl: true\n      }));\n    } catch (error) {\n      console.error(\"❌ Error al renderizar la molécula:\", error);\n    }\n  }, [RDKit, smiles, highlightAtoms]);\n\n  return (\n    <div style={{  alignItems: \"center\", width: \"100%\" }}>\n      <canvas ref={canvasRef} style={{ width: \"100%\", maxWidth: \"400px\", height: \"auto\" }} />\n      <div style={{ marginTop: \"10px\",  alignItems: \"center\" }}>\n        <label htmlFor=\"fragmentSelector\" style={{ marginBottom: \"5px\" }}>Select a fragment:  </label>\n        <select id=\"fragmentSelector\" onChange={(e) => setSelectedBit(parseInt(e.target.value) || null)} value={selectedBit || \"\"}>\n          <option value=\"\">None</option>\n          {Object.keys(fingerprintData).map((bit) => (\n            <option key={bit} value={bit}>\n              Number {bit}\n            </option>\n          ))}\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default MoleculeViewer;\n","import React, { useContext, useState, useEffect, useRef, useMemo } from 'react';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TablePagination,\n  TextField,\n  Paper,\n  CardContent,\n  CardActions,\n  Button,\n  Typography,\n  Chip,\n} from '@mui/material';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faLink,\n  faExclamationTriangle,\n} from '@fortawesome/free-solid-svg-icons';\nimport { useTheme } from '@mui/material/styles';\nimport  Info  from '../../../components/info';\nimport { docs } from '../../help/documentation';\nimport Card from '../../../components/animated-card';\nimport LazyImg from '../../../components/lazy-img';\n\nimport { prettyEnumerate } from '../../../utils/pretty-enumerate';\n\nimport { ProjectCtx } from '../../../contexts';\nimport https from 'https-browserify';\n\nimport style from './style.module.css';\n\nimport { HOST_CONFIG } from '../../../utils/constants';\nimport MoleculeViewer from 'src/utils/rdkit/rdkit_viewer';\n\nconst COMMA_SEPARATOR = /\\s*,\\s*/;\n\n\nconst LigandTable = ({ ligandReference }) => {\n  if (!ligandReference) return null;\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const mordredData = ligandReference.mordred || {};\n  const rows = Object.entries(mordredData || {}).map(([key, value]) => ({\n    key,\n    value: typeof value === 'number' ? value.toFixed(2) : String(value),\n  }));\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows =\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n\n  const filteredRows = rows.filter(\n    ({key,value}) =>\n      key.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      value.toString().includes(searchTerm)\n  );\n\n  const handleSearch = (event) => {\n    setSearchTerm(event.target.value);\n    setPage(0);\n  };\n\n  const handleChangePage = (_, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return (\n    <Paper \n      sx={{ \n        width: \"auto\", \n        maxWidth: \"400px\", \n        padding: \"10px\", \n        overflow: \"hidden\", \n        boxShadow: \"none\",\n        margin: \"auto\",\n        marginTop: \"0px\",\n        marginBottom: \"10px\",\n        display:\"table\",\n        borderCollapse: \"collapse\"\n      }}\n    >\n      <TextField\n        label=\"Search...\"\n        variant=\"outlined\"\n        fullWidth\n        margin=\"dense\"\n        size=\"small\"\n        value={searchTerm}\n        onChange={handleSearch}\n      />\n      <TableContainer>\n        <Table size=\"small\"> {/* Reduce el tamaño de las filas */}\n          <TableHead>\n            <TableRow>\n              <TableCell sx={{ fontWeight: \"bold\", padding: \"5px\", textAlign: \"center\" }}>Descriptor</TableCell>\n              <TableCell sx={{ fontWeight: \"bold\", padding: \"5px\", textAlign: \"center\" }}>Valor</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {filteredRows.length > 0 ? filteredRows\n              .slice(page * rowsPerPage, (page + 1) * rowsPerPage)\n              .map(({key,value}) => (\n                <TableRow key={key} sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }} >\n                  <TableCell component=\"th\" sx={{ padding: \"5px\", textAlign: \"center\" }}>{key}</TableCell>\n                  <TableCell component=\"th\" sx={{ padding: \"5px\", textAlign: \"center\" }}>{value}</TableCell>\n                </TableRow>\n              ))\n            : null}\n            {emptyRows > 0 && (\n              <TableRow style={{ height: 33 * emptyRows }}>\n                <TableCell colSpan={2} />\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n        component=\"div\"\n        colSpan={3}\n        count={filteredRows.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n        sx={{ fontSize: \"12px\" }}\n        display=\"flex\"\n        //justifyContent=\"center\"\n        //alignItems=\"flex-start\"\n        margin=\"auto\"\n      />\n    </Paper>\n  );\n};\n\nconst Overview = React.memo(() => {\n  const { accession, identifier, published, metadata, ligandReferences, proteinReferences, mdCount, node, creationDate, updateDate } = useContext(\n    ProjectCtx,\n  );\n\n  // Define the state and the function to show the table or not for Mordred (ligands)\n  const [showTable, setShowTable] = useState(new Set());\n  const handleSeeMore = pubchemId => {\n    setShowTable((prev) => {\n      const newShowTable = new Set(prev);\n      if (newShowTable.has(pubchemId)) newShowTable.delete(pubchemId);\n      else newShowTable.add(pubchemId);\n      return newShowTable;\n    });\n  };\n\n  // Define the state and the function to show the Morgan Fingerprint array (ligands)\n  const [selectedFP, setSelectedFP] = useState(new Set());\n  const showMorganFPArray = pubchemId => {\n    setSelectedFP((prev) => {\n      const newSelectedFP = new Set(prev);\n      if (newSelectedFP.has(pubchemId)) newSelectedFP.delete(pubchemId);\n      else newSelectedFP.add(pubchemId);\n      return newSelectedFP;\n    });\n  };\n\n  // Create a little button to show the inchi array\n  const InchiViewer = ({ ligandReference }) => {\n    const [expanded, setExpanded] = useState(false);\n    const maxLength = 30;\n    const toggleExpand = () => setExpanded(!expanded);\n    const inchi = ligandReference.inchi;\n    const displayText = expanded ? inchi : `${inchi.substring(0, maxLength)}... `;\n  \n    return (\n      <div>\n        <div>\n          {displayText.split('').map((char, index) => (\n            <span key={index} className=\"highlight\">{char}</span>\n          ))}\n          {inchi.length > maxLength && (\n            <button onClick={toggleExpand} \n            className=\"ml-2 text-blue-500 hover:underline\"\n            //cursor=\"pointer\"\n            style={{\n              padding: '4px 6px',\n              borderRadius: '1.5px',\n              cursor: 'pointer',\n              display: 'inline-block',\n              fontSize: '14px',\n              margin: '2px 4px',\n            }}\n            >\n              {expanded ? 'See less' : 'See more'}\n            </button>\n          )}\n        </div>\n      </div>\n    );\n  };\n  // Get the provided theme\n  const theme = useTheme();\n  const secondaryColor = theme.palette.secondary;\n  const primaryDarkColor = theme.palette.primary.dark;\n  const typeSettings = {\n    trajectory: {\n      label: 'Trajectory',\n      color: theme.palette.secondary.main, // light blue\n    },\n    ensemble: {\n      label: 'Ensemble',\n      color: theme.palette.secondary.dark, // light yellow\n    },\n  };\n  const SmilesViewer = ({ ligandReference }) => {\n    const [expanded, setExpanded] = useState(false);\n    const maxLength = 120;\n    const toggleExpand = () => setExpanded(!expanded);\n    const smiles = ligandReference.smiles;\n    const displayText = expanded ? smiles : `${smiles.substring(0, maxLength)}`;\n\n    return (\n      <div className=\"text-align-center margin-auto max-width-100\">\n        <div className=\"display-inline word-break\">\n          {displayText.split('').map((char, index) => (\n            <span key={index} className=\"highlight\">{char}</span>\n          ))}\n          {smiles.length > maxLength && (\n            <button onClick={toggleExpand} \n            className=\"ml-2 text-blue-500 hover:underline\"\n            //cursor=\"pointer\"\n            style={{\n              padding: '4px 6px',\n              borderRadius: '1.5px',\n              cursor: 'pointer',\n              display: 'inline-block',\n              fontSize: '14px',\n              margin: '2px 4px',\n            }}\n            >\n              {expanded ? 'See less' : 'See more'}\n            </button>\n          )}\n        </div>\n      </div>\n    );\n  };\n  // Set mordred and morgan documentation\n  const mordredDoc = docs.find(doc => doc.id === 'mordred-descriptors');\n  const mordredTooltip = mordredDoc && mordredDoc.page && (\n    <>\n      {mordredDoc.page}\n      <br />\n      <br />\n      To learn more about this page and how data is obtained please{' '}\n      <a\n        href={`/#/help#${mordredDoc.id}`}\n        target=\"_blank\"\n        rel=\"noreferrer noopener\"\n      >\n        {'click here'}\n      </a>\n      .\n    </>\n  );\n  const morganDoc = docs.find(doc => doc.id === 'morgan-fingerprint');\n  const morganTooltip = morganDoc && morganDoc.page && (\n    <>\n      {morganDoc.page}\n      <br />\n      <br />\n      To learn more about this page and how data is obtained please{' '}\n      <a\n        href={`/#/help#${morganDoc.id}`}\n        target=\"_blank\"\n        rel=\"noreferrer noopener\"\n      >\n        {'click here'}\n      </a>\n      .\n    </>\n  );\n  // Download pdb information for every pdb id in metadata from our custom API\n  const pdbIds = metadata.PDBIDS;\n  const [pdbInfo, setPdbInfo] = useState({});\n  useEffect(() => {\n    if (!pdbIds) return;\n    // Store requests so we can abort them all in the useEffect cleanup function in case they were not completed on time\n    const requests = [];\n    pdbIds.forEach(pdbId => {\n      const url = `https://mdb-login.bsc.es/api/pdb/${pdbId}/entry`;\n      let body = '';\n      const request = https.get(url, response => {\n        response.on('data', chunk => {\n          body += chunk;\n        });\n        response.on('end', () => {\n          const data = JSON.parse(body);\n          setPdbInfo(previous => {\n            return { ...previous, [pdbId]: data };\n          });\n        });\n      });\n      requests.push(request);\n    });\n    // DANI: No he comprovado que esto funcione debidamente\n    return () => {\n      for (const request of requests) request.abort();\n    };\n  }, [pdbIds]);\n\n  // Ask the PDBBind for every PDB code to see if they have an entry for it\n  const [pdbBindInfo, setPdbBindInfo] = useState({});\n  useEffect(() => {\n    if (!pdbIds) return;\n    // Store requests so we can abort them all in the useEffect cleanup function in case they were not completed on time\n    const requests = [];\n    pdbIds.forEach(pdbId => {\n      // Set the target URL\n      // LORE:\n      // We want to check if the PDB code exists or not in PDBBind\n      // Note that the PDBBind API is not fast so just asking for the PDB code takes a while when the PDB code exists\n      // Note that the PDBBind API is not user friendly and not documented so I don't know if there is a better endpoint\n      // I wrote a message to the PDBBing technical support and they answered they did not have an API so...\n      // I found the content endpoint which is a bit faster responding\n      // If the pdb is not found the response is an instant object (still 200)\n      // However if the pdb is found the response is a whole mmCif but the first chunk is fast\n      const url = `https://www.pdbbind-plus.org.cn:11033/api/browser/content?pdbcode=${pdbId}`;\n      const request = https.get(url, response => {\n        response.on('data', chunk => {\n          // Get the first chunk (since there will be no more) and convert it to string\n          const firstChunk = '' + chunk;\n          // If the first characters is '{' then it means this is a JSON, thus the pdb code does not exist\n          // Otherwise the pdb code exists\n          const exists = firstChunk[0] !== '{';\n          setPdbBindInfo(previous => {\n            return { ...previous, [pdbId]: exists };\n          });\n          // Now finish the response since we do not need the rest\n          response.destroy();\n        });\n      });\n      // Add the request to the list\n      requests.push(request);\n    });\n    // DANI: No he comprovado que esto funcione debidamente\n    return () => {\n      for (const request of requests) request.abort();\n    };\n  }, [pdbIds]);\n\n  // Download ligand information for every ligand pubchem id in metadata\n  const pubchemIds = metadata.LIGANDS;\n  const [pubchemInfo, setPubchemInfo] = useState({});\n  useEffect(() => {\n    if (!pubchemIds) return;\n    // Store requests so we can abort them all in the useEffect cleanup function in case they were not completed on time\n    const requests = [];\n    pubchemIds.forEach(pubchemId => {\n      if (typeof pubchemId !== 'string') return;\n      const pubchemAPIurl = `https://pubchem.ncbi.nlm.nih.gov/rest/pug_view/data/compound/${pubchemId}/JSON/`;\n      let body = '';\n      const request = https.get(pubchemAPIurl, response => {\n        response.on('data', chunk => {\n          body += chunk;\n        });\n        response.on('end', () => {\n          // Get the original API response data\n          const sourceData = JSON.parse(body);\n          // Mine all data we want to display\n          const data = {};\n          // First get the ligand name\n          const record =  sourceData.Record;\n          data.name = record.RecordTitle;\n          // If there is a forced name then use add it to the name\n          const forcedLigandName = metadata.LIGANDNAMES && metadata.LIGANDNAMES[pubchemId];\n          if (forcedLigandName && forcedLigandName !== data.name) data.name += ` (${forcedLigandName})`;\n          // Get chembl id and url\n          const reference = record.Reference;\n          const chemblReference = reference.find(ref => ref.SourceName === 'ChEMBL');\n          if (chemblReference) {\n            data.chemblURL = chemblReference.URL;\n            const chemblSplits = chemblReference.URL.split('/');\n            data.chemblID = chemblSplits[chemblSplits.length - 1];\n          }\n          // Get drugbank id and url\n          const drugbankReference = reference.find(ref => ref.SourceName === 'DrugBank');\n          if (drugbankReference) {\n            data.drugbankURL = drugbankReference.URL;\n            const drugbankSplits = drugbankReference.URL.split('/');\n            data.drugbankID = drugbankSplits[drugbankSplits.length - 1];\n          }\n          // Add current ligand data to the overall ligands data object\n          setPubchemInfo(previous => {\n            return { ...previous, [pubchemId]: data };\n          });\n        });\n      });\n      requests.push(request);\n    });\n    // DANI: No he comprovado que esto funcione debidamente\n    return () => {\n      for (const request of requests) request.abort();\n    };\n  }, [pubchemIds]);\n\n  // Parse the citation text\n  // i.e. add break lines, \"elevated\" text, etc.\n  let citation;\n  if (metadata && metadata.CITATION) {\n    // Replace the metadat break lines by proper JSX break lines\n    citation = metadata.CITATION.replace(/\\(br\\)/g, '\\n');\n    // Get all sup characters\n    const pattern = /\\^([\\S\\s])/g;\n    const sups = [];\n    let sup;\n    while ((sup = pattern.exec(metadata.CITATION)) != null) {\n      sups.push(sup[1]);\n    }\n    // Split the citation by 'sups' and remove them\n    const fragments = citation.split(/\\^[\\S\\s]/g);\n    // Foreach sup, join the previous fragment with it\n    const compiled = [];\n    for (const sup in sups) {\n      compiled.push(fragments[sup]);\n      compiled.push(<sup key={sup}>{sups[sup]}</sup>);\n    }\n    compiled.push(fragments[fragments.length - 1]);\n    // Finally, join everything into a single string\n    citation = compiled;\n  }\n\n  return (\n    <>\n      {metadata && (\n        <Card className={style.card}>\n          <CardContent className={style['card-content']}>\n            <a className={style.title}>{metadata.NAME || 'Unnamed'}</a>\n            {mdCount > 1 && metadata.mdName && <a className={style.grey}>({metadata.mdName})</a>}\n            <div className={style['summary-list']}>\n              {metadata.TYPE && (\n                <Chip\n                  label={typeSettings[metadata.TYPE].label}\n                  variant=\"outlined\"\n                  style={{\n                    backgroundColor: typeSettings[metadata.TYPE].color,\n                    color: secondaryColor.contrastText,\n                    fontSize: '1em',\n                    marginRight: '0.8em',\n                  }}\n                  className={style.chip}\n                />\n              )}\n              {metadata.METHOD}\n              {metadata.DESCRIPTION && metadata.DESCRIPTION.length > 0 &&\n              <div style={{ display: 'flex', alignItems: 'center' }}>\n                <div className={style['decorated-list-item__title']}>Description</div>\n                <div className={style['decorated-list-item__content']} style={{  wordBreak: 'break-word', borderLeft: `.110rem solid ${secondaryColor.dark}` }}>\n                  {metadata.DESCRIPTION}\n                </div>\n              </div>}\n              {metadata.AUTHORS && metadata.AUTHORS.length > 0 &&\n              <div style={{ display: 'flex', alignItems: 'center' }}>\n                <div className={style['decorated-list-item__title']}>Authors</div>\n                <div className={style['decorated-list-item__content']} style={{ wordBreak: 'break-word', borderLeft: `.110rem solid ${secondaryColor.dark}` }}>\n                  {prettyEnumerate(metadata.AUTHORS)}\n                </div>\n              </div>}\n              {metadata.GROUPS && metadata.GROUPS.length > 0 &&\n              <div style={{ display: 'flex', alignItems: 'center' }}>\n                <div className={style['decorated-list-item__title']}>Groups</div>\n                <div className={style['decorated-list-item__content']} style={{ wordBreak: 'break-word', borderLeft: `.110rem solid ${secondaryColor.dark}` }}>\n                  {prettyEnumerate(metadata.GROUPS)}\n                </div>\n              </div>}\n              {/* Node will exist only in the global API, and the global client has nodes as options */}\n              {HOST_CONFIG.global && node && <div>Node: {HOST_CONFIG.optionsNiceNames[node] || node}</div>}\n              {metadata.CONTACT && metadata.CONTACT.length > 0 &&\n               <div style={{ display: 'flex', alignItems: 'center' }}>\n                <div className={style['decorated-list-item__title']}>Contact</div>\n                <div className={style['decorated-list-item__content']} style={{ wordBreak: 'break-word', borderLeft: `.110rem solid ${secondaryColor.dark}` }}>\n                  {metadata.CONTACT}\n                </div>\n              </div>}\n              {metadata.PROGRAM && metadata.PROGRAM.length > 0 &&\n              <div style={{ display: 'flex', alignItems: 'center' }}>\n                <div className={style['decorated-list-item__title']}>Program</div>\n                <div className={style['decorated-list-item__content']} style={{ borderLeft: `.110rem solid ${secondaryColor.dark}` }}>\n                  {metadata.PROGRAM}\n                </div>\n              </div>}\n              {metadata.VERSION && metadata.VERSION.length > 0 &&\n              <div style={{ display: 'flex', alignItems: 'center' }}>\n                <div className={style['decorated-list-item__title']}>Version</div>\n                <div className={style['decorated-list-item__content']} style={{ borderLeft: `.110rem solid ${secondaryColor.dark}` }}>\n                  {metadata.VERSION}\n                </div>\n              </div>}\n              {metadata.LINKS && metadata.LINKS.length > 0 &&\n              <div style={{ display: 'flex', alignItems: 'center' }}>\n                <div className={style['decorated-list-item__title']}>Links</div>\n                <div className={style['decorated-list-item__content']} style={{ borderLeft: `.110rem solid ${secondaryColor.dark}` }}>\n                {metadata.LINKS.map((link, l) => (\n                  <div key={l}>\n                    {link.name}:{' '}\n                    <a\n                      href={link.url}\n                      target=\"_blank\"\n                      rel=\"noreferrer noopener\"\n                    >\n                      {link.url}\n                    </a>\n                  </div>\n                ))}\n                </div>\n              </div>}\n              {metadata.WARNINGS &&\n                metadata.WARNINGS.map((warning, w) => (\n                  <div key={w} style={{ fontWeight: 'bold' }}>\n                    <FontAwesomeIcon icon={faExclamationTriangle} size={'lg'} />\n                    {' ' + warning.message}\n                  </div>\n                ))}\n            </div>\n          </CardContent>\n        </Card>\n      )}\n      {metadata && Array.isArray(metadata.NUCLSEQ) && metadata.NUCLSEQ.length > 0 && (\n        <Card className={style.card}>\n          <CardContent className={style['card-content']}>\n          <div>\n              <Typography marginBottom={'10px'} variant=\"h6\">Nucleic Sequences:</Typography>\n              {metadata.NUCLSEQ.map((seq, index) => (\n                <div \n                  key={index} \n                  className={style['card-background']}\n                >\n                <Typography variant=\"h6\" style={{ marginBottom: '5px', marginTop: '10px', fontSize: 'inherit' }}>Sequence {index + 1}:</Typography>\n                  <textarea\n                    readOnly\n                    value={seq}\n                    className={style['textarea']}\n                  />\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      )}\n      {metadata && Array.isArray(metadata.PROTSEQ) && metadata.PROTSEQ.length > 0  && (\n        <Card className={style.card}>\n          <CardContent className={style['card-content']}>\n            <div>\n              <Typography marginBottom={'10px'} variant=\"h6\" sx={{ fontSize: '1.4rem' }}>Protein Sequences:</Typography>\n              {metadata.PROTSEQ.map((seq, index) => (\n                <div \n                  key={index} \n                  className={style['card-background']}\n                >\n                <Typography variant=\"h6\" style={{ marginBottom: '5px', marginTop: '10px', fontSize: 'inherit' }} sx={{ fontSize: '1.4rem' }}>Sequence {index + 1}:</Typography>\n                  <textarea\n                    readOnly\n                    value={seq}\n                    className={style['textarea']}\n                  />\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      )}\n      {proteinReferences && proteinReferences.length > 0 && (\n        <Card className={style.card}>\n          <CardContent className={style['horizontal-marginned']}>\n            {proteinReferences.map((reference, i) => (\n              <div key={i}>\n                {i !== 0 && (\n                  <hr style={{ color: 'lightGrey' }} />\n                ) /* An horizontal line to separate references */}\n                <CardContent className={style['vertcial-marginned']}>\n                  <div>\n                    <div className={style['summary-list']}>\n                      <Typography variant=\"h6\" sx={{ fontSize: '1.4rem' }}>{reference.name}</Typography>\n                      <div style={{ display: 'flex', alignItems: 'center' }}>\n                        <div className={style['decorated-list-item__title']}>Gene</div>\n                        <div className={style['decorated-list-item__content']} style={{ borderLeft: `.110rem solid ${secondaryColor.dark}` }}>\n                        {reference.gene && `${reference.gene}`}</div>\n                      </div>\n                      <div style={{ display: 'flex', alignItems: 'center' }}>\n                        <div className={style['decorated-list-item__title']}>Organism</div>\n                        <div className={style['decorated-list-item__content']} style={{ borderLeft: `.110rem solid ${secondaryColor.dark}` }}>\n                          {reference.organism && `${reference.organism}`}\n                        </div>\n                      </div>\n                      <div style={{ display: 'flex', alignItems: 'center' }}>\n                        <div className={style['decorated-list-item__title']}>UniProt ID</div>\n                        <div className={style['decorated-list-item__content']} style={{ borderLeft: `.110rem solid ${secondaryColor.dark}` }}>\n                          {reference.uniprot&& `UniProt ID: `}\n                        <a\n                          href={\n                            'https://www.uniprot.org/uniprotkb/' +\n                            reference.uniprot\n                          }\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          {reference.uniprot}\n                        </a>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </CardContent>\n              </div>\n            ))}\n            {Object.entries(pdbInfo).map(([pdbId, pdbMetadata], i) => {\n              //const pdbId = pdb && pdb._id && pdb._id.toLowerCase();\n              if (!pdbMetadata) return 'PDB ' + pdbId + ' not found';\n              // Mine pdb info\n              const title = pdbMetadata.compound;\n              const experimentalMethod = pdbMetadata.expClass.toLowerCase();\n              const publishDate = new Date(pdbMetadata.ascDate);\n              const keywords = Array.from(\n                new Set((pdbMetadata.header || '').split(COMMA_SEPARATOR)),\n              );\n              const organisms = Array.from(\n                new Set((pdbMetadata.sources || '').split(COMMA_SEPARATOR)),\n              ).filter(organism => organism); // Remove empty organism strings\n              // Set the url to get the pdb image\n              const lowerPdb = pdbId.toLowerCase();\n              const imgSrc = pdbId &&\n                `https://cdn.rcsb.org/images/structures/${lowerPdb.substr(1, 2)}/${lowerPdb}/${lowerPdb}_assembly-1.jpeg`;\n              // Get the PDBBind URL from the RCSB data\n              const PDBBindExists  = pdbBindInfo[pdbId];\n              return (\n                <div key={i}>\n                  {i !== 0 && <hr style={{ color: 'lightGrey' }} />}\n                  <CardContent className={style['vertcial-marginned']} style={{ minHeight: 380, marginTop: '-1rem' }}>\n                    <div>\n                      <LazyImg\n                        src={imgSrc}\n                        width=\"350\"\n                        height=\"350\"\n                        loading=\"lazy\"\n                        alt={`3D view of the ${pdbId} structure`}\n                      />\n                      <div className={style['summary-list']}>\n                        <Typography variant=\"h6\" sx={{ fontSize: '1.2rem' }}>{title}</Typography>\n                        <div style={{ display: 'flex', alignItems: 'center' }}>\n                        <div className={style['decorated-list-item__title']}>PDB Accession</div>\n                        <div className={style['decorated-list-item__content']} style={{ borderLeft: `.110rem solid ${secondaryColor.dark}` }}>\n                          {pdbId}\n                          {pdbMetadata.replaces &&\n                            ` (replaces ${pdbMetadata.replaces})`}\n                        </div>\n                        </div>\n                        <div>\n                          {pdbMetadata.status &&\n                            pdbMetadata.status !== 'CURRENT' &&\n                            `Status: ${pdbMetadata.status}`}\n                        </div>\n                        <div style={{ display: 'flex', alignItems: 'center' }}>\n                          <div className={style['decorated-list-item__title']}>Experimental method</div>\n                          <div className={style['decorated-list-item__content']} style={{ borderLeft: `.110rem solid ${secondaryColor.dark}` }}>\n                          {experimentalMethod}\n                          </div>\n                        </div>\n                        <div>\n                          <div style={{ display: 'flex', alignItems: 'center' }}>\n                            <div className={style['decorated-list-item__title']}>\n                              Organism\n                          {organisms.length > 1 && 's'}{' '}\n                            </div>\n                            <div className={style['decorated-list-item__content']} style={{ paddingLeft: '0rem' }}>\n                              {organisms.length > 0 ? organisms.map((organism, o) => (\n                                <Chip\n                                  key={o}\n                                  label={organism}\n                                  variant=\"outlined\"\n                                  sx={{\n                                    color: secondaryColor.dark,\n                                    borderColor: secondaryColor.dark\n                                  }}                                \n                                  className={style.chip}\n                                />\n                              )) : <span className={style['grey']}>not available</span>}\n                            </div>\n                          </div>\n                        </div>\n                        <div style={{ display: 'flex', alignItems: 'center' }}>\n                          <div className={style['decorated-list-item__title']}>Keyword</div>\n                          <div className={style['decorated-list-item__content']} style={{ paddingLeft: '0rem' }}> \n                          {keywords.length > 1 && 's'}{' '}\n                          {keywords.map((keyword, k) => (\n                            <Chip\n                              key={k}\n                              label={keyword}\n                              variant=\"outlined\"\n                              sx={{\n                                color: secondaryColor.dark,\n                                borderColor: secondaryColor.dark\n                              }}                            \n                              className={style.chip}\n                            />\n                          ))}\n                        </div>\n                        </div>\n                        <div style={{ display: 'flex', alignItems: 'center' }}>\n                          <div className={style['decorated-list-item__title']} style={{flexBasis: '12vw'}}>Publication date:</div>\n                          <div className={style['decorated-list-item__content']} style={{ paddingLeft: '0rem' }}>\n                          <time dateTime={publishDate.toISOString()}>\n                            {publishDate.toDateString()}\n                          </time>\n                        </div>\n                        </div>\n                      </div>\n                    </div>\n                    <CardActions>\n                    <Button\n                        component=\"a\"\n                        variant=\"contained\"\n                        href={`https://www.ebi.ac.uk/pdbe/entry/pdb/${pdbId}`}\n                        size=\"small\"\n                        sx={{\n                          backgroundColor: secondaryColor.dark,\n                          border: `1px solid ${secondaryColor.dark}`,\n                          color: '#000',\n                          '&:hover': {\n                            backgroundColor: secondaryColor.main,\n                            border: `1px solid ${secondaryColor.main}`,\n                          }\n                        }}\n                        target=\"_blank\"\n                        rel=\"noreferrer noopener\"\n                      >\n                        <FontAwesomeIcon icon={faLink} />\n                        &nbsp;PDBe website\n                      </Button>\n                      <Button\n                        component={'a'}\n                        variant=\"contained\"\n                        href={`https://www.rcsb.org/structure/${pdbId}`}\n                        size=\"small\"\n                        sx={{\n                          backgroundColor: secondaryColor.dark,\n                          border: `1px solid ${secondaryColor.dark}`,\n                          color: '#000',\n                          '&:hover': {\n                            backgroundColor: secondaryColor.main,\n                            border: `1px solid ${secondaryColor.main}`,\n                          }\n                        }}\n                        target=\"_blank\"\n                        rel=\"noreferrer noopener\"\n                      >\n                        <FontAwesomeIcon icon={faLink} />\n                        &nbsp;RCSB website\n                      </Button>\n                      <Button\n                        component={'a'}\n                        variant=\"contained\"\n                        href={`https://3dbionotes-ws.cnb.csic.es/?queryId=${pdbId}`}\n                        size=\"small\"\n                        sx={{\n                          backgroundColor: secondaryColor.dark,\n                          border: `1px solid ${secondaryColor.dark}`,\n                          color: '#000',\n                          '&:hover': {\n                            backgroundColor: secondaryColor.main,\n                            border: `1px solid ${secondaryColor.main}`,\n                          }\n                        }}\n                        target=\"_blank\"\n                        rel=\"noreferrer noopener\"\n                      >\n                        <FontAwesomeIcon icon={faLink} />\n                        &nbsp;3DBIONOTES\n                      </Button>\n                      {PDBBindExists && <Button\n                        component={'a'}\n                        variant=\"contained\"\n                        href={`https://www.pdbbind-plus.org.cn/browse/${pdbId}`}\n                        size=\"small\"\n                        sx={{\n                          backgroundColor: secondaryColor.dark,\n                          border: `1px solid ${secondaryColor.dark}`,\n                          color: '#000',\n                          '&:hover': {\n                            backgroundColor: secondaryColor.main,\n                            border: `1px solid ${secondaryColor.main}`,\n                          }\n                        }}\n                        target=\"_blank\"\n                        rel=\"noreferrer noopener\"\n                      >\n                        <FontAwesomeIcon icon={faLink} />\n                        &nbsp;PDBBind\n                      </Button>}\n                    </CardActions>\n                  </CardContent>\n                </div>\n              );\n            })}\n          </CardContent>\n        </Card>\n      )}\n      {Object.keys(pubchemInfo).length > 0 &&\n        <Card className={style.card}>\n          <CardContent className={style['card-content']}>\n            {Object.entries(pubchemInfo).map(([pubchemId, pubchemData], i) => {\n              const ligandReference = ligandReferences && ligandReferences.find(ref => ref.pubchem === pubchemId);\n              return(\n                <div key={i} className={style['summary-list']}>\n                  {i !== 0 && (\n                    <hr style={{ color: 'lightGrey' }} />\n                  ) /* An horizontal line to separate protein references */}\n                  <LazyImg\n                    src={`https://pubchem.ncbi.nlm.nih.gov/image/imgsrv.fcgi?cid=${pubchemId}&t=l`}\n                    width=\"250\" height=\"250\" loading=\"lazy\"\n                    alt={`3D view of the ${pubchemData.name} structure`}\n                    // cross origin and referrer policy should prevent pubchem cookies\n                    crossOrigin=\"anonymous\" referrerPolicy=\"no-referrer\"\n                    // default background color is like a \"broken\" white but this CSS trick fixes it\n                    // this was recommended by people from pubchem\n                    className={style['white-background']}\n                  />\n                  <Typography variant=\"h6\" sx={{ fontSize: '1.4rem' }}>{pubchemData.name}</Typography>\n                  <div style={{ display: 'flex', alignItems: 'center' }}>\n                  <div className={style[\"decorated-list-item__title\"]}>Pubchem ID</div>\n                    <div className={style[\"decorated-list-item__content\"]} style={{ borderLeft: `.110rem solid ${secondaryColor.dark}` }}>\n                    <a href={`https://pubchem.ncbi.nlm.nih.gov/compound/${pubchemId}`}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      {pubchemId}\n                    </a>\n                    </div>\n                  </div>\n                  <div style={{ display: 'flex', alignItems: 'center' }}>\n                    <div className={style[\"decorated-list-item__title\"]}>Molecular Formula</div>\n                    <div className={style[\"decorated-list-item__content\"]} style={{ borderLeft: `.110rem solid ${secondaryColor.dark}` }}>\n                      {ligandReference && ligandReference.formula.toString().split('').map((char, index) => {\n                        if (char.match(/[A-Z]/)) {\n                          return <span key={index} style={{ fontSize: '1.1em' }}>{char}</span>;\n                        } else if (char.match(/[0-9]/)) {\n                          return <sub key={index} style={{ fontSize: '0.9em' }}>{char}</sub>;\n                        } else {\n                          return char;\n                        }\n                      })}\n                    </div>\n                  </div>\n                  <div style={{ display: 'flex', alignItems: 'center' }}>\n                    {ligandReference && ligandReference.smiles && <>\n                      <div className={style[\"decorated-list-item__title\"]}>SMILES</div>\n                      <div className={style[\"decorated-list-item__content\"]} style={{ borderLeft: `.110rem solid ${secondaryColor.dark}` }}>\n                        <SmilesViewer ligandReference={ligandReference}/>\n                      </div>\n                      </>\n                      }\n                  </div>\n                  <div style={{ display: 'flex', alignItems: 'center' }}>\n                    {ligandReference && ligandReference.inchi && <>\n                      <div className={style[\"decorated-list-item__title\"]}>InChI</div>\n                      <div className={style[\"decorated-list-item__content\"]} style={{ borderLeft: `.110rem solid ${secondaryColor.dark}` }}>\n                        <InchiViewer ligandReference={ligandReference}/>\n                      </div>\n                      </>\n                      }\n                  </div>\n                  <div style={{ display: 'flex', alignItems: 'center' }}>\n                    {ligandReference && ligandReference.inchikey && <>\n                      <div className={style[\"decorated-list-item__title\"]}>InChIKey</div>\n                      <div className={style[\"decorated-list-item__content\"]} style={{ borderLeft: `.110rem solid ${secondaryColor.dark}` }}>\n                        {ligandReference.inchikey}\n                      </div>\n                      </>\n                      }\n                  </div>\n                  <div>\n                  {pubchemData.chemblID && (<div style={{ display: 'flex', alignItems: 'center' }}>\n                    <div className={style[\"decorated-list-item__title\"]}>ChEMBL ID</div>\n                    <div className={style[\"decorated-list-item__content\"]} style={{ borderLeft: `.110rem solid ${secondaryColor.dark}` }}>\n                    <a href={pubchemData.chemblURL}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      {pubchemData.chemblID}\n                    </a>\n                    </div>\n                  </div>)}\n                  </div>\n                  <div>\n                  {pubchemData.drugbankID && (<div style={{ display: 'flex', alignItems: 'center' }}>\n                    <div className={style[\"decorated-list-item__title\"]}>DrugBank ID</div>\n                    <div className={style[\"decorated-list-item__content\"]} style={{ borderLeft: `.110rem solid ${secondaryColor.dark}` }}>\n                    <a href={pubchemData.drugbankURL}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      {pubchemData.drugbankID}\n                    </a>\n                    </div>\n                  </div>)}\n                  </div>\n                  <div>\n                    {ligandReference?.mordred || ligandReference?.morgan_fp_bit_array ? (\n                      <>\n                        <Button onClick={() => handleSeeMore(pubchemId)} \n                        variant='outlined' \n                        style={{ marginTop: '10px', marginBottom: '10px', marginLeft: '1rem' }}\n                        sx={{\n                          backgroundColor: secondaryColor.main,\n                          border: `1px solid ${secondaryColor.dark}`,\n                          color: '#000',\n                          '&:hover': {\n                            backgroundColor: secondaryColor.light,\n                            border: `1px solid ${secondaryColor.dark}`,\n                          }\n                        }}\n                        >\n                          Ligand Descriptors\n                        </Button>\n                        {showTable.has(pubchemId) && (\n                          <Card className={style.card}>\n                              <div style={{ display: \"flex\" }}>                            \n                              {ligandReference.mordred ? (\n                                <div style={{ flex: 1, width: \"40%\", textAlign: \"center\" }}>\n                                  <Typography variant=\"h6\" className={style.title}>\n                                    Mordred Descriptors\n                                    {mordredDoc && mordredDoc.page && (\n                                      <Info tooltip={mordredTooltip} className={style.info} sx={{color: primaryDarkColor}}/>\n                                    )}\n                                  </Typography>\n                                  <LigandTable ligandReference={ligandReference} type=\"mordred\"/>\n                                </div>\n                              ) : <></>}\n                              {ligandReference.morgan_fp_bit_array ? (\n                                <div style={{ flex: 1, width: \"60%\", textAlign: \"center\" }}>\n                                  <Typography variant=\"h6\" className={style.title}>\n                                    Morgan Fingerprint\n                                    {morganDoc && morganDoc.page && (\n                                      <Info tooltip={morganTooltip} className={style.info} sx={{color: primaryDarkColor}}/>\n                                    )}\n                                  </Typography>\n                                  <MoleculeViewer smiles={ligandReference.smiles} \n                                  fingerprintData={ligandReference.morgan_highlight_atoms}\n                                  mol_block={ligandReference.mol_block}/>\n                                  {ligandReference.morgan_fp_bit_array && (\n                                    <div>\n                                      <Button onClick={() => showMorganFPArray(pubchemId)} \n                                      variant='outlined' \n                                      style={{ marginTop: '10px', marginBottom: '10px' }}\n                                      sx={{\n                                        backgroundColor: secondaryColor.main,\n                                        border: `1px solid ${secondaryColor.dark}`,\n                                        color: '#000',\n                                        '&:hover': {\n                                          backgroundColor: secondaryColor.light,\n                                          border: `1px solid ${secondaryColor.dark}`,\n                                        }\n                                      }}\n                                      >\n                                        Show Morgan Fingerprint Array\n                                      </Button>\n                                      {selectedFP.has(pubchemId) && (\n                                        <div>\n                                          <textarea\n                                            readOnly\n                                            value={ligandReference.morgan_fp_bit_array}\n                                            className={style['textarea']}\n                                          />\n                                        </div>\n                                      )}\n                                    </div>\n                                  )}\n                                </div>\n                              ) : (\n                                <div style={{ flex: 1, width: \"60%\", textAlign: \"center\" }}>\n                                  <h4>Morgan Fingerprint not available</h4>\n                                </div>\n                              )}\n                          </div>\n                            </Card>\n                          )}\n                        </>\n                      ) : (\n                        <p>No descriptors available</p>\n                      )}\n                  </div>\n                  {ligandReference && ligandReference.pdbid && (<div>\n                    <CardActions>\n                      <Button\n                            component={'a'}\n                            variant=\"contained\"\n                            href={`https://www.ebi.ac.uk/pdbe-srv/pdbechem/chemicalCompound/show/${ligandReference.pdbid}`}\n                            size=\"small\"\n                            target=\"_blank\"\n                            rel=\"noreferrer noopener\"\n                            sx={{\n                              backgroundColor: secondaryColor.dark,\n                              border: `1px solid ${secondaryColor.dark}`,\n                              color: '#000',\n                              '&:hover': {\n                                backgroundColor: secondaryColor.main,\n                                border: `1px solid ${secondaryColor.main}`,\n                              }\n                            }}\n                          >\n                            <FontAwesomeIcon icon={faLink} />\n                            &nbsp;PDBe website\n                          </Button>\n                          <Button\n                            component={'a'}\n                            variant=\"contained\"\n                            href={`https://www.rcsb.org/ligand/${ligandReference.pdbid}`}\n                            size=\"small\"\n                            target=\"_blank\"\n                            rel=\"noreferrer noopener\"\n                            sx={{\n                              backgroundColor: secondaryColor.dark,\n                              border: `1px solid ${secondaryColor.dark}`,\n                              color: '#000',\n                              '&:hover': {\n                                backgroundColor: secondaryColor.main,\n                                border: `1px solid ${secondaryColor.main}`,\n                              }\n                            }}\n                          >\n                            <FontAwesomeIcon icon={faLink} />\n                            &nbsp;RCSB website\n                          </Button>\n                      </CardActions>\n                  </div>)}\n                </div>\n              );\n            })}\n          </CardContent>\n        </Card>\n      }\n      <Card className={style.card}>\n        <CardContent className={style['card-content']}>\n          <Typography variant=\"h6\">License</Typography>\n          <div className={style['summary-list']}>\n            <div>{(metadata && metadata.LICENSE) || 'Not available'}</div>\n            <a\n              href={metadata && metadata.LINKCENSE}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {metadata && metadata.LINKCENSE && 'More information'}\n            </a>\n          </div>\n        </CardContent>\n        {citation && (\n          <CardContent className={style['card-content']}>\n            <Typography variant=\"h6\">Citation</Typography>\n            <div className={style['summary-list']}>\n              <div>\n                The use of any trajectory data in any reports or publications of\n                results obtained with the trajectory data should be acknowledged\n                by including a citation to:\n              </div>\n              <div>{citation}</div>\n            </div>\n          </CardContent>\n        )}\n        {metadata.THANKS && (\n          <CardContent className={style['card-content']}>\n            <Typography variant=\"h6\">Acknowledgements</Typography>\n            <div className={style['summary-list']}>\n              <div>{metadata.THANKS}</div>\n            </div>\n          </CardContent>\n        )}\n        <CardContent className={style['card-content']}>\n          <Typography variant=\"h6\">Project information</Typography>\n          <div className={style['summary-list']}>\n          <div style={{ display: 'flex', alignItems: 'center' }}>\n             <div className={style['decorated-list-item__title']} style={{flexBasis: '16vw'}}>Public project accession:</div>\n             <div className={style['decorated-list-item__content']} style={{ paddingLeft: '0rem' }}>\n              {accession || <code>not assigned</code>}\n            </div>\n          </div>\n          <div style={{ display: 'flex', alignItems: 'center' }}>\n             <div className={style['decorated-list-item__title']} style={{flexBasis: '16vw'}}>Internal project identifier:</div>\n             <div className={style['decorated-list-item__content']} style={{ paddingLeft: '0rem' }}>\n              {identifier}\n            </div>\n          </div>\n          <div style={{ display: 'flex', alignItems: 'center' }}>\n             <div className={style['decorated-list-item__title']} style={{ flexBasis: '16vw'}}>Status:</div>\n             <div className={style['decorated-list-item__content']} style={{ paddingLeft: '0rem' }}>\n             {published ? 'published' : 'unpublished'}\n            </div>\n          </div>\n          <div style={{ display: 'flex', alignItems: 'center' }}>\n             <div className={style['decorated-list-item__title']} style={{flexBasis: '16vw'}}>Addition date:</div>\n             <div className={style['decorated-list-item__content']} style={{ paddingLeft: '0rem' }}>\n             {creationDate ? creationDate : 'Not available'}\n            </div>\n          </div>\n          <div style={{ display: 'flex', alignItems: 'center' }}>\n            <div className={style['decorated-list-item__title']} style={{flexBasis: '16vw'}}>Last modification:</div>\n            <div className={style['decorated-list-item__content']} style={{ paddingLeft: '0rem' }}>\n              {updateDate ? updateDate : (creationDate ? creationDate : 'Not available')}\n            </div>\n          </div>\n          </div>\n        </CardContent>\n      </Card>\n    </>\n  );\n});\n\nOverview.displayName = 'Overview';\nexport default Overview;\n"],"names":["KEYFRAMES","opacity","reducedMotion","transform","ANIMATION_OPTIONS","fill","easing","duration","forwardRef","_ref","ref","overrideComponent","props","containerRef","useRef","useLayoutEffect","node","current","firstElementChild","animate","index","Array","from","document","querySelectorAll","findIndex","section","animation","delay","cancel","Component","Card","_jsx","className","style","children","component","getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardRoot","styled","Paper","name","overridesResolver","styles","root","overflow","React","inProps","useDefaultProps","raised","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","clsx","elevation","undefined","getTableContainerUtilityClass","TableContainerRoot","width","overflowX","as","getCardActionsUtilityClass","CardActionsRoot","disableSpacing","spacing","display","alignItems","padding","marginLeft","slots","prettyEnumerate","array","length","slice","join","RDKit","load","this","Promise","resolve","reject","window","script","createElement","src","async","onload","RDKitModule","initRDKitModule","console","log","version","error","onerror","Error","body","appendChild","smiles","fingerprintData","mol_block","setRDKit","useState","selectedBit","setSelectedBit","highlightAtoms","setHighlightAtoms","canvasRef","useEffect","RDKitHandler","then","module","catch","isArray","Object","keys","mol","get_mol","canvas","getContext","clearRect","height","innerWidth","innerHeight","draw_to_canvas_with_highlights","JSON","stringify","atoms","highlightRadius","highlightColor","addAtomIndices","explicitMethyl","_jsxs","maxWidth","marginTop","htmlFor","marginBottom","id","onChange","e","parseInt","target","value","map","bit","COMMA_SEPARATOR","LigandTable","ligandReference","searchTerm","setSearchTerm","page","setPage","rowsPerPage","setRowsPerPage","mordredData","mordred","rows","entries","_ref2","key","toFixed","String","emptyRows","Math","max","filteredRows","filter","_ref3","toLowerCase","includes","toString","sx","boxShadow","margin","borderCollapse","TextField","label","variant","fullWidth","size","event","TableContainer","Table","TableHead","TableRow","TableCell","fontWeight","textAlign","TableBody","_ref4","border","colSpan","TablePagination","rowsPerPageOptions","count","onPageChange","handleChangePage","_","newPage","onRowsPerPageChange","fontSize","Overview","accession","identifier","published","metadata","ligandReferences","proteinReferences","mdCount","creationDate","updateDate","useContext","ProjectCtx","showTable","setShowTable","Set","selectedFP","setSelectedFP","InchiViewer","_ref5","expanded","setExpanded","inchi","displayText","substring","split","char","onClick","toggleExpand","borderRadius","cursor","theme","useTheme","secondaryColor","palette","secondary","primaryDarkColor","primary","dark","typeSettings","trajectory","color","main","ensemble","SmilesViewer","_ref6","mordredDoc","docs","find","doc","mordredTooltip","_Fragment","href","rel","morganDoc","morganTooltip","pdbIds","PDBIDS","pdbInfo","setPdbInfo","requests","forEach","pdbId","url","request","https","response","on","chunk","data","parse","previous","push","abort","pdbBindInfo","setPdbBindInfo","exists","destroy","pubchemIds","LIGANDS","pubchemInfo","setPubchemInfo","citation","pubchemId","pubchemAPIurl","sourceData","record","Record","RecordTitle","forcedLigandName","LIGANDNAMES","reference","Reference","chemblReference","SourceName","chemblURL","URL","chemblSplits","chemblID","drugbankReference","drugbankURL","drugbankSplits","drugbankID","CITATION","replace","pattern","sups","sup","exec","fragments","compiled","card","CardContent","title","NAME","mdName","grey","TYPE","Chip","backgroundColor","contrastText","marginRight","chip","METHOD","DESCRIPTION","wordBreak","borderLeft","AUTHORS","GROUPS","HOST_CONFIG","global","optionsNiceNames","CONTACT","PROGRAM","VERSION","LINKS","link","l","WARNINGS","warning","w","FontAwesomeIcon","icon","faExclamationTriangle","message","NUCLSEQ","Typography","seq","readOnly","PROTSEQ","i","gene","organism","uniprot","_ref7","pdbMetadata","compound","experimentalMethod","expClass","publishDate","Date","ascDate","keywords","header","organisms","sources","lowerPdb","imgSrc","substr","PDBBindExists","minHeight","LazyImg","loading","alt","replaces","status","paddingLeft","o","borderColor","keyword","k","flexBasis","dateTime","toISOString","toDateString","CardActions","Button","faLink","_ref8","pubchemData","pubchem","crossOrigin","referrerPolicy","formula","match","inchikey","morgan_fp_bit_array","prev","newShowTable","has","delete","add","handleSeeMore","light","flex","Info","tooltip","info","type","MoleculeViewer","morgan_highlight_atoms","newSelectedFP","showMorganFPArray","pdbid","LICENSE","LINKCENSE","THANKS","displayName"],"sourceRoot":""}