{"version":3,"file":"static/js/9302.eab06358.chunk.js","mappings":"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","sources":["../node_modules/lodash-es/_baseToString.js","../node_modules/lodash-es/toString.js","../node_modules/lodash-es/toInteger.js","../node_modules/lodash-es/_createRound.js","../node_modules/lodash-es/round.js","../node_modules/lodash-es/_arrayMap.js","webpack://mdposit/./src/components/animated-card/style.module.css?d4d9","components/animated-card/index.js","../node_modules/lodash-es/isArray.js","webpack://mdposit/./src/components/viewer-spawner/style.module.css?df6e","components/viewer-spawner/index.js","webpack://mdposit/./src/pages/accession/pca/style.module.css?8369","../node_modules/lodash-es/noop.js","webpack://mdposit/./src/components/eigenvalue-graph/style.module.css?cb8d","components/eigenvalue-graph/index.js","pages/accession/pca/index.js","pages/accession/pca/plain-text-explanation/index.js"],"sourcesContent":["import Symbol from './_Symbol.js';\nimport arrayMap from './_arrayMap.js';\nimport isArray from './isArray.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nexport default baseToString;\n","import baseToString from './_baseToString.js';\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nexport default toString;\n","import toFinite from './toFinite.js';\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nexport default toInteger;\n","import root from './_root.js';\nimport toInteger from './toInteger.js';\nimport toNumber from './toNumber.js';\nimport toString from './toString.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsFinite = root.isFinite,\n    nativeMin = Math.min;\n\n/**\n * Creates a function like `_.round`.\n *\n * @private\n * @param {string} methodName The name of the `Math` method to use when rounding.\n * @returns {Function} Returns the new round function.\n */\nfunction createRound(methodName) {\n  var func = Math[methodName];\n  return function(number, precision) {\n    number = toNumber(number);\n    precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n    if (precision && nativeIsFinite(number)) {\n      // Shift with exponential notation to avoid floating-point issues.\n      // See [MDN](https://mdn.io/round#Examples) for more details.\n      var pair = (toString(number) + 'e').split('e'),\n          value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n      pair = (toString(value) + 'e').split('e');\n      return +(pair[0] + 'e' + (+pair[1] - precision));\n    }\n    return func(number);\n  };\n}\n\nexport default createRound;\n","import createRound from './_createRound.js';\n\n/**\n * Computes `number` rounded to `precision`.\n *\n * @static\n * @memberOf _\n * @since 3.10.0\n * @category Math\n * @param {number} number The number to round.\n * @param {number} [precision=0] The precision to round to.\n * @returns {number} Returns the rounded number.\n * @example\n *\n * _.round(4.006);\n * // => 4\n *\n * _.round(4.006, 2);\n * // => 4.01\n *\n * _.round(4060, -2);\n * // => 4100\n */\nvar round = createRound('round');\n\nexport default round;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nexport default arrayMap;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"style_container__M9GCG\"};","import React, { useLayoutEffect, useRef, forwardRef } from 'react';\nimport { Card } from '@mui/material';\n\nimport reducedMotion from '../../utils/reduced-motion';\n\nimport style from './style.module.css';\n\nconst KEYFRAMES = { opacity: [0, 1] };\n\nif (!reducedMotion()) {\n  KEYFRAMES.transform = ['translateY(50px)', 'translateY(0)'];\n}\n\nconst ANIMATION_OPTIONS = {\n  fill: 'both',\n  easing: 'cubic-bezier(0, .99, .56, 1.1)',\n  duration: 500,\n};\n\n// Make the card appear and slide softly from down to up when the page is loaded\nconst AnimatedCard = forwardRef(({ overrideComponent, ...props }, ref) => {\n  const containerRef = useRef(null);\n\n  useLayoutEffect(() => {\n    const node = containerRef.current && containerRef.current.firstElementChild;\n    if (!(node && node.animate)) return;\n\n    const index = Array.from(\n      document.querySelectorAll('main section'),\n    ).findIndex(section => node === section);\n\n    const animation = node.animate(KEYFRAMES, {\n      ...ANIMATION_OPTIONS,\n      delay: index * 150,\n    });\n\n    return () => animation.cancel();\n  }, []);\n\n  const Component = overrideComponent ? 'section' : Card;\n\n  return (\n    <div ref={containerRef} className={style.container}>\n      <Component component=\"section\" {...props} ref={ref} />\n    </div>\n  );\n});\n\nexport default AnimatedCard;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nexport default isArray;\n","// extracted by mini-css-extract-plugin\nexport default {\"rnd\":\"style_rnd__Txifm\",\"floating-card\":\"style_floating-card__HHpby\"};","import React, { lazy, Suspense, useRef, useState } from 'react';\n\n// Rnd is the resizable and draggable system where the ngl viewer is placed\nimport { Rnd } from 'react-rnd';\n\nimport Card from '../animated-card';\n\nimport style from './style.module.css';\n\nconst ViewerWithControls = lazy(() =>\n  import(\n    /* webpackChunkName: 'viewer-with-controls' */ '../viewer-with-controls'\n  ),\n);\n\n// Minimal ngl window height\nconst MIN_NGL_DIMENSION = 150;\n\n// Counter to get always the maximum zIndex\n// This is useful to set a new or currently dragged/resized ngl window over the others\nlet maxZ = 0;\nconst nextZ = () => {\n  maxZ += 1;\n  return maxZ;\n};\n\n// This function spawns all the NGL viewers needed\n// i.e. one viewer with the requested 'props' and all previous viewers which have been nailed\nconst ViewerSpawner = ({ newViewer, nailing = true, onNail, onClose }) => {\n  // Store here all nailed NGL viewers\n  const [nailedViewers, setNailedViewers] = useState([]);\n\n  // Set the viewers as the nailed viewers and the new viewer\n  const viewers = [...nailedViewers];\n\n  // Keep listed all arrays which have been used (i.e. ngl viewers which have been nailed or closed)\n  const usedIds = useRef([]);\n\n  if (newViewer) {\n    // Find a new suitable Id that meet 2 conditions:\n    // - There is never 2 viewers with the same id, so we avoid errors\n    // - If we pick diferent frames in the graph without nailing anything, the current viewer has always the same id\n    // (This way the current viewer does not appear in the origin position every time)\n    const getNewId = () => {\n      let id = 0;\n      while (id < 999) {\n        if (usedIds.current.indexOf(id) === -1) return id;\n        id += 1;\n      }\n      console.error('Maximum number of viewers reached');\n    };\n\n    // Set a unique id for this props based in the last nailed viewer\n    newViewer.id = getNewId();\n    newViewer.close = () => {\n      if (nailing) {\n        setNailedViewers(nailed => {\n          const newNailed = [...nailed];\n          const index = nailed.indexOf(newViewer);\n          if (index !== -1) newNailed.splice(index, 1);\n          return newNailed;\n        });\n      }\n      if (onClose) onClose(newViewer);\n      usedIds.current.push(newViewer.id);\n    };\n    // If the nailer function is passed, add the logic for the viewer to be nailed further\n    if (nailing)\n      newViewer.nail = () => {\n        setNailedViewers(nailed => [...nailed, newViewer]);\n        if (onNail) onNail(newViewer);\n        usedIds.current.push(newViewer.id);\n      };\n    // Add the current viewer to the viewers list\n    viewers.push(newViewer);\n  }\n\n  // Render a viewer for each prop. Use the 'selected' parameter as unique id\n  return viewers.map(viewer => <NGLViewerInDND key={viewer.id} {...viewer} />);\n};\n\n// This component render a small NGL viewer\n// It is called when user clicks in a point in the projections component\n// Also it is called by the generic analysis page\nconst NGLViewerInDND = props => {\n  // Set a reference for the viewer\n  // If a reference is passed among the viewer arguments then use it instead\n  const viewerRef = props.viewerRef || useRef(null);\n\n  // Set the default position and size\n  const [place, setPlace] = useState(() => {\n    // Set an extra margin\n    const MARGIN = 20;\n    // Get the screen pixel sizes and vertical scroll position\n    const { innerWidth, innerHeight, scrollY } = window;\n    // The spawned elements are parented to the 'main' element, not to the 'body'\n    // We have to take this in count, since the header adds an extra offset in vertical position\n    const offsetHeight = document.querySelector('main').offsetTop;\n    // Set a reasonable dimension for the ngl window\n    const dimension = Math.max(\n      Math.min(innerWidth / 4, innerHeight / 4),\n      MIN_NGL_DIMENSION,\n    );\n    const reasonableHeight = 1.5 * dimension;\n    const reasonableWidth = 2 * dimension;\n    return {\n      // WARNING: If you set the width as 'auto' the window stays very wide when exiting fullscreen\n      width: reasonableWidth, // Let the Rnd logic set the width automatically\n      height: reasonableHeight, // Reasonable height\n      x: 0, // Left border\n      y: innerHeight - offsetHeight - reasonableHeight - MARGIN + scrollY, // Bottom border\n    };\n  });\n\n  return (\n    // Rnd is the draggable and resizable system where the ngl viewer is placed\n    <Rnd\n      position={{ x: place.x, y: place.y }}\n      size={{ width: place.width, height: place.height }}\n      // Update the zIndex to make this window the first visible\n      style={{ zIndex: nextZ() }}\n      className={style.rnd}\n      data-rnd\n      // Limits where the window can be dragged/resized to\n      // WARNING: bounds=\"main\" is problematic since the window may appear out of bounds\n      // WARNING: Then when it is moved for the first time it jumps inside the bonds, not elegant\n      bounds=\"window\"\n      // Prevent the mouse to drag/resize the window when it is over specific elements\n      cancel=\"canvas, [data-popover], #preventDragSize, .prevent-drag\"\n      // On drag/resize starts we do not change anything, but use the hook to re-render this component\n      // The Z Index is updated and the selected window becomes the first in the z axis automatically\n      // WARNING: Drag functions are also called when you just click (e.g. clicking buttons)\n      onDragStart={() => {\n        setPlace({ ...place });\n      }}\n      onResizeStart={() => {\n        setPlace({ ...place });\n      }}\n      onDragStop={(e, d) => {\n        // Use this to reject some bugged event calls: e.g. the frames number selector\n        if (e.layerX === 0 && e.layerY === 0) return;\n        // We re-render only if the new position does not equal the old position\n        if (place.x !== d.x || place.y !== d.y)\n          setPlace({\n            ...place,\n            x: d.x,\n            y: d.y,\n          });\n      }}\n      // Re-adapt the viewer and update the position/size when the window is resized\n      onResize={() => viewerRef.current && viewerRef.current.autoResize()}\n      onResizeStop={(e, direction, ref, delta, position) => {\n        setPlace({\n          width: ref.style.width,\n          height: ref.style.height,\n          ...position,\n        });\n        // if (!viewerRef.current) return;\n        // viewerRef.current.autoResize();\n        // viewerRef.current.autoResize.flush();\n      }}\n    >\n      <Card className={style['floating-card']} elevation={4}>\n        <Suspense fallback={null}>\n          <ViewerWithControls\n            className={style['floating-card']}\n            ref={viewerRef}\n            startsPlaying={false}\n            {...props}\n          />\n        </Suspense>\n      </Card>\n    </Rnd>\n  );\n};\n\nexport default ViewerSpawner;\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"style_card__6C+Fc\",\"ngl-card\":\"style_ngl-card__+pU8V\",\"placeholder\":\"style_placeholder__2w0--\",\"projection\":\"style_projection__v0o3I\",\"viewer-with-controls\":\"style_viewer-with-controls__nFIv5\"};","/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nexport default noop;\n","// extracted by mini-css-extract-plugin\nexport default {\"delete\":\"style_delete__BYITu\",\"graph-container\":\"style_graph-container__2Y--C\",\"axis\":\"style_axis__z8ryu\",\"bar-legend\":\"style_bar-legend__joJyl\",\"visual\":\"style_visual__S4w3g\",\"bars\":\"style_bars__p3cKG\",\"has-projection\":\"style_has-projection__R+xxb\",\"projected\":\"style_projected__M7dqT\",\"target\":\"style_target__Kzgs+\",\"explanation\":\"style_explanation__kphn8\",\"top-line\":\"style_top-line__WYRxq\",\"area\":\"style_area__BwFoU\",\"tooltip\":\"style_tooltip__ZrzAO\"};","import React, { useRef, useEffect } from 'react';\nimport { noop, round } from 'lodash-es';\nimport {\n  select,\n  scaleLinear,\n  scaleBand,\n  line,\n  area,\n  axisBottom,\n  axisLeft,\n  axisRight,\n  //event, // This is used to know the mouse cursor position\n  easeBackOut,\n} from 'd3';\n\nimport {\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  Button,\n} from '@mui/material';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt } from '@fortawesome/free-regular-svg-icons';\n\nimport reducedMotion from '../../utils/reduced-motion';\n\nimport style from './style.module.css';\n\nconst MARGIN = { top: 20, right: 40, bottom: 20, left: 30 };\nconst MIN_DISPLAY_INDEX = 14; // display at least 14 components\nconst MIN_DISPLAY_EXPL = 0.8; // display at least components for 80% explanation\n\nconst EigenvalueGraph = ({\n  eigenvalues,\n  totalEigenvalue,\n  projectionsData,\n  projections = [],\n  setProjections,\n}) => {\n  const containerRef = useRef(null);\n  const tooltipRef = useRef(null);\n  const drawRef = useRef(noop);\n  const processedRef = useRef(null);\n\n  // should only be run once\n  useEffect(() => {\n    const graph = select(containerRef.current).append('svg');\n    graph\n      .append('defs')\n      .append('clipPath')\n      .attr('id', 'clip-reveal')\n      .append('rect')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', '100%')\n      .attr('width', 0)\n      // transition on first display, uncover from left to right\n      .transition()\n      .duration(reducedMotion() ? 0 : 50 * 43)\n      .attr('width', '100%');\n\n    const refs = {\n      xAxis: graph.append('g').attr('class', style.axis),\n      yExplAxis: graph.append('g').attr('class', style.axis),\n      yEigenAxis: graph.append('g').attr('class', style.axis),\n      explanationArea: graph.append('g').attr('class', style.explanation),\n      visualBars: graph\n        .append('g')\n        .attr('class', `${style.visual} ${style.bars}`),\n      targetBars: graph\n        .append('g')\n        .attr('class', `${style.target} ${style.bars}`),\n    };\n\n    drawRef.current = ({ processed = processedRef.current } = {}) => {\n      // container size\n      const { clientWidth: width, clientHeight: height } = containerRef.current;\n      graph.attr('width', width).attr('height', height);\n\n      // x axis\n      const x = scaleBand()\n        .domain(processed.map((_, i) => i))\n        .range([MARGIN.left, width - MARGIN.right])\n        .padding(0.1);\n\n      // visual x axis\n      const xAxis = g =>\n        g\n          .attr('transform', `translate(0, ${height - MARGIN.bottom})`)\n          .call(axisBottom(x).tickFormat(d => d + 1));\n      refs.xAxis.call(xAxis);\n\n      // explained variance\n      // y axis\n      const yExpl = scaleLinear()\n        .domain([0, 1])\n        .range([height - MARGIN.bottom, MARGIN.top])\n        .nice();\n\n      // visual y axis\n      const yExplAxis = g =>\n        g.attr('transform', `translate(${width - MARGIN.right}, 0)`).call(\n          axisRight(yExpl)\n            .ticks(6)\n            .tickFormat(d => `${(typeof d === 'number' ? d : 0) * 100}%`),\n        );\n      refs.yExplAxis.call(yExplAxis);\n\n      // line\n      const lineFn = line()\n        .x((_, i) => x(i) + x.bandwidth() / 2)\n        .y(yExpl);\n\n      const explLine = refs.explanationArea\n        .selectAll(`path.${style['top-line']}`)\n        .data([processed]);\n      explLine\n        .enter()\n        .append('path')\n        .attr('class', style['top-line'])\n        .attr('clip-path', 'url(#clip-reveal)')\n        .attr('opacity', 0)\n        .merge(explLine)\n        .attr('d', d => lineFn(d.map(item => item.cumulativeExplained)))\n        .transition()\n        .duration(2500)\n        .attr('opacity', 1);\n\n      // area\n      const areaFn = area()\n        .x((_, i) => x(i) + x.bandwidth() / 2)\n        .y0(height - MARGIN.bottom)\n        .y1(d => yExpl(d));\n\n      const explArea = refs.explanationArea\n        .selectAll(`path.${style.area}`)\n        .data([processed]);\n      explArea\n        .enter()\n        .append('path')\n        .attr('class', style.area)\n        .attr('clip-path', 'url(#clip-reveal)')\n        .attr('opacity', 0)\n        .merge(explArea)\n        .attr('d', d => areaFn(d.map(item => item.cumulativeExplained)))\n        .transition()\n        .duration(2500)\n        .attr('opacity', 1);\n\n      // eigenvalue\n      // y axis\n      const yEigen = scaleLinear()\n        .domain([0, eigenvalues[0]])\n        .range([height - MARGIN.bottom, MARGIN.top])\n        .nice();\n\n      // visual y axis\n      const yEigenAxis = g =>\n        g\n          .attr('transform', `translate(${MARGIN.left}, 0)`)\n          .call(axisLeft(yEigen).ticks(5));\n      refs.yEigenAxis.call(yEigenAxis);\n\n      // bars\n      const bars = refs.visualBars.selectAll('rect').data(processed);\n      bars\n        .enter()\n        .append('rect')\n        .attr('y', yEigen(0))\n        .attr('height', 0)\n        .merge(bars)\n        .attr(\n          'class',\n          ({ hasProjection, projected }) =>\n            `${hasProjection ? style['has-projection'] : ''} ${\n              projected ? style.projected : ''\n            }`.trim() || null,\n        )\n        .attr('x', (_, i) => x(i))\n        .attr('width', x.bandwidth())\n        .transition()\n        .ease(easeBackOut.overshoot(5))\n        .duration(reducedMotion() ? 0 : 500)\n        .delay(reducedMotion() ? 0 : (_, i) => i * 50)\n        .attr('y', d => yEigen(d.eigenvalue))\n        .attr('height', d => height - MARGIN.bottom - yEigen(d.eigenvalue));\n      // full-height bars (for click and hover handlers)\n      if (!tooltipRef.current) return;\n      const clickBars = refs.targetBars.selectAll('rect').data(processed);\n      clickBars\n        .enter()\n        .append('rect')\n        .attr('y', 0)\n        .attr('height', '100%')\n        .on('click', ({ hasProjection }, i) => {\n          if (!hasProjection) return;\n          setProjections(projections => {\n            const set = new Set(projections);\n            set[set.has(i) ? 'delete' : 'add'](i);\n            return Array.from(set).sort((a, b) => a - b);\n          });\n        })\n        .on('mousemove', (d, i) => {\n          tooltipRef.current.innerHTML = `\n            <div>\n              <p>Principal component ${i + 1}</p>\n              <p>Eigenvalue: ${(Math.round(d.eigenvalue * 100) / 100).toFixed(\n                2,\n              )}</p>\n              <p>\n                Explained variance: ${(\n                  Math.round((d.eigenvalue / totalEigenvalue) * 1000) / 10\n                ).toFixed(1)}%\n              </p>\n              <p>\n                Cumulative explained variance: ${(\n                  Math.round(d.cumulativeExplained * 1000) / 10\n                ).toFixed(1)}%\n              </p>\n              <p>Projection data is ${\n                d.hasProjection ? '' : 'not'\n              } available</p>\n            </div>\n          `;\n          // Display the tooltip (this is internally softed)\n          tooltipRef.current.style.opacity = 1;\n          //const { width, height } = tooltipRef.current.getBoundingClientRect();\n          //tooltipRef.current.style.transform = `translate(${event.pageX -\n          //  width / 2}px, ${event.pageY - height - 5}px)`;\n        })\n        // Hide the tooltip (this is internally softed)\n        .on('mouseout', () => (tooltipRef.current.style.opacity = 0))\n        .merge(clickBars)\n        .attr('class', ({ hasProjection }) =>\n          hasProjection ? style['has-projection'] : '' || null,\n        )\n        .attr('x', (_, i) => x(i))\n        .attr('width', x.bandwidth());\n    };\n\n    window.addEventListener('resize', drawRef.current);\n\n    return () => window.removeEventListener('resize', drawRef.current);\n  }, [eigenvalues, setProjections, totalEigenvalue]);\n\n  // data massaging\n  useEffect(() => {\n    let acc = 0;\n    const processed = [];\n    for (const [index, eigenvalue] of eigenvalues.entries()) {\n      const projectionData = projectionsData[index];\n      acc += eigenvalue;\n      const cumulativeExplained = acc / totalEigenvalue;\n      processed.push({\n        cumulativeExplained,\n        eigenvalue,\n        projected: projections.includes(index),\n        hasProjection: !!projectionData,\n      });\n      if (\n        index >= MIN_DISPLAY_INDEX &&\n        cumulativeExplained >= MIN_DISPLAY_EXPL\n      ) {\n        break;\n      }\n    }\n\n    processedRef.current = processed;\n\n    drawRef.current({ processed });\n  }, [eigenvalues, projectionsData, totalEigenvalue, projections]);\n\n  return (\n    <>\n      <div className={style['graph-container']} ref={containerRef} />\n      <div className={style.tooltip} ref={tooltipRef} />\n      {!!projections.length && (\n        <>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Principal component</TableCell>\n                <TableCell>Eigenvalue</TableCell>\n                <TableCell>Explained variance</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {projections.map(p => (\n                <TableRow key={p}>\n                  <TableCell>{p + 1}</TableCell>\n                  <TableCell>{round(eigenvalues[p], 2)}</TableCell>\n                  <TableCell>\n                    {round((eigenvalues[p] / totalEigenvalue) * 100, 1)} %\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n          <Button\n            variant=\"contained\"\n            onClick={() => setProjections([])}\n            className={style.delete}\n          >\n            <FontAwesomeIcon icon={faTrashAlt} />\n            &nbsp;\n            <span>Clear selection</span>\n          </Button>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default EigenvalueGraph;\n","import React, { useContext, useState, useMemo, lazy, Suspense } from 'react';\nimport cn from 'classnames';\n\nimport { CardContent, Typography } from '@mui/material';\n\nimport Card from '../../../components/animated-card';\nimport ViewerSpawner from '../../../components/viewer-spawner';\nimport EigenvalueGraph from '../../../components/eigenvalue-graph';\nimport Loading from '../../../components/loading';\n\nimport useAPI from '../../../hooks/use-api';\n\nimport { ProjectCtx } from '../../../contexts';\n\nimport { BASE_PATH_PROJECTS } from '../../../utils/constants';\n\nimport plainTextExplanation from './plain-text-explanation';\n\nimport style from './style.module.css';\n\nconst ViewerWithControls = lazy(() => import(\n  /* webpackChunkName: 'viewer-with-controls' */ '../../../components/viewer-with-controls'\n));\nconst Projections = lazy(() => import(\n  /* webpackChunkName: 'projections' */ '../../../components/projections'\n));\n\nconst projectionPlaceholder = (\n  <div className={cn(style.placeholder, style.projection)} />\n);\nconst nglPlaceholder = (\n  <div className={cn(style.placeholder, style['viewer-with-controls'])} />\n);\n\nconst PCA = () => {\n  // Get the current project metadata\n  const { accessionAndMdNumber, metadata, files } = useContext(ProjectCtx);\n\n  // Load the main data from the API\n  const { loading, payload, error } = useAPI(\n    `${BASE_PATH_PROJECTS}/${accessionAndMdNumber}/analyses/pca/`,\n  );\n  const data = payload && payload.data;\n\n  const [projections, setProjections] = useState([]);\n  const [requestedFrame, setRequestedFrame] = useState(null);\n\n  // Get the expalined variance of every eigenvector and the total explained variance\n  const [explanation, totalEigenvalue] = useMemo(() => {\n    setRequestedFrame(null);\n    if (!data) return [];\n    const eigenvalues = data.eigenvalues;\n    if (!eigenvalues.length) return [];\n    const totalEigenvalue = eigenvalues.reduce((acc, curr) => acc + curr, 0);\n    const explanation =\n      projections.reduce(\n        (acc, projection) => acc + eigenvalues[projection],\n        0,\n      ) / totalEigenvalue;\n    return [explanation, totalEigenvalue];\n  }, [data, projections]);\n\n  // Set the component to be passed to the NGL\n  const [representations, components] = useMemo(() => {\n    if (!data || !files) return [undefined, undefined];\n    // Only backbon atoms will be shown so they are better represented in spacefill\n    const representations = [\n      {\n        name: 'PC projection',\n        type: 'spacefill',\n      },\n    ];\n\n    // Get the API URL to the requested projection trajectory\n    let trajectoryURLs;\n    if (projections[0] !== undefined) {\n      const projectionNumber = ('0' + (projections[0] + 1)).slice(-2);\n      const projectionURL = `${BASE_PATH_PROJECTS}/${accessionAndMdNumber}/files/pca_trajectory_${projectionNumber}.bin`;\n      trajectoryURLs = [ projectionURL ];\n    }\n\n    // Get the topology URL\n    // It has to be the main topology but with a specific selection of atoms\n    const topologyURL = `${BASE_PATH_PROJECTS}/${accessionAndMdNumber}/files/structure`;\n\n    // Set the NGL component\n    const components = [\n      {\n        topologyURL: topologyURL,\n        atomIndices: data.atoms,\n        trajectoryURLs: trajectoryURLs,\n      },\n    ];\n\n    return [representations, components];\n  }, [data, files, projections, accessionAndMdNumber]);\n\n  // Return the loading spin if we are still waiting for data\n  if (loading) return <Loading />;\n  // If there was any problem then display it\n  if (error) return error.toString();\n\n  return (\n    <>\n      <Card className={style.card}>\n        <CardContent>\n          <Typography variant=\"h6\">PCA eigenvalues</Typography>\n          {/* Bars graph which allows to select a specific projection */}\n          <EigenvalueGraph\n            eigenvalues={data.eigenvalues}\n            totalEigenvalue={totalEigenvalue}\n            projectionsData={data.projections}\n            projections={projections}\n            setProjections={setProjections}\n          />\n        </CardContent>\n      </Card>\n      <Card className={style.card}>\n        <div>\n          <CardContent>\n            <Typography variant=\"h6\">PCA projections</Typography>\n            {/* Show a brief explanation about selected projection and their explained variance accounting */}\n            <p>{plainTextExplanation(projections, explanation)}</p>\n          </CardContent>\n          {/* When only 1 eigenvector is selected use the regula ngl viewer */}\n          {projections.length === 1 && (\n            <Suspense fallback={nglPlaceholder}>\n              <CardContent className={style['ngl-card']}>\n                <ViewerWithControls\n                  className={style['viewer-with-controls']}\n                  projection={projections[0]}\n                  framesSelect={false}\n                  // Projections are backbone trajectories, same as the average.pdb topology\n                  startingRepresentations={representations}\n                  startingComponents={components}\n                  bounce={true}\n                />\n              </CardContent>\n            </Suspense>\n          )}\n          {/* When only 2 eigenvectors are selected use the projections graph */}\n          {projections.length === 2 && (\n            <Suspense fallback={projectionPlaceholder}>\n              <CardContent>\n                <Projections\n                  framestep={data.framestep}\n                  projectionsData={data.projections}\n                  projections={projections}\n                  datumRange={data.eigenvalues.length}\n                  totalFrames={metadata.mdFrames}\n                  setRequestedFrame={setRequestedFrame}\n                />\n              </CardContent>\n            </Suspense>\n          )}\n          {/* When more than 2 frames are selected display nothing but the plain text explanation*/}\n        </div>\n      </Card>\n      <ViewerSpawner\n        // Set the new viewer or null if there is not a proper \"selected\" value\n        newViewer={Number.isFinite(requestedFrame)\n          ? { requestedFrame: requestedFrame }\n          : null\n        }\n        // If the nailed/closed viewer is the current viewer then reset the 'selected'\n        onNail={viewer =>\n          setRequestedFrame(previous => {\n            if (viewer.requestedFrame === previous) return null;\n            else return previous;\n          })\n        }\n        onClose={viewer =>\n          setRequestedFrame(previous => {\n            if (viewer.requestedFrame === previous) return null;\n            else return previous;\n          })\n        }\n      />\n    </>\n  );\n};\n\nexport default PCA;\n","import { round } from 'lodash-es';\n\nconst plainTextExplanation = (projections, explanation) => {\n  if (!projections.length) {\n    return `No projection selected, please select one or multiple projections to\n    visualise its or their related data. Only the darker blue bars correspond to\n    projections for which data has been calculated.`;\n  }\n  let projectionText;\n  if (projections.length === 1) {\n    projectionText = projections[0] + 1;\n  } else if (projections.length === 2) {\n    projectionText = `${projections[0] + 1} and ${projections[1] + 1}`;\n  } else {\n    projectionText = projections.reduce(\n      (acc, projection, i, { length }) =>\n        `${acc}${acc ? ',' : ''}${i === length - 1 ? ' and' : ''} ${projection +\n          1}`,\n      '',\n    );\n  }\n  return `Selected principal component${\n    projections.length > 1 ? 's' : ''\n  } ${projectionText}, accounting for ${round(\n    explanation * 100,\n    1,\n  )}% of explained variance`;\n};\n\nexport default plainTextExplanation;\n"],"names":["symbolProto","Symbol","prototype","undefined","symbolToString","toString","baseToString","value","isArray","arrayMap","isSymbol","call","result","toFinite","remainder","nativeIsFinite","root","isFinite","nativeMin","Math","min","methodName","func","number","precision","toNumber","toInteger","pair","split","createRound","array","iteratee","index","length","Array","KEYFRAMES","opacity","reducedMotion","transform","ANIMATION_OPTIONS","fill","easing","duration","forwardRef","_ref","ref","overrideComponent","props","_objectWithoutProperties","_excluded","containerRef","useRef","useLayoutEffect","node","current","firstElementChild","animate","from","document","querySelectorAll","findIndex","section","animation","_objectSpread","delay","cancel","Component","Card","_jsx","className","style","children","component","ViewerWithControls","lazy","maxZ","NGLViewerInDND","viewerRef","place","setPlace","useState","innerWidth","innerHeight","scrollY","window","offsetHeight","querySelector","offsetTop","dimension","max","reasonableHeight","width","height","x","y","Rnd","position","size","zIndex","bounds","onDragStart","onResizeStart","onDragStop","e","d","layerX","layerY","onResize","autoResize","onResizeStop","direction","delta","elevation","Suspense","fallback","startsPlaying","newViewer","nailing","onNail","onClose","nailedViewers","setNailedViewers","viewers","usedIds","getNewId","id","indexOf","console","error","close","nailed","newNailed","splice","push","nail","map","viewer","MARGIN","eigenvalues","totalEigenvalue","projectionsData","projections","setProjections","tooltipRef","drawRef","noop","processedRef","useEffect","graph","select","append","attr","transition","refs","xAxis","yExplAxis","yEigenAxis","explanationArea","visualBars","concat","targetBars","processed","arguments","clientWidth","clientHeight","scaleBand","domain","_","i","range","padding","g","axisBottom","tickFormat","yExpl","scaleLinear","nice","axisRight","ticks","lineFn","line","bandwidth","explLine","selectAll","data","enter","merge","item","cumulativeExplained","areaFn","area","y0","y1","explArea","yEigen","axisLeft","bars","_ref2","hasProjection","projected","trim","ease","easeBackOut","overshoot","eigenvalue","clickBars","on","_ref3","set","Set","has","sort","a","b","innerHTML","round","toFixed","_ref4","addEventListener","removeEventListener","acc","entries","projectionData","includes","_jsxs","_Fragment","Table","TableHead","TableRow","TableCell","TableBody","p","Button","variant","onClick","FontAwesomeIcon","icon","faTrashAlt","Projections","projectionPlaceholder","cn","placeholder","projection","nglPlaceholder","PCA","accessionAndMdNumber","metadata","files","useContext","ProjectCtx","loading","payload","useAPI","BASE_PATH_PROJECTS","requestedFrame","setRequestedFrame","explanation","useMemo","reduce","curr","representations","components","trajectoryURLs","projectionNumber","slice","name","type","topologyURL","atomIndices","atoms","Loading","card","CardContent","Typography","EigenvalueGraph","plainTextExplanation","framesSelect","startingRepresentations","startingComponents","bounce","framestep","datumRange","totalFrames","mdFrames","ViewerSpawner","Number","previous","projectionText"],"sourceRoot":""}