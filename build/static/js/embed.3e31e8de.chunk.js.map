{"version":3,"file":"static/js/embed.3e31e8de.chunk.js","mappings":"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","sources":["webpack://mdposit/./src/components/animated-card/style.module.css?d4d9","components/animated-card/index.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","contexts/index.js","webpack://mdposit/./src/pages/embed/style.module.css?241c","pages/embed/index.js","webpack://mdposit/./src/components/info/style.module.css?e5b4","components/info/index.js","hooks/use-ngl-file/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"style_container__M9GCG\"};","import React, { useLayoutEffect, useRef, forwardRef } from 'react';\nimport { Card } from '@mui/material';\n\nimport reducedMotion from '../../utils/reduced-motion';\n\nimport style from './style.module.css';\n\nconst KEYFRAMES = { opacity: [0, 1] };\n\nif (!reducedMotion()) {\n  KEYFRAMES.transform = ['translateY(50px)', 'translateY(0)'];\n}\n\nconst ANIMATION_OPTIONS = {\n  fill: 'both',\n  easing: 'cubic-bezier(0, .99, .56, 1.1)',\n  duration: 500,\n};\n\n// Make the card appear and slide softly from down to up when the page is loaded\nconst AnimatedCard = forwardRef(({ overrideComponent, ...props }, ref) => {\n  const containerRef = useRef(null);\n\n  useLayoutEffect(() => {\n    const node = containerRef.current && containerRef.current.firstElementChild;\n    if (!(node && node.animate)) return;\n\n    const index = Array.from(\n      document.querySelectorAll('main section'),\n    ).findIndex(section => node === section);\n\n    const animation = node.animate(KEYFRAMES, {\n      ...ANIMATION_OPTIONS,\n      delay: index * 150,\n    });\n\n    return () => animation.cancel();\n  }, []);\n\n  const Component = overrideComponent ? 'section' : Card;\n\n  return (\n    <div ref={containerRef} className={style.container}>\n      <Component component=\"section\" {...props} ref={ref} />\n    </div>\n  );\n});\n\nexport default AnimatedCard;\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import { createContext } from 'react';\n\n// These 3 context are used by React hooks\n// They are accessed from different scripts (e.g. the accession page)\nexport const ProjectCtx = createContext(null);\nexport const PdbCtx = createContext(null);\n","// extracted by mini-css-extract-plugin\nexport default {\"ngl-card\":\"style_ngl-card__dSFfi\",\"container\":\"style_container__sVFS+\"};","import React, { useState } from 'react';\n\nimport useAPI from '../../hooks/use-api';\nimport useNGLFile from '../../hooks/use-ngl-file';\n\nimport ErrorBoundary from '../../components/error-boundary';\n\nimport { ProjectCtx, PdbCtx } from '../../contexts';\n\nimport Card from '../../components/animated-card';\nimport ViewerWithControls from '../../components/viewer-with-controls';\nimport Loading from '../../components/loading';\n\nimport style from './style.module.css';\n\nimport { BASE_PATH_PROJECTS, MAIN_STRUCTURE_FILENAME } from '../../utils/constants';\n\n// Load the project class\nimport { Project } from '../../utils/project-manager';\nimport { useParams } from 'react-router-dom';\n\nconst Embed = () => {\n  const { accession: accessionAndMdNumber } = useParams();\n  const [project, setProject] = useState(null);\n\n  // Get project data from the API if the current context data is wrong. 'payload' contains the main data.\n  const projectRequest = useAPI(`${BASE_PATH_PROJECTS}/${accessionAndMdNumber}/`);\n\n  // Load the structure data form the API\n  const pdbData = useNGLFile(\n    `${BASE_PATH_PROJECTS}/${accessionAndMdNumber}/files/${MAIN_STRUCTURE_FILENAME}`,\n    // This attribute was included before: defaultRepresentation: false\n    { defaultRepresentation: false, ext: 'pdb' },\n  );\n\n  // While loading\n  if (projectRequest.loading) return <Loading />;\n  if (projectRequest.error) return projectRequest.error.toString();\n  // This should never happen\n  if (!projectRequest.payload) return null;\n\n  // Set the final project data to be loaded in context\n  const projectData = new Project(projectRequest.payload);\n  if (!project) {\n    setProject(projectData);\n    return;\n  }\n\n  if (pdbData.loading) return <Loading />;\n  else if (pdbData.error) return pdbData.error.toString();\n  else if (!pdbData.file) return 'Something bad happened with the pdb data';\n\n  // Make some modifications to the project data once loaded\n  // If accession is missing then set the identifier as the accession\n  if (!project.accession) project.accession = project.identifier;\n  // Order chain indices by alphabetic number when we have new project data\n  if (project.chains) project.chains.sort();\n\n  return (\n    <ErrorBoundary>\n      <ProjectCtx.Provider value={project}>\n        <PdbCtx.Provider value={pdbData}>\n          <Card className={style['ngl-card']}>\n            <ViewerWithControls className={style.container} />\n          </Card>\n        </PdbCtx.Provider>\n      </ProjectCtx.Provider>\n    </ErrorBoundary>\n  );\n};\n\nexport default Embed;\n","// extracted by mini-css-extract-plugin\nexport default {\"default\":\"style_default__DjLzc\"};","import React, { useState, forwardRef } from 'react';\n\nimport { IconButton, Tooltip, ClickAwayListener } from '@mui/material';\nimport { tooltipClasses } from '@mui/material/Tooltip';\nimport { styled } from '@mui/material/styles';\n//import { makeStyles } from '@mui/styles';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { faInfoCircle } from '@fortawesome/free-solid-svg-icons';\n\nimport style from './style.module.css';\n\n// WARNING: Some styling parameters has no effect through the classic css way\n// They must be declared this way\n// The forwardRef and passing the ref to the tooltip is necessary for this to work since React 18 / Material UI v5\n// Here is explained why: https://mui.com/material-ui/guides/composition/#caveat-with-refs\nconst CustomTooltip = styled(\n  forwardRef(({ className, ...props }, ref) => {\n    return <Tooltip {...props} classes={{ popper: className }} ref={ref} />;\n  }),\n)(({ theme }) => ({\n  [`& .${tooltipClasses.tooltip}`]: {\n    fontSize: '1em',\n    maxWidth: '100%',\n    margin: '0',\n  },\n}));\n\nconst Info = ({\n  // Message to be displayed when the mouse is over the info icon\n  tooltip,\n  // Set a custom styling\n  className,\n  // Set a custom styling for the tooltip\n  sx\n}) => {\n  const [open, setOpen] = useState(false);\n\n  const toogleOpen = () => setOpen(previous => !previous);\n  const closeIt = () => setOpen(false);\n\n  // Render\n  return (\n    <ClickAwayListener onClickAway={closeIt}>\n      <CustomTooltip\n        title={tooltip}\n        disableFocusListener\n        disableHoverListener\n        disableTouchListener\n        open={open}\n      >\n        <IconButton\n          className={className || style.default}\n          color={open ? 'info' : 'primary'}\n          onClick={toogleOpen}\n          sx={sx}\n        >\n          <FontAwesomeIcon icon={faInfoCircle} size={'lg'} />\n        </IconButton>\n      </CustomTooltip>\n    </ClickAwayListener>\n  );\n};\n\nexport default Info;\n","import { useEffect, useReducer } from 'react';\nimport { autoLoad } from 'ngl';\n\n// This logic is used by the \"useReducer\" and executed by a \"dispatch\", whcih provides a type (action.type)\n// This function expects an initial state and an action which will be used to calculate a new state\n// In addition, other variables are calculated and sent back\nconst nglFileReducer = (state, action) => {\n  switch (action.type) {\n    case 'INIT':\n      // Here both file and error must be explicitly set to null or a previous result may remain\n      return { ...state, loading: true, file: null, error: null };\n    case 'SUCCESS':\n      return { ...state, loading: false, file: action.file };\n    case 'ERROR':\n      return { ...state, loading: false, error: action.error };\n    // An error is sent when the state type is not one of the previous 3 options\n    default:\n      throw new Error(`\"${action.type}\" is not a valid action`);\n  }\n};\n\n// Get data from a specific directory in the API\n// The difference between this hook and useAPI hook is the use of 'autoLoad' instead of 'axios'\n// 'autoLoad' is the built in function from NGL to load data\nconst useNGLFile = (url, { defaultRepresentation, ext }) => {\n  // useReducer is a react hook\n  const [state, dispatch] = useReducer(nglFileReducer, {\n    loading: !!url,\n    file: null,\n    error: null,\n  });\n\n  useEffect(() => {\n    if (!url) {\n      dispatch({ type: 'SUCCESS' });\n      return;\n    }\n\n    dispatch({ type: 'INIT' });\n\n    let didCancel = false;\n\n    // Load data from the API\n    autoLoad(url, { defaultRepresentation, ext })\n      .then(file => !didCancel && dispatch({ type: 'SUCCESS', file }))\n      .catch(error => !didCancel && dispatch({ type: 'ERROR', error }));\n\n    return () => (didCancel = true);\n  }, [url, defaultRepresentation, ext]);\n\n  return state;\n};\n\nexport default useNGLFile;\n"],"names":["KEYFRAMES","opacity","reducedMotion","transform","ANIMATION_OPTIONS","fill","easing","duration","forwardRef","_ref","ref","overrideComponent","props","containerRef","useRef","useLayoutEffect","node","current","firstElementChild","animate","index","Array","from","document","querySelectorAll","findIndex","section","animation","delay","cancel","Component","Card","_jsx","className","style","children","component","getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardRoot","styled","Paper","name","overridesResolver","styles","root","overflow","React","inProps","useDefaultProps","raised","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","clsx","elevation","undefined","ProjectCtx","createContext","PdbCtx","Embed","accession","accessionAndMdNumber","useParams","project","setProject","useState","projectRequest","useAPI","BASE_PATH_PROJECTS","pdbData","useNGLFile","MAIN_STRUCTURE_FILENAME","defaultRepresentation","ext","loading","Loading","error","toString","payload","projectData","Project","file","identifier","chains","sort","ErrorBoundary","Provider","value","ViewerWithControls","CustomTooltip","Tooltip","popper","_ref2","theme","tooltipClasses","tooltip","fontSize","maxWidth","margin","_ref3","sx","open","setOpen","ClickAwayListener","onClickAway","closeIt","title","disableFocusListener","disableHoverListener","disableTouchListener","IconButton","color","onClick","toogleOpen","previous","FontAwesomeIcon","icon","faInfoCircle","size","nglFileReducer","state","action","type","Error","url","dispatch","useReducer","useEffect","didCancel","autoLoad","then","catch"],"sourceRoot":""}