{"version":3,"file":"static/js/protvista-navigation.d62781a0.chunk.js","mappings":"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","sources":["../node_modules/protvista-utils/src/Region.js","../node_modules/protvista-utils/src/TrackHighlighter.js","../node_modules/protvista-utils/src/ColorScaleParser.js","../node_modules/protvista-utils/src/String2Object.js","../node_modules/protvista-utils/src/withMargin.js","../node_modules/protvista-utils/src/index.js","../node_modules/protvista-utils/src/ScrollFilter.js","../node_modules/protvista-navigation/src/protvista-navigation.js"],"sourcesContent":["export default class Region {\n  constructor({ min = -Infinity, max = Infinity } = {}) {\n    this.segments = [];\n    this.max = max;\n    this.min = min;\n    this.regionString = null;\n  }\n\n  encode(full = false) {\n    return this.segments\n      .map(({ start, end, color }) => {\n        if (full) return `${start}:${end}${color ? `:${color}` : \"\"}`;\n        const s = start === this.min ? \"\" : start;\n        const e = end === this.max ? \"\" : end;\n        return `${s}:${e}${color ? `:${color}` : \"\"}`;\n      })\n      .join(\",\");\n  }\n\n  decode(regionString) {\n    if (typeof regionString !== \"undefined\") this.regionString = regionString;\n    if (!this.regionString) {\n      this.segments = [];\n      return;\n    }\n    this.segments = this.regionString.split(\",\").map((region) => {\n      const [_start, _end, _color, _] = region.split(\":\");\n      if (typeof _ !== \"undefined\")\n        throw new Error(\n          `there should be at most 2 ':' per region. Region: ${region}`\n        );\n      let start = _start ? Number(_start) : this.min;\n      let end = _end ? Number(_end) : this.max;\n      const color = _color !== \"\" ? _color : undefined;\n      if (start > end) [start, end] = [end, start];\n      if (start < this.min) start = this.min;\n      if (end > this.max) end = this.max;\n      if (Number.isNaN(start))\n        throw new Error(\n          `The parsed value of ${_start} is NaN. Region: ${region}`\n        );\n      if (Number.isNaN(end))\n        throw new Error(\n          `The parsed value of ${_end} is NaN. Region: ${region}`\n        );\n      if (color && !color.match(/^#[0-9a-f]{6,8}$/i))\n        throw new Error(\n          `The parsed value of ${_color} is not a color in hex format. Region: ${region}`\n        );\n\n      return {\n        start,\n        end,\n        color,\n      };\n    });\n  }\n}\n","import Region from \"./Region\";\n\nconst DEFAULT_HIGLIGHT_COLOR = \"#FFEB3B66\";\n\nconst combineRegions = (region1, region2) => {\n  if (!region1) return region2;\n  if (!region2) return region1;\n  return `${region1},${region2}`;\n};\nexport default class TrackHighlighter {\n  constructor({ element, min, max }) {\n    this.element = element;\n    this.element._highlightcolor = DEFAULT_HIGLIGHT_COLOR;\n    this.region = new Region({ min, max });\n    this.fixedHighlight = null;\n  }\n\n  set max(max) {\n    this.region.max = max;\n  }\n\n  setAttributesInElement() {\n    this.region.decode(this.element.getAttribute(\"highlight\"));\n    if (this.region.segments.length === 0) {\n      this.element._highlightstart = Number(\n        this.element.getAttribute(\"highlightstart\")\n      );\n      this.element._highlightend = Number(\n        this.element.getAttribute(\"highlightend\")\n      );\n      this.element._highlightcolor =\n        this.element.getAttribute(\"highlightcolor\") || DEFAULT_HIGLIGHT_COLOR;\n      if (\n        this.element._highlightstart !== null &&\n        this.element._highlightend !== null &&\n        typeof this.element._highlightstart === \"number\" &&\n        typeof this.element._highlightend === \"number\"\n      ) {\n        this.element._highlight = `${this.element._highlightstart}:${this.element._highlightend}`;\n        this.region.decode(\n          combineRegions(this.fixedHighlight, this.element._highlight)\n        );\n      }\n    }\n  }\n\n  setFloatAttribute(name, strValue) {\n    const value = parseFloat(strValue);\n    this.element[`_${name}`] = Number.isNaN(value) ? strValue : value;\n  }\n\n  changedCallBack(name, newValue) {\n    switch (name) {\n      case \"highlightstart\":\n      case \"highlightend\":\n        this.setFloatAttribute(name, newValue);\n        this.element._highlight =\n          Number.isNaN(this.element._highlightstart) ||\n          Number.isNaN(this.element._highlightend) ||\n          this.element._highlightstart === undefined ||\n          this.element._highlightend === undefined ||\n          this.element._highlightstart === null ||\n          this.element._highlightend === null\n            ? \"\"\n            : `${Math.max(\n                this.region.min,\n                this.element._highlightstart\n              )}:${Math.min(this.region.max, this.element._highlightend)}`;\n        break;\n      default:\n        this.element._highlight = newValue;\n    }\n    this.region.decode(\n      combineRegions(this.fixedHighlight, this.element._highlight)\n    );\n    this.element.refresh();\n  }\n\n  setFixedHighlight(region) {\n    this.fixedHighlight = region;\n    this.region.decode(combineRegions(region, this.element._highlight));\n    this.element.refresh();\n  }\n\n  appendHighlightTo(svg) {\n    this.highlighted = svg.append(\"g\").attr(\"class\", \"highlighted\");\n  }\n\n  updateHighlight() {\n    const highlighs = this.highlighted\n      .selectAll(\"rect\")\n      .data(this.region.segments);\n    highlighs\n      .enter()\n      .append(\"rect\")\n      .style(\"pointer-events\", \"none\")\n      .merge(highlighs)\n      .attr(\"fill\", (d) => (d.color ? d.color : this.element._highlightcolor))\n      .attr(\"height\", this.element._height)\n      .attr(\"x\", (d) => this.element.getXFromSeqPosition(d.start))\n      .attr(\n        \"width\",\n        (d) => this.element.getSingleBaseWidth() * (d.end - d.start + 1)\n      );\n    highlighs.exit().remove();\n  }\n}\n","export function isColorValid(color) {\n  const fakeElement = document.createElement(\"div\");\n  fakeElement.style.borderColor = \"\";\n  fakeElement.style.borderColor = color;\n  if (fakeElement.style.borderColor === \"\") return false;\n  return true;\n}\n\nexport default (text = null) => {\n  let range = [];\n  let domain = [];\n  if (text !== null && typeof text !== \"string\")\n    throw new Error(\"The attribute text has to be of type string\");\n  if (text && text.trim() !== \"\") {\n    const blocks = text.split(\",\").map(bl => bl.split(\":\"));\n    if (blocks.length < 2)\n      throw new Error(\"There should be at least 2 points to create a scale\");\n\n    range = blocks.map(bl => {\n      const color = bl[0].trim().toUpperCase();\n      if (!isColorValid(color)) {\n        throw new Error(`The color '${color} is not valid'`);\n      }\n      return color;\n    });\n    domain = blocks.map((bl, i) => {\n      const number = parseFloat(bl[1]);\n      if (Number.isNaN(number))\n        throw new Error(\n          `The second part of every point should be a number. Error in point ${i}: ${bl}`\n        );\n      return number;\n    });\n  }\n  return {\n    range,\n    domain\n  };\n};\n","const identity = x => x;\n\nexport default (\n  string = null,\n  { keyFormatter = identity, valueFormatter = identity } = {}\n) => {\n  if (string !== null && typeof string !== \"string\")\n    throw new Error(\"The attribute text has to be of type string\");\n  if (string && string.trim() !== \"\") {\n    const blocks = string.split(\",\").map(bl => bl.split(\":\"));\n    const obj = {};\n    blocks.forEach(bl => {\n      if (bl.length !== 2)\n        throw new Error(\n          `Bad block: ${bl.join(\n            \":\"\n          )}\\n The blocks of the string should follow the format KEY:VALUE`\n        );\n      obj[keyFormatter(bl[0])] = valueFormatter(bl[1]);\n    });\n    return obj;\n  }\n  return {};\n};\n","const sides = [\"left\", \"right\", \"top\", \"bottom\"];\nconst marginSides = sides.map((side) => `margin${side}`);\n\nconst withMargin = (\n  Element,\n  options = {\n    initialValue: {\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n    },\n  }\n) => {\n  class ElementWithMargin extends Element {\n    constructor() {\n      super();\n      this.margin = options.initialValue;\n    }\n\n    static get observedAttributes() {\n      return [...super.observedAttributes, ...marginSides];\n    }\n\n    attributeChangedCallback(name, oldValue, newValue) {\n      if (oldValue !== newValue) {\n        if (marginSides.includes(name)) {\n          this[name] = newValue;\n        }\n      }\n      super.attributeChangedCallback(name, oldValue, newValue);\n    }\n  }\n  for (const side of sides) {\n    Object.defineProperty(ElementWithMargin.prototype, `margin${side}`, {\n      get() {\n        return this.margin[side] || 0;\n      },\n      set(value) {\n        this.margin[side] = +value;\n      },\n    });\n  }\n  return ElementWithMargin;\n};\n\nexport default withMargin;\n","import _Region from \"./Region\";\nimport _th from \"./TrackHighlighter\";\nimport _csp from \"./ColorScaleParser\";\nimport _s2o from \"./String2Object\";\nimport _sf from \"./ScrollFilter\";\nimport _withMargin from \"./withMargin\";\n\nexport const Region = _Region;\nexport const TrackHighlighter = _th;\nexport const ColorScaleParser = _csp;\nexport const String2Object = _s2o;\nexport const ScrollFilter = _sf;\nexport const withMargin = _withMargin;\n","export default class ScrollFilter {\n  constructor(element, scrollDelay = 400) {\n    this.element = element;\n    this.timeStampWheelOutside = 0;\n    this.resetScrollableTimeout = null;\n    this.scrollDelay = scrollDelay;\n  }\n\n  setElementScrollable(scrollable) {\n    this.element.setAttribute(\"scrollable\", scrollable);\n  }\n\n  startResetScrollableTimer() {\n    if (this.resetScrollableTimeout) {\n      clearTimeout(this.resetScrollableTimeout);\n    }\n    // Reset scrollable to true after a small period of time\n    this.resetScrollableTimeout = setTimeout(() => {\n      this.setElementScrollable(true);\n      this.resetScrollableTimeout = null;\n    }, this.scrollDelay);\n  }\n\n  blockScroll(timeStamp) {\n    this.timeStampWheelOutside = timeStamp;\n    this.setElementScrollable(false);\n    this.startResetScrollableTimer();\n  }\n\n  wheel({ target, timeStamp }) {\n    if (this.element.contains(target)) {\n      if (timeStamp < this.timeStampWheelOutside + this.scrollDelay) {\n        // Count this as an outside scroll as it's within the delay and it's\n        // inferred the user is doing a continuous scroll past the component\n        this.blockScroll(timeStamp);\n      } else {\n        this.setElementScrollable(true);\n      }\n    } else {\n      // Block scrolling and remember the time when the last scroll outside occurred.\n      this.blockScroll(timeStamp);\n    }\n  }\n}\n","import {\n  scaleLinear,\n  axisBottom,\n  brushX,\n  format,\n  select,\n  event as d3Event,\n} from \"d3\";\n\nimport { withMargin } from \"protvista-utils\";\n\nclass ProtVistaNavigation extends HTMLElement {\n  constructor() {\n    super();\n    this._x = null;\n    this._padding = 0;\n    this.height = 40;\n    this.dontDispatch = false;\n  }\n\n  _refreshWidth() {\n    this.style.display = \"block\";\n    this.style.width = \"100%\";\n    this.width = this.offsetWidth - this.margin.left - this.margin.right;\n    if (this.width > 0) {\n      this._padding = 10;\n    }\n  }\n\n  connectedCallback() {\n    this._refreshWidth();\n    if (this.closest(\"protvista-manager\")) {\n      this.manager = this.closest(\"protvista-manager\");\n      this.manager.register(this);\n    }\n    this._length = parseFloat(this.getAttribute(\"length\"));\n    this._displaystart = parseFloat(this.getAttribute(\"displaystart\")) || 1;\n    this._displayend =\n      parseFloat(this.getAttribute(\"displayend\")) || this._length;\n    this._highlightStart = parseFloat(this.getAttribute(\"highlightStart\"));\n    this._highlightEnd = parseFloat(this.getAttribute(\"highlightEnd\"));\n    this._rulerstart = parseFloat(this.getAttribute(\"rulerStart\")) || 1;\n\n    this._onResize = this._onResize.bind(this);\n\n    this._createNavRuler();\n  }\n\n  disconnectedCallback() {\n    if (this.manager) {\n      this.manager.unregister(this);\n    }\n    if (this._ro) {\n      this._ro.unobserve(this);\n    }\n    window.removeEventListener(\"resize\", this._onResize);\n  }\n\n  static get observedAttributes() {\n    return [\n      \"length\",\n      \"displaystart\",\n      \"displayend\",\n      \"highlightStart\",\n      \"highlightEnd\",\n      \"width\",\n      \"rulerstart\",\n    ];\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (oldValue !== newValue) {\n      this[`_${name}`] = parseFloat(newValue);\n      this._updateNavRuler();\n    }\n  }\n\n  get width() {\n    return this._width;\n  }\n\n  set width(width) {\n    this._width = width;\n  }\n\n  _createNavRuler() {\n    this._x = scaleLinear().range([this._padding, this.width - this._padding]);\n    this._x.domain([this._rulerstart, this._rulerstart + this._length - 1]);\n\n    select(this).selectAll(\"div\").remove();\n    this._container = select(this).append(\"div\").attr(\"class\", \"container\");\n\n    this._svg = this._container\n      .append(\"svg\")\n      .attr(\"id\", \"\")\n      .attr(\"width\", this.width)\n      .attr(\"height\", this.height);\n\n    this._xAxis = axisBottom(this._x);\n\n    this._displaystartLabel = this._svg\n      .append(\"text\")\n      .attr(\"class\", \"start-label\")\n      .attr(\"x\", 0)\n      .attr(\"y\", this.height - this._padding);\n\n    this._displayendLabel = this._svg\n      .append(\"text\")\n      .attr(\"class\", \"end-label\")\n      .attr(\"x\", this.width)\n      .attr(\"y\", this.height - this._padding)\n      .attr(\"text-anchor\", \"end\");\n    this._axis = this._svg\n      .append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .call(this._xAxis);\n\n    this._viewport = brushX()\n      .extent([\n        [this._padding, 0],\n        [this.width - this._padding, this.height * 0.51],\n      ])\n      .on(\"brush\", () => {\n        if (d3Event.selection) {\n          this._displaystart = format(\"d\")(\n            this._x.invert(d3Event.selection[0])\n          );\n          this._displayend = format(\"d\")(this._x.invert(d3Event.selection[1]));\n          if (!this.dontDispatch)\n            this.dispatchEvent(\n              new CustomEvent(\"change\", {\n                detail: {\n                  displayend: this._displayend,\n                  displaystart: this._displaystart,\n                  extra: { transform: d3Event.transform },\n                },\n                bubbles: true,\n                cancelable: true,\n              })\n            );\n          this._updateLabels();\n          this._updatePolygon();\n        }\n      });\n\n    this._brushG = this._svg\n      .append(\"g\")\n      .attr(\"class\", \"brush\")\n      .call(this._viewport);\n\n    this._brushG.call(this._viewport.move, [\n      this._x(this._displaystart),\n      this._x(this._displayend),\n    ]);\n\n    this.polygon = this._svg\n      .append(\"polygon\")\n      .attr(\"class\", \"zoom-polygon\")\n      .attr(\"fill\", \"#777\")\n      .attr(\"fill-opacity\", \"0.3\");\n    this._updateNavRuler();\n\n    if (\"ResizeObserver\" in window) {\n      this._ro = new ResizeObserver(this._onResize);\n      this._ro.observe(this);\n    }\n    window.addEventListener(\"resize\", this._onResize);\n  }\n\n  _onResize() {\n    this._refreshWidth();\n    this._x = this._x.range([this._padding, this.width - this._padding]);\n    this._svg.attr(\"width\", this.width);\n    this._viewport.extent([\n      [this._padding, 0],\n      [this.width - this._padding, this.height * 0.51],\n    ]);\n    this._brushG.call(this._viewport);\n    this._updateNavRuler();\n  }\n\n  _updateNavRuler() {\n    if (this._x) {\n      this._container\n        .style(\"padding-left\", `${this.margin.left}px`)\n        .style(\"padding-right\", `${this.margin.right}px`)\n        .style(\"padding-top\", `${this.margin.top}px`)\n        .style(\"padding-bottom\", `${this.margin.bottom}px`);\n      this._x.domain([this._rulerstart, this._rulerstart + this._length - 1]);\n      this._axis.call(this._xAxis);\n      this._updatePolygon();\n      this._updateLabels();\n      if (this._brushG) {\n        this.dontDispatch = true;\n        this._brushG.call(this._viewport.move, [\n          this._x(this._displaystart),\n          this._x(this._displayend),\n        ]);\n        this.dontDispatch = false;\n      }\n    }\n  }\n\n  _updateLabels() {\n    if (this._displaystartLabel)\n      this._displaystartLabel.text(this._displaystart);\n    if (this._displayendLabel)\n      this._displayendLabel.attr(\"x\", this.width).text(this._displayend);\n  }\n\n  _updatePolygon() {\n    if (this.polygon)\n      this.polygon.attr(\n        \"points\",\n        `${this._x(this._displaystart)},${this.height / 2}\n        ${this._x(this._displayend)},${this.height / 2}\n        ${this.width},${this.height}\n        0,${this.height}`\n      );\n  }\n}\n\nexport default withMargin(ProtVistaNavigation);\n"],"names":["Region","constructor","min","Infinity","max","arguments","length","undefined","this","segments","regionString","encode","full","map","_ref","start","end","color","concat","s","e","join","decode","split","region","_start","_end","_color","_","Error","Number","isNaN","match","DEFAULT_HIGLIGHT_COLOR","combineRegions","region1","region2","identity","x","sides","marginSides","side","Element","options","initialValue","top","bottom","left","right","ElementWithMargin","super","margin","observedAttributes","attributeChangedCallback","name","oldValue","newValue","includes","Object","defineProperty","prototype","get","set","value","TrackHighlighter","element","_highlightcolor","fixedHighlight","setAttributesInElement","getAttribute","_highlightstart","_highlightend","_highlight","setFloatAttribute","strValue","parseFloat","changedCallBack","Math","refresh","setFixedHighlight","appendHighlightTo","svg","highlighted","append","attr","updateHighlight","highlighs","selectAll","data","enter","style","merge","d","_height","getXFromSeqPosition","getSingleBaseWidth","exit","remove","ColorScaleParser","text","range","domain","trim","blocks","bl","toUpperCase","fakeElement","document","createElement","borderColor","isColorValid","i","number","String2Object","string","keyFormatter","valueFormatter","obj","forEach","ScrollFilter","scrollDelay","timeStampWheelOutside","resetScrollableTimeout","setElementScrollable","scrollable","setAttribute","startResetScrollableTimer","clearTimeout","setTimeout","blockScroll","timeStamp","wheel","target","contains","withMargin","_withMargin","ProtVistaNavigation","HTMLElement","_x","_padding","height","dontDispatch","_refreshWidth","display","width","offsetWidth","connectedCallback","closest","manager","register","_length","_displaystart","_displayend","_highlightStart","_highlightEnd","_rulerstart","_onResize","bind","_createNavRuler","disconnectedCallback","unregister","_ro","unobserve","window","removeEventListener","_updateNavRuler","_width","scaleLinear","select","_container","_svg","_xAxis","axisBottom","_displaystartLabel","_displayendLabel","_axis","call","_viewport","brushX","extent","on","d3Event","selection","format","invert","dispatchEvent","CustomEvent","detail","displayend","displaystart","extra","transform","bubbles","cancelable","_updateLabels","_updatePolygon","_brushG","move","polygon","ResizeObserver","observe","addEventListener"],"sourceRoot":""}