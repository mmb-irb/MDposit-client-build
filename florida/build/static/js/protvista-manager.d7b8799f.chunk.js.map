{"version":3,"file":"static/js/protvista-manager.d7b8799f.chunk.js","mappings":"iIAAA,MAAMA,EAAS,SACTC,EAAgB,eAChBC,EAAc,aACdC,EAAY,YAElB,MAAMC,UAAyBC,YAC7BC,WAAAA,GACEC,QACAC,KAAKC,kBAAoB,IAAIC,IAC7BF,KAAKG,gBAAkB,IAAIC,IAC3BJ,KAAKK,eAAiB,IAAID,IAC1BJ,KAAKM,WAAY,CACnB,CAEA,6BAAWC,GACT,MAAO,CAAC,aAAcf,EAAQC,EAAeC,EAAaC,EAC5D,CAEA,UAAIa,CAAOA,GACTR,KAAKG,gBAAgBM,IAAIjB,EAAQgB,EACnC,CAEA,UAAIA,GACF,OAAOR,KAAKG,gBAAgBO,IAAIlB,EAClC,CAEA,gBAAImB,CAAaA,GACfX,KAAKG,gBAAgBM,IAAIhB,EAAekB,EAC1C,CAEA,gBAAIA,GACF,OAAOX,KAAKG,gBAAgBO,IAAIjB,EAClC,CAEA,cAAImB,CAAWA,GACbZ,KAAKG,gBAAgBM,IAAIf,EAAakB,EACxC,CAEA,cAAIA,GACF,OAAOZ,KAAKG,gBAAgBO,IAAIhB,EAClC,CAEA,aAAImB,CAAUA,GACZb,KAAKG,gBAAgBM,IAAId,EAAWkB,EACtC,CAEA,aAAIA,GACF,OAAOb,KAAKG,gBAAgBO,IAAIf,EAClC,CAEAmB,wBAAAA,CAAyBC,EAAMC,EAAUC,GACvC,GAAID,IAAaC,EAAU,CACzB,GAAa,eAATF,EAAuB,CAEzB,GADAf,KAAKkB,YAAcD,EAASE,MAAM,MACQ,IAAtCnB,KAAKkB,YAAYE,QAAQ,QAC3B,MAAM,IAAIC,MAAM,iDAClB,IAA2C,IAAvCrB,KAAKkB,YAAYE,QAAQ,SAC3B,MAAM,IAAIC,MAAM,kDAClBrB,KAAKG,gBAAkB,IAAIC,IACzBJ,KAAKkB,YACFI,QACEC,IAAU3B,EAAiBW,mBAAmBiB,SAASD,KAEzDE,KAAKF,GAAS,CAACA,EAAM,QAE5B,MACMR,IAASvB,IACXQ,KAAKQ,OAASS,GAEZF,IAAStB,IACXO,KAAKW,aAAeM,GAElBF,IAASrB,IACXM,KAAKY,WAAaK,GAEhBF,IAASpB,IACXK,KAAKa,UAAYI,GAGrBjB,KAAK0B,iBACP,CACF,CAEAC,QAAAA,CAASC,GACP5B,KAAKC,kBAAkB4B,IAAID,GAC3B5B,KAAK0B,iBACP,CAEAI,UAAAA,CAAWF,GACT5B,KAAKC,kBAAkB8B,OAAOH,EAChC,CAEAI,uBAAAA,GAGOC,QAAQC,UAAUC,UACrBF,QAAQC,UAAUC,QAChBF,QAAQC,UAAUE,mBAClBH,QAAQC,UAAUG,uBAGjBJ,QAAQC,UAAUI,UACrBL,QAAQC,UAAUI,QAAWC,IAE3B,IAAIC,EAAKxC,KAET,EAAG,CACD,GAAIwC,EAAGL,QAAQI,GAAI,OAAOC,EAC1BA,EAAKA,EAAGC,eAAiBD,EAAGE,UAC9B,OAAgB,OAAPF,GAA+B,IAAhBA,EAAGG,UAC3B,OAAO,IAAI,EAGjB,CAEAjB,eAAAA,GACE1B,KAAKC,kBAAkB2C,SAAShB,IAC9B5B,KAAKG,gBAAgByC,SAAQ,CAACC,EAAOC,MACrB,IAAVD,GAA6B,OAAVA,QAA4BE,IAAVF,EACvCjB,EAAQoB,gBAAgBF,GAExBlB,EAAQqB,aAAaH,EAAuB,mBAAVD,EAAsB,GAAKA,EAC/D,GACA,GAEN,CAEAK,eAAAA,CAAgBC,GACd,GAAIA,EAAc,CAChB,MAAMvB,EAAU5B,KAAKoD,cAAc,IAADC,OAAKF,IACvCnD,KAAKK,eAAeuC,SAAQ,CAACC,EAAOC,KAClClB,EAAQkB,GAAQD,CAAK,GAEzB,MACE7C,KAAKC,kBAAkB2C,SAAShB,IAC9B5B,KAAKK,eAAeuC,SAAQ,CAACC,EAAOC,KAElClB,EAAQkB,GAAQD,CAAK,GACrB,GAGR,CAEAS,qBAAAA,CAAsBC,GACpB,MACE,IAAIvD,KAAKG,gBAAgBqD,QAAQhC,SAAS+B,IAC1C3D,EAAiBW,mBAAmBiB,SAAS+B,EAEjD,CAEAE,eAAAA,CAAgBC,GACd,GAAKA,EAAEC,OAGP,GACO,aADCD,EAAEC,OAAOC,QAEb5D,KAAKK,eAAeI,IAAIiD,EAAEC,OAAOb,KAAMY,EAAEC,OAAOd,OAChD7C,KAAKkD,gBAAgBQ,EAAEC,OAAOE,UAG1B7D,KAAKsD,sBAAsBI,EAAEC,OAAOb,OACtC9C,KAAKG,gBAAgBM,IAAIiD,EAAEC,OAAOb,KAAMY,EAAEC,OAAOd,OAEnDiB,OAAON,KAAKE,EAAEC,QAAQf,SAASmB,IACzB/D,KAAKsD,sBAAsBS,IAC7B/D,KAAKG,gBAAgBM,IAAIsD,EAAKL,EAAEC,OAAOI,GACzC,IAEF/D,KAAK0B,iBAEX,CAEAsC,iBAAAA,GACEhE,KAAKiE,iBAAiB,SAAUjE,KAAKyD,gBACvC,EAGF,S","sources":["../node_modules/protvista-manager/src/protvista-manager.js"],"sourcesContent":["const LENGTH = \"length\";\nconst DISPLAY_START = \"displaystart\";\nconst DISPLAY_END = \"displayend\";\nconst HIGHLIGHT = \"highlight\";\n\nclass ProtVistaManager extends HTMLElement {\n  constructor() {\n    super();\n    this.protvistaElements = new Set();\n    this.attributeValues = new Map();\n    this.propertyValues = new Map();\n    this.mouseOver = false;\n  }\n\n  static get observedAttributes() {\n    return [\"attributes\", LENGTH, DISPLAY_START, DISPLAY_END, HIGHLIGHT];\n  }\n\n  set length(length) {\n    this.attributeValues.set(LENGTH, length);\n  }\n\n  get length() {\n    return this.attributeValues.get(LENGTH);\n  }\n\n  set displaystart(displaystart) {\n    this.attributeValues.set(DISPLAY_START, displaystart);\n  }\n\n  get displaystart() {\n    return this.attributeValues.get(DISPLAY_START);\n  }\n\n  set displayend(displayend) {\n    this.attributeValues.set(DISPLAY_END, displayend);\n  }\n\n  get displayend() {\n    return this.attributeValues.get(DISPLAY_END);\n  }\n\n  set highlight(highlight) {\n    this.attributeValues.set(HIGHLIGHT, highlight);\n  }\n\n  get highlight() {\n    return this.attributeValues.get(HIGHLIGHT);\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (oldValue !== newValue) {\n      if (name === \"attributes\") {\n        this._attributes = newValue.split(\" \");\n        if (this._attributes.indexOf(\"type\") !== -1)\n          throw new Error(\"'type' can't be used as a protvista attribute\");\n        if (this._attributes.indexOf(\"value\") !== -1)\n          throw new Error(\"'value' can't be used as a protvista attribute\");\n        this.attributeValues = new Map(\n          this._attributes\n            .filter(\n              (attr) => !ProtVistaManager.observedAttributes.includes(attr)\n            )\n            .map((attr) => [attr, null])\n        );\n      } else {\n        if (name === LENGTH) {\n          this.length = newValue;\n        }\n        if (name === DISPLAY_START) {\n          this.displaystart = newValue;\n        }\n        if (name === DISPLAY_END) {\n          this.displayend = newValue;\n        }\n        if (name === HIGHLIGHT) {\n          this.highlight = newValue;\n        }\n      }\n      this.applyAttributes();\n    }\n  }\n\n  register(element) {\n    this.protvistaElements.add(element);\n    this.applyAttributes();\n  }\n\n  unregister(element) {\n    this.protvistaElements.delete(element);\n  }\n\n  _polyfillElementClosest() {\n    // Polyfill for IE support, see\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/closest\n    if (!Element.prototype.matches) {\n      Element.prototype.matches =\n        Element.prototype.msMatchesSelector ||\n        Element.prototype.webkitMatchesSelector;\n    }\n\n    if (!Element.prototype.closest) {\n      Element.prototype.closest = (s) => {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        let el = this;\n\n        do {\n          if (el.matches(s)) return el;\n          el = el.parentElement || el.parentNode;\n        } while (el !== null && el.nodeType === 1);\n        return null;\n      };\n    }\n  }\n\n  applyAttributes() {\n    this.protvistaElements.forEach((element) => {\n      this.attributeValues.forEach((value, type) => {\n        if (value === false || value === null || value === undefined) {\n          element.removeAttribute(type);\n        } else {\n          element.setAttribute(type, typeof value === \"boolean\" ? \"\" : value);\n        }\n      });\n    });\n  }\n\n  applyProperties(forElementId) {\n    if (forElementId) {\n      const element = this.querySelector(`#${forElementId}`);\n      this.propertyValues.forEach((value, type) => {\n        element[type] = value;\n      });\n    } else {\n      this.protvistaElements.forEach((element) => {\n        this.propertyValues.forEach((value, type) => {\n          /* eslint-disable no-param-reassign */\n          element[type] = value;\n        });\n      });\n    }\n  }\n\n  isRegisteredAttribute(attributeName) {\n    return (\n      [...this.attributeValues.keys()].includes(attributeName) ||\n      ProtVistaManager.observedAttributes.includes(attributeName)\n    );\n  }\n\n  _changeListener(e) {\n    if (!e.detail) {\n      return;\n    }\n    switch (e.detail.handler) {\n      case \"property\":\n        this.propertyValues.set(e.detail.type, e.detail.value);\n        this.applyProperties(e.detail.for);\n        break;\n      default:\n        if (this.isRegisteredAttribute(e.detail.type)) {\n          this.attributeValues.set(e.detail.type, e.detail.value);\n        }\n        Object.keys(e.detail).forEach((key) => {\n          if (this.isRegisteredAttribute(key)) {\n            this.attributeValues.set(key, e.detail[key]);\n          }\n        });\n        this.applyAttributes();\n    }\n  }\n\n  connectedCallback() {\n    this.addEventListener(\"change\", this._changeListener);\n  }\n}\n\nexport default ProtVistaManager;\n"],"names":["LENGTH","DISPLAY_START","DISPLAY_END","HIGHLIGHT","ProtVistaManager","HTMLElement","constructor","super","this","protvistaElements","Set","attributeValues","Map","propertyValues","mouseOver","observedAttributes","length","set","get","displaystart","displayend","highlight","attributeChangedCallback","name","oldValue","newValue","_attributes","split","indexOf","Error","filter","attr","includes","map","applyAttributes","register","element","add","unregister","delete","_polyfillElementClosest","Element","prototype","matches","msMatchesSelector","webkitMatchesSelector","closest","s","el","parentElement","parentNode","nodeType","forEach","value","type","undefined","removeAttribute","setAttribute","applyProperties","forElementId","querySelector","concat","isRegisteredAttribute","attributeName","keys","_changeListener","e","detail","handler","for","Object","key","connectedCallback","addEventListener"],"sourceRoot":""}