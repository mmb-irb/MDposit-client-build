{"version":3,"file":"static/js/protvista-navigation.f7ef863f.chunk.js","mappings":"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","sources":["../node_modules/protvista-navigation/src/protvista-navigation.js","../node_modules/protvista-utils/src/Region.js","../node_modules/protvista-utils/src/TrackHighlighter.js","../node_modules/protvista-utils/src/ColorScaleParser.js","../node_modules/protvista-utils/src/String2Object.js","../node_modules/protvista-utils/src/withMargin.js","../node_modules/protvista-utils/src/index.js","../node_modules/protvista-utils/src/ScrollFilter.js"],"sourcesContent":["import {\n  scaleLinear,\n  axisBottom,\n  brushX,\n  format,\n  select,\n  event as d3Event,\n} from \"d3\";\n\nimport { withMargin } from \"protvista-utils\";\n\nclass ProtVistaNavigation extends HTMLElement {\n  constructor() {\n    super();\n    this._x = null;\n    this._padding = 0;\n    this.height = 40;\n    this.dontDispatch = false;\n  }\n\n  _refreshWidth() {\n    this.style.display = \"block\";\n    this.style.width = \"100%\";\n    this.width = this.offsetWidth - this.margin.left - this.margin.right;\n    if (this.width > 0) {\n      this._padding = 10;\n    }\n  }\n\n  connectedCallback() {\n    this._refreshWidth();\n    if (this.closest(\"protvista-manager\")) {\n      this.manager = this.closest(\"protvista-manager\");\n      this.manager.register(this);\n    }\n    this._length = parseFloat(this.getAttribute(\"length\"));\n    this._displaystart = parseFloat(this.getAttribute(\"displaystart\")) || 1;\n    this._displayend =\n      parseFloat(this.getAttribute(\"displayend\")) || this._length;\n    this._highlightStart = parseFloat(this.getAttribute(\"highlightStart\"));\n    this._highlightEnd = parseFloat(this.getAttribute(\"highlightEnd\"));\n    this._rulerstart = parseFloat(this.getAttribute(\"rulerStart\")) || 1;\n\n    this._onResize = this._onResize.bind(this);\n\n    this._createNavRuler();\n  }\n\n  disconnectedCallback() {\n    if (this.manager) {\n      this.manager.unregister(this);\n    }\n    if (this._ro) {\n      this._ro.unobserve(this);\n    }\n    window.removeEventListener(\"resize\", this._onResize);\n  }\n\n  static get observedAttributes() {\n    return [\n      \"length\",\n      \"displaystart\",\n      \"displayend\",\n      \"highlightStart\",\n      \"highlightEnd\",\n      \"width\",\n      \"rulerstart\",\n    ];\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (oldValue !== newValue) {\n      this[`_${name}`] = parseFloat(newValue);\n      this._updateNavRuler();\n    }\n  }\n\n  get width() {\n    return this._width;\n  }\n\n  set width(width) {\n    this._width = width;\n  }\n\n  _createNavRuler() {\n    this._x = scaleLinear().range([this._padding, this.width - this._padding]);\n    this._x.domain([this._rulerstart, this._rulerstart + this._length - 1]);\n\n    select(this).selectAll(\"div\").remove();\n    this._container = select(this).append(\"div\").attr(\"class\", \"container\");\n\n    this._svg = this._container\n      .append(\"svg\")\n      .attr(\"id\", \"\")\n      .attr(\"width\", this.width)\n      .attr(\"height\", this.height);\n\n    this._xAxis = axisBottom(this._x);\n\n    this._displaystartLabel = this._svg\n      .append(\"text\")\n      .attr(\"class\", \"start-label\")\n      .attr(\"x\", 0)\n      .attr(\"y\", this.height - this._padding);\n\n    this._displayendLabel = this._svg\n      .append(\"text\")\n      .attr(\"class\", \"end-label\")\n      .attr(\"x\", this.width)\n      .attr(\"y\", this.height - this._padding)\n      .attr(\"text-anchor\", \"end\");\n    this._axis = this._svg\n      .append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .call(this._xAxis);\n\n    this._viewport = brushX()\n      .extent([\n        [this._padding, 0],\n        [this.width - this._padding, this.height * 0.51],\n      ])\n      .on(\"brush\", () => {\n        if (d3Event.selection) {\n          this._displaystart = format(\"d\")(\n            this._x.invert(d3Event.selection[0])\n          );\n          this._displayend = format(\"d\")(this._x.invert(d3Event.selection[1]));\n          if (!this.dontDispatch)\n            this.dispatchEvent(\n              new CustomEvent(\"change\", {\n                detail: {\n                  displayend: this._displayend,\n                  displaystart: this._displaystart,\n                  extra: { transform: d3Event.transform },\n                },\n                bubbles: true,\n                cancelable: true,\n              })\n            );\n          this._updateLabels();\n          this._updatePolygon();\n        }\n      });\n\n    this._brushG = this._svg\n      .append(\"g\")\n      .attr(\"class\", \"brush\")\n      .call(this._viewport);\n\n    this._brushG.call(this._viewport.move, [\n      this._x(this._displaystart),\n      this._x(this._displayend),\n    ]);\n\n    this.polygon = this._svg\n      .append(\"polygon\")\n      .attr(\"class\", \"zoom-polygon\")\n      .attr(\"fill\", \"#777\")\n      .attr(\"fill-opacity\", \"0.3\");\n    this._updateNavRuler();\n\n    if (\"ResizeObserver\" in window) {\n      this._ro = new ResizeObserver(this._onResize);\n      this._ro.observe(this);\n    }\n    window.addEventListener(\"resize\", this._onResize);\n  }\n\n  _onResize() {\n    this._refreshWidth();\n    this._x = this._x.range([this._padding, this.width - this._padding]);\n    this._svg.attr(\"width\", this.width);\n    this._viewport.extent([\n      [this._padding, 0],\n      [this.width - this._padding, this.height * 0.51],\n    ]);\n    this._brushG.call(this._viewport);\n    this._updateNavRuler();\n  }\n\n  _updateNavRuler() {\n    if (this._x) {\n      this._container\n        .style(\"padding-left\", `${this.margin.left}px`)\n        .style(\"padding-right\", `${this.margin.right}px`)\n        .style(\"padding-top\", `${this.margin.top}px`)\n        .style(\"padding-bottom\", `${this.margin.bottom}px`);\n      this._x.domain([this._rulerstart, this._rulerstart + this._length - 1]);\n      this._axis.call(this._xAxis);\n      this._updatePolygon();\n      this._updateLabels();\n      if (this._brushG) {\n        this.dontDispatch = true;\n        this._brushG.call(this._viewport.move, [\n          this._x(this._displaystart),\n          this._x(this._displayend),\n        ]);\n        this.dontDispatch = false;\n      }\n    }\n  }\n\n  _updateLabels() {\n    if (this._displaystartLabel)\n      this._displaystartLabel.text(this._displaystart);\n    if (this._displayendLabel)\n      this._displayendLabel.attr(\"x\", this.width).text(this._displayend);\n  }\n\n  _updatePolygon() {\n    if (this.polygon)\n      this.polygon.attr(\n        \"points\",\n        `${this._x(this._displaystart)},${this.height / 2}\n        ${this._x(this._displayend)},${this.height / 2}\n        ${this.width},${this.height}\n        0,${this.height}`\n      );\n  }\n}\n\nexport default withMargin(ProtVistaNavigation);\n","export default class Region {\n  constructor({ min = -Infinity, max = Infinity } = {}) {\n    this.segments = [];\n    this.max = max;\n    this.min = min;\n    this.regionString = null;\n  }\n\n  encode(full = false) {\n    return this.segments\n      .map(({ start, end, color }) => {\n        if (full) return `${start}:${end}${color ? `:${color}` : \"\"}`;\n        const s = start === this.min ? \"\" : start;\n        const e = end === this.max ? \"\" : end;\n        return `${s}:${e}${color ? `:${color}` : \"\"}`;\n      })\n      .join(\",\");\n  }\n\n  decode(regionString) {\n    if (typeof regionString !== \"undefined\") this.regionString = regionString;\n    if (!this.regionString) {\n      this.segments = [];\n      return;\n    }\n    this.segments = this.regionString.split(\",\").map((region) => {\n      const [_start, _end, _color, _] = region.split(\":\");\n      if (typeof _ !== \"undefined\")\n        throw new Error(\n          `there should be at most 2 ':' per region. Region: ${region}`\n        );\n      let start = _start ? Number(_start) : this.min;\n      let end = _end ? Number(_end) : this.max;\n      const color = _color !== \"\" ? _color : undefined;\n      if (start > end) [start, end] = [end, start];\n      if (start < this.min) start = this.min;\n      if (end > this.max) end = this.max;\n      if (Number.isNaN(start))\n        throw new Error(\n          `The parsed value of ${_start} is NaN. Region: ${region}`\n        );\n      if (Number.isNaN(end))\n        throw new Error(\n          `The parsed value of ${_end} is NaN. Region: ${region}`\n        );\n      if (color && !color.match(/^#[0-9a-f]{6,8}$/i))\n        throw new Error(\n          `The parsed value of ${_color} is not a color in hex format. Region: ${region}`\n        );\n\n      return {\n        start,\n        end,\n        color,\n      };\n    });\n  }\n}\n","import Region from \"./Region\";\n\nconst DEFAULT_HIGLIGHT_COLOR = \"#FFEB3B66\";\n\nconst combineRegions = (region1, region2) => {\n  if (!region1) return region2;\n  if (!region2) return region1;\n  return `${region1},${region2}`;\n};\nexport default class TrackHighlighter {\n  constructor({ element, min, max }) {\n    this.element = element;\n    this.element._highlightcolor = DEFAULT_HIGLIGHT_COLOR;\n    this.region = new Region({ min, max });\n    this.fixedHighlight = null;\n  }\n\n  set max(max) {\n    this.region.max = max;\n  }\n\n  setAttributesInElement() {\n    this.region.decode(this.element.getAttribute(\"highlight\"));\n    if (this.region.segments.length === 0) {\n      this.element._highlightstart = Number(\n        this.element.getAttribute(\"highlightstart\")\n      );\n      this.element._highlightend = Number(\n        this.element.getAttribute(\"highlightend\")\n      );\n      this.element._highlightcolor =\n        this.element.getAttribute(\"highlightcolor\") || DEFAULT_HIGLIGHT_COLOR;\n      if (\n        this.element._highlightstart !== null &&\n        this.element._highlightend !== null &&\n        typeof this.element._highlightstart === \"number\" &&\n        typeof this.element._highlightend === \"number\"\n      ) {\n        this.element._highlight = `${this.element._highlightstart}:${this.element._highlightend}`;\n        this.region.decode(\n          combineRegions(this.fixedHighlight, this.element._highlight)\n        );\n      }\n    }\n  }\n\n  setFloatAttribute(name, strValue) {\n    const value = parseFloat(strValue);\n    this.element[`_${name}`] = Number.isNaN(value) ? strValue : value;\n  }\n\n  changedCallBack(name, newValue) {\n    switch (name) {\n      case \"highlightstart\":\n      case \"highlightend\":\n        this.setFloatAttribute(name, newValue);\n        this.element._highlight =\n          Number.isNaN(this.element._highlightstart) ||\n          Number.isNaN(this.element._highlightend) ||\n          this.element._highlightstart === undefined ||\n          this.element._highlightend === undefined ||\n          this.element._highlightstart === null ||\n          this.element._highlightend === null\n            ? \"\"\n            : `${Math.max(\n                this.region.min,\n                this.element._highlightstart\n              )}:${Math.min(this.region.max, this.element._highlightend)}`;\n        break;\n      default:\n        this.element._highlight = newValue;\n    }\n    this.region.decode(\n      combineRegions(this.fixedHighlight, this.element._highlight)\n    );\n    this.element.refresh();\n  }\n\n  setFixedHighlight(region) {\n    this.fixedHighlight = region;\n    this.region.decode(combineRegions(region, this.element._highlight));\n    this.element.refresh();\n  }\n\n  appendHighlightTo(svg) {\n    this.highlighted = svg.append(\"g\").attr(\"class\", \"highlighted\");\n  }\n\n  updateHighlight() {\n    const highlighs = this.highlighted\n      .selectAll(\"rect\")\n      .data(this.region.segments);\n    highlighs\n      .enter()\n      .append(\"rect\")\n      .style(\"pointer-events\", \"none\")\n      .merge(highlighs)\n      .attr(\"fill\", (d) => (d.color ? d.color : this.element._highlightcolor))\n      .attr(\"height\", this.element._height)\n      .attr(\"x\", (d) => this.element.getXFromSeqPosition(d.start))\n      .attr(\n        \"width\",\n        (d) => this.element.getSingleBaseWidth() * (d.end - d.start + 1)\n      );\n    highlighs.exit().remove();\n  }\n}\n","export function isColorValid(color) {\n  const fakeElement = document.createElement(\"div\");\n  fakeElement.style.borderColor = \"\";\n  fakeElement.style.borderColor = color;\n  if (fakeElement.style.borderColor === \"\") return false;\n  return true;\n}\n\nexport default (text = null) => {\n  let range = [];\n  let domain = [];\n  if (text !== null && typeof text !== \"string\")\n    throw new Error(\"The attribute text has to be of type string\");\n  if (text && text.trim() !== \"\") {\n    const blocks = text.split(\",\").map(bl => bl.split(\":\"));\n    if (blocks.length < 2)\n      throw new Error(\"There should be at least 2 points to create a scale\");\n\n    range = blocks.map(bl => {\n      const color = bl[0].trim().toUpperCase();\n      if (!isColorValid(color)) {\n        throw new Error(`The color '${color} is not valid'`);\n      }\n      return color;\n    });\n    domain = blocks.map((bl, i) => {\n      const number = parseFloat(bl[1]);\n      if (Number.isNaN(number))\n        throw new Error(\n          `The second part of every point should be a number. Error in point ${i}: ${bl}`\n        );\n      return number;\n    });\n  }\n  return {\n    range,\n    domain\n  };\n};\n","const identity = x => x;\n\nexport default (\n  string = null,\n  { keyFormatter = identity, valueFormatter = identity } = {}\n) => {\n  if (string !== null && typeof string !== \"string\")\n    throw new Error(\"The attribute text has to be of type string\");\n  if (string && string.trim() !== \"\") {\n    const blocks = string.split(\",\").map(bl => bl.split(\":\"));\n    const obj = {};\n    blocks.forEach(bl => {\n      if (bl.length !== 2)\n        throw new Error(\n          `Bad block: ${bl.join(\n            \":\"\n          )}\\n The blocks of the string should follow the format KEY:VALUE`\n        );\n      obj[keyFormatter(bl[0])] = valueFormatter(bl[1]);\n    });\n    return obj;\n  }\n  return {};\n};\n","const sides = [\"left\", \"right\", \"top\", \"bottom\"];\nconst marginSides = sides.map((side) => `margin${side}`);\n\nconst withMargin = (\n  Element,\n  options = {\n    initialValue: {\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n    },\n  }\n) => {\n  class ElementWithMargin extends Element {\n    constructor() {\n      super();\n      this.margin = options.initialValue;\n    }\n\n    static get observedAttributes() {\n      return [...super.observedAttributes, ...marginSides];\n    }\n\n    attributeChangedCallback(name, oldValue, newValue) {\n      if (oldValue !== newValue) {\n        if (marginSides.includes(name)) {\n          this[name] = newValue;\n        }\n      }\n      super.attributeChangedCallback(name, oldValue, newValue);\n    }\n  }\n  for (const side of sides) {\n    Object.defineProperty(ElementWithMargin.prototype, `margin${side}`, {\n      get() {\n        return this.margin[side] || 0;\n      },\n      set(value) {\n        this.margin[side] = +value;\n      },\n    });\n  }\n  return ElementWithMargin;\n};\n\nexport default withMargin;\n","import _Region from \"./Region\";\nimport _th from \"./TrackHighlighter\";\nimport _csp from \"./ColorScaleParser\";\nimport _s2o from \"./String2Object\";\nimport _sf from \"./ScrollFilter\";\nimport _withMargin from \"./withMargin\";\n\nexport const Region = _Region;\nexport const TrackHighlighter = _th;\nexport const ColorScaleParser = _csp;\nexport const String2Object = _s2o;\nexport const ScrollFilter = _sf;\nexport const withMargin = _withMargin;\n","export default class ScrollFilter {\n  constructor(element, scrollDelay = 400) {\n    this.element = element;\n    this.timeStampWheelOutside = 0;\n    this.resetScrollableTimeout = null;\n    this.scrollDelay = scrollDelay;\n  }\n\n  setElementScrollable(scrollable) {\n    this.element.setAttribute(\"scrollable\", scrollable);\n  }\n\n  startResetScrollableTimer() {\n    if (this.resetScrollableTimeout) {\n      clearTimeout(this.resetScrollableTimeout);\n    }\n    // Reset scrollable to true after a small period of time\n    this.resetScrollableTimeout = setTimeout(() => {\n      this.setElementScrollable(true);\n      this.resetScrollableTimeout = null;\n    }, this.scrollDelay);\n  }\n\n  blockScroll(timeStamp) {\n    this.timeStampWheelOutside = timeStamp;\n    this.setElementScrollable(false);\n    this.startResetScrollableTimer();\n  }\n\n  wheel({ target, timeStamp }) {\n    if (this.element.contains(target)) {\n      if (timeStamp < this.timeStampWheelOutside + this.scrollDelay) {\n        // Count this as an outside scroll as it's within the delay and it's\n        // inferred the user is doing a continuous scroll past the component\n        this.blockScroll(timeStamp);\n      } else {\n        this.setElementScrollable(true);\n      }\n    } else {\n      // Block scrolling and remember the time when the last scroll outside occurred.\n      this.blockScroll(timeStamp);\n    }\n  }\n}\n"],"names":["ProtVistaNavigation","HTMLElement","constructor","super","this","_x","_padding","height","dontDispatch","_refreshWidth","style","display","width","offsetWidth","margin","left","right","connectedCallback","closest","manager","register","_length","parseFloat","getAttribute","_displaystart","_displayend","_highlightStart","_highlightEnd","_rulerstart","_onResize","bind","_createNavRuler","disconnectedCallback","unregister","_ro","unobserve","window","removeEventListener","observedAttributes","attributeChangedCallback","name","oldValue","newValue","concat","_updateNavRuler","_width","scaleLinear","range","domain","select","selectAll","remove","_container","append","attr","_svg","_xAxis","axisBottom","_displaystartLabel","_displayendLabel","_axis","call","_viewport","brushX","extent","on","d3Event","selection","format","invert","dispatchEvent","CustomEvent","detail","displayend","displaystart","extra","transform","bubbles","cancelable","_updateLabels","_updatePolygon","_brushG","move","polygon","ResizeObserver","observe","addEventListener","top","bottom","text","withMargin","Region","min","Infinity","max","arguments","length","undefined","segments","regionString","encode","full","map","_ref","start","end","color","s","e","join","decode","split","region","_start","_end","_color","_","Error","Number","isNaN","match","DEFAULT_HIGLIGHT_COLOR","combineRegions","region1","region2","identity","x","sides","marginSides","side","Element","options","initialValue","ElementWithMargin","includes","Object","defineProperty","prototype","get","set","value","TrackHighlighter","element","_highlightcolor","fixedHighlight","setAttributesInElement","_highlightstart","_highlightend","_highlight","setFloatAttribute","strValue","changedCallBack","Math","refresh","setFixedHighlight","appendHighlightTo","svg","highlighted","updateHighlight","highlighs","data","enter","merge","d","_height","getXFromSeqPosition","getSingleBaseWidth","exit","ColorScaleParser","trim","blocks","bl","toUpperCase","fakeElement","document","createElement","borderColor","isColorValid","i","number","String2Object","string","keyFormatter","valueFormatter","obj","forEach","ScrollFilter","scrollDelay","timeStampWheelOutside","resetScrollableTimeout","setElementScrollable","scrollable","setAttribute","startResetScrollableTimer","clearTimeout","setTimeout","blockScroll","timeStamp","wheel","target","contains","_withMargin"],"sourceRoot":""}