{"version":3,"file":"static/js/protvista-sequence.b7fa3cdd.chunk.js","mappings":"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","sources":["../node_modules/protvista-sequence/src/protvista-sequence.js"],"sourcesContent":["import { axisBottom, select } from \"d3\";\n\nimport ProtvistaZoomable from \"protvista-zoomable\";\n\nconst DEFAULT_NUMBER_OF_TICKS = 3;\n\nclass ProtVistaSequence extends ProtvistaZoomable {\n  connectedCallback() {\n    super.connectedCallback();\n    this.sequence = this.getAttribute(\"sequence\");\n    const ticks = this.getAttribute(\"numberofticks\");\n    this.numberOfTicks = Number.isInteger(parseInt(ticks, 10))\n      ? ticks\n      : DEFAULT_NUMBER_OF_TICKS;\n    if (this.sequence) {\n      this._createSequence();\n    }\n    this.addEventListener(\"load\", (e) => {\n      this.data = e.detail.payload;\n    });\n  }\n\n  static get observedAttributes() {\n    return ProtvistaZoomable.observedAttributes.concat(\n      \"highlightstart\",\n      \"highlightend\"\n    );\n  }\n\n  get data() {\n    return this.sequence;\n  }\n\n  set data(data) {\n    if (typeof data === \"string\") this.sequence = data;\n    else if (\"sequence\" in data) this.sequence = data.sequence;\n    if (this.sequence && !super.svg) {\n      this._createSequence();\n    } else {\n      this.refresh();\n    }\n  }\n\n  _getCharSize() {\n    if (!this.seq_g) return;\n    const xratio = 0.8;\n    const yratio = 1.6;\n    const node = this.seq_g.select(\"text.base\").node();\n    if (node) {\n      this.chWidth = node.getBBox().width * xratio;\n      this.chHeight = node.getBBox().height * yratio;\n    } else {\n      // Add a dummy node to measure the width\n      const tempNode = this.seq_g\n        .append(\"text\")\n        .attr(\"class\", \"base\")\n        .text(\"T\");\n      this.chWidth = tempNode.node().getBBox().width * xratio;\n      this.chHeight = tempNode.node().getBBox().height * yratio;\n      tempNode.remove();\n    }\n  }\n\n  _createSequence() {\n    select(this).selectAll(\"div\").remove();\n    super.svg = select(this)\n      .append(\"div\")\n      .attr(\"class\", \"\")\n      .append(\"svg\")\n      .attr(\"id\", \"\")\n      .attr(\"width\", this.width)\n      .attr(\"height\", this._height);\n\n    this.seq_bg = super.svg.append(\"g\").attr(\"class\", \"background\");\n\n    this.axis = super.svg.append(\"g\").attr(\"class\", \"x axis\");\n\n    this.seq_g = super.svg\n      .append(\"g\")\n      .attr(\"class\", \"sequence\")\n      .attr(\"transform\", `translate(0,${0.75 * this._height})`);\n\n    this.trackHighlighter.appendHighlightTo(this.svg);\n    this.refresh();\n  }\n\n  refresh() {\n    this._getCharSize();\n    if (this.axis) {\n      const ftWidth = this.getSingleBaseWidth();\n      const space = ftWidth - this.chWidth;\n      const half = ftWidth / 2;\n      const first = Math.round(Math.max(0, this._displaystart - 2));\n      const last = Math.round(\n        Math.min(this.sequence.length, this._displayend + 1)\n      );\n      const bases =\n        space < 0\n          ? []\n          : this.sequence\n              .slice(first, last)\n              .split(\"\")\n              .map((aa, i) => {\n                return { start: 1 + first + i, end: 1 + first + i, aa };\n              });\n\n      // only add axis if there is room\n      if (this.height > this.chHeight) {\n        this.xAxis = axisBottom(this.xScale)\n          .tickFormat((d) => (Number.isInteger(d) ? d : \"\"))\n          .ticks(this.numberOfTicks, \"s\");\n        this.axis.call(this.xAxis);\n      }\n\n      this.axis.attr(\"transform\", `translate(${this.margin.left + half},0)`);\n      this.axis.select(\".domain\").remove();\n      this.axis.selectAll(\".tick line\").remove();\n\n      this.bases = this.seq_g\n        .selectAll(\"text.base\")\n        .data(bases, (d) => d.start);\n      this.bases\n        .enter()\n        .append(\"text\")\n        .attr(\"class\", \"base\")\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"x\", (d) => this.getXFromSeqPosition(d.start) + half)\n        .text((d) => d.aa)\n        .style(\"pointer-events\", \"none\")\n        .style(\"font-family\", \"monospace\");\n\n      this.bases.exit().remove();\n\n      this.bases.attr(\"x\", (d) => this.getXFromSeqPosition(d.start) + half);\n\n      this.background = this.seq_bg\n        .selectAll(\"rect.base_bg\")\n        .data(bases, (d) => d.start);\n      this.background\n        .enter()\n        .append(\"rect\")\n        .attr(\"class\", \"base_bg feature\")\n        .attr(\"height\", this._height)\n        .merge(this.background)\n        .attr(\"width\", ftWidth)\n        .attr(\"fill\", (d) => {\n          return Math.round(d.start) % 2 ? \"#ccc\" : \"#eee\";\n        })\n        .attr(\"x\", (d) => this.getXFromSeqPosition(d.start))\n        .call(this.bindEvents, this);\n      this.background.exit().remove();\n\n      this.seq_g.style(\"opacity\", Math.min(1, space));\n      this.background.style(\"opacity\", Math.min(1, space));\n\n      this._updateHighlight();\n    }\n  }\n\n  _updateHighlight() {\n    this.trackHighlighter.updateHighlight();\n  }\n}\n\nexport default ProtVistaSequence;\n"],"names":["ProtVistaSequence","ProtvistaZoomable","connectedCallback","super","this","sequence","getAttribute","ticks","numberOfTicks","Number","isInteger","parseInt","_createSequence","addEventListener","e","data","detail","payload","observedAttributes","concat","svg","refresh","_getCharSize","seq_g","node","select","chWidth","getBBox","width","chHeight","height","tempNode","append","attr","text","remove","selectAll","_height","seq_bg","axis","trackHighlighter","appendHighlightTo","ftWidth","getSingleBaseWidth","space","half","first","Math","round","max","_displaystart","last","min","length","_displayend","bases","slice","split","map","aa","i","start","end","xAxis","axisBottom","xScale","tickFormat","d","call","margin","left","enter","getXFromSeqPosition","style","exit","background","merge","bindEvents","_updateHighlight","updateHighlight"],"sourceRoot":""}