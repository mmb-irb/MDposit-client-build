{"version":3,"file":"static/js/3804.369a2bd1.chunk.js","mappings":"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","sources":["webpack://mdposit/./src/components/animated-card/style.module.css?d4d9","components/animated-card/index.js","components/ngl-viewer/use-epitopes-representations/index.js","components/ngl-viewer/use-mutations-representations/index.js","utils/load-custom-element/index.js","pages/accession/trajectory/chains/chain-analysis/index.js","utils/hash-from-string/index.js","utils/color-from-string/index.js","utils/merge-intervals/index.js","pages/accession/trajectory/chains/chain-analysis/process-ipscan-results/index.js","pages/accession/trajectory/chains/index.js","webpack://mdposit/./src/components/domains/style.module.css?a054","components/domains/index.js","pages/accession/trajectory/index.js","pages/accession/trajectory/metadata/index.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","../node_modules/@mui/material/InputAdornment/inputAdornmentClasses.js","../node_modules/@mui/material/InputAdornment/InputAdornment.js","webpack://mdposit/./src/pages/accession/trajectory/chains/chain-analysis/style.module.css?b840","webpack://mdposit/./src/pages/accession/trajectory/chains/style.module.css?611e","webpack://mdposit/./src/pages/accession/trajectory/metadata/style.module.css?1f4a","webpack://mdposit/./src/pages/accession/trajectory/style.module.css?3307"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"style_container__M9GCG\"};","import React, { useLayoutEffect, useRef, forwardRef } from 'react';\nimport { Card } from '@mui/material';\n\nimport reducedMotion from '../../utils/reduced-motion';\n\nimport style from './style.module.css';\n\nconst KEYFRAMES = { opacity: [0, 1] };\n\nif (!reducedMotion()) {\n  KEYFRAMES.transform = ['translateY(50px)', 'translateY(0)'];\n}\n\nconst ANIMATION_OPTIONS = {\n  fill: 'both',\n  easing: 'cubic-bezier(0, .99, .56, 1.1)',\n  duration: 500,\n};\n\n// Make the card appear and slide softly from down to up when the page is loaded\nconst AnimatedCard = forwardRef(({ overrideComponent, ...props }, ref) => {\n  const containerRef = useRef(null);\n\n  useLayoutEffect(() => {\n    const node = containerRef.current && containerRef.current.firstElementChild;\n    if (!(node && node.animate)) return;\n\n    const index = Array.from(\n      document.querySelectorAll('main section'),\n    ).findIndex(section => node === section);\n\n    const animation = node.animate(KEYFRAMES, {\n      ...ANIMATION_OPTIONS,\n      delay: index * 150,\n    });\n\n    return () => animation.cancel();\n  }, []);\n\n  const Component = overrideComponent ? 'section' : Card;\n\n  return (\n    <div ref={containerRef} className={style.container}>\n      <Component component=\"section\" {...props} ref={ref} />\n    </div>\n  );\n});\n\nexport default AnimatedCard;\n","import { useContext, useMemo } from 'react';\n\nimport { ProjectCtx } from '../../../contexts';\n\n// Use this hook to get the memoized NGL default representations\nconst useEpitopesRepresentations = () => {\n  // Get the current project data\n  const { topology } = useContext(ProjectCtx);\n  // Set the representations for the NGL viewer\n  const epitopesRepresentations = useMemo(() => {\n    if (!topology) return;\n    // Check that at least one of the protein references has epitopes\n    const anyReferenceEpitopes = topology.proteinReferences.some(\n      reference => !!reference.epitopes,\n    );\n    if (!anyReferenceEpitopes) return;\n    // Get the residues on each reference epitopes in the current topology numeration\n    const mappedResiduesPerReference = topology.proteinReferences.map(reference => {\n      // Get the reference name and epitopes\n      const referenceId = reference.uniprot;\n      const referenceEpitopes = reference.epitopes;\n      if (!referenceEpitopes) return [];\n      // Save all epitope residues together and eliminate duplicates\n      const epitopeResidues = Object.values(referenceEpitopes).map(\n        epitope => epitope.residues,\n      );\n      const allResidues = [].concat.apply([], epitopeResidues);\n      const uniqueResidues = Array.from(new Set(allResidues));\n      const mappedResidues = topology.getReferenceResidueIndices(\n        referenceId,\n        uniqueResidues,\n      );\n      if (!mappedResidues) return [];\n      return mappedResidues;\n    });\n    // Join all previous mapped residues together\n    const allMappedResidues = [].concat.apply(\n      [],\n      Object.values(mappedResiduesPerReference),\n    );\n    // Transform mapped residues indices to an NGL selection\n    const { rangedSelection, small } = topology.residueIndices2Ngl(\n      allMappedResidues,\n    );\n    const reps = [\n      {\n        name: 'Epitopes',\n        selection: rangedSelection || 'none',\n        type: small ? 'licorice' : 'cartoon',\n        color: 'purple',\n      },\n    ];\n    return reps;\n  }, [topology]);\n\n  return epitopesRepresentations;\n};\n\nexport default useEpitopesRepresentations;\n","import { useContext, useMemo } from 'react';\n\nimport { ColormakerRegistry } from 'ngl';\n\nimport { color as d3color, scaleLinear } from 'd3';\n\nimport { ProjectCtx } from '../../../contexts';\n\n// Set the color of each residue in the NGL representation\n// WARNING: Grey looks better than white because the background may be white and resdiues are hard to see\nconst greyColorPlan = ['grey', 'yellow', 'red'];\n\n// Use this hook to get the memoized NGL default representations\nconst useMutationsRepresentations = () => {\n  // Get project data\n  const { topology: topologyManager } = useContext(ProjectCtx);\n\n  // Set the representations for the NGL viewer\n  const mutationRepresentations = useMemo(() => {\n    if (!topologyManager) return;\n    // Check that at least 1 of the references has entropies\n    const anyReferenceMutations = topologyManager.proteinReferences.some(\n      reference => !!reference.entropies,\n    );\n    if (!anyReferenceMutations) return;\n\n    // Get the entorpies of each reference\n    // Save the logarithmic values on each reference\n    const entropiesPerReference = topologyManager.proteinReferences.map(reference => {\n      if (!reference.entropies) return [];\n      const logarithmicEntropies = reference.entropies.map(entropy =>\n        Math.log(entropy + 0.0001),\n      );\n      reference.logarithmicEntropies = logarithmicEntropies;\n      return logarithmicEntropies;\n    });\n\n    // Save all array values together just to check the minimum and maximum values\n    const allEntropies = [].concat.apply([], entropiesPerReference);\n    const max = Math.max(...allEntropies);\n    const min = Math.min(...allEntropies);\n\n    // Set the color scale according to the maximum and minimum means\n    const colorScale = scaleLinear()\n      .range(greyColorPlan)\n      .domain([min, (min + max) / 2, max]);\n\n    const colorScheme = ColormakerRegistry.addScheme(function(params) {\n      this.atomColor = atom => {\n        // Find the residue index and then the entropy for this residue\n        // WARNING: atom.residueIndex starts the count at 0 although it may seem that starts at 1\n        // WARNING: It may happen that the first residue is a capping terminal and it is skipped\n        // WARNING: The cartoon representation would skip the non-standard residue and start by 1\n        const residueIndex = atom.residueIndex;\n        const residue = topologyManager.getResidueByIndex(residueIndex);\n        const referenceId = residue.referenceId;\n        // If no reference residue was found then paint it white\n        if (!referenceId) return parseInt('ffffff', 16);\n        // get the corresponding entropy\n        // -1 because the residue 'x' would be the index 'x-1' in the array\n        const reference = residue.referenceData;\n        const entropies = reference.logarithmicEntropies;\n        if (!entropies || entropies.length === 0) return parseInt('ffffff', 16);\n        const entropy = entropies[residue.referenceNumber - 1];\n        // If there is no entropy at this point probably there is something wrong with the map\n        if (!entropy) return parseInt('ffffff', 16);\n        // Calculate the interpolated rgb for this value\n        // The interpolated color comes in rbg format\n        const hexColor = d3color(colorScale(entropy)).formatHex();\n        // The color interpolation returns a string like '#000000'\n        // We remove the first character ('#') and parse it to integer from hexadecimal\n        const color = parseInt(hexColor.substring(1), 16);\n        return color;\n      };\n    });\n\n    const reps = [\n      { name: 'Mutations', color: 'custom', customScheme: colorScheme },\n    ];\n    return reps;\n  }, [topologyManager]);\n\n  return mutationRepresentations;\n};\n\nexport default useMutationsRepresentations;\n","const loadCustomElement = importer => ({\n  async as(namespace) {\n    let _namespace = namespace;\n    // load custom element script\n    let customElement = await importer();\n    if (customElement.default) customElement = customElement.default;\n    // if no name was specified, use default provided by the custom element\n    if (\n      !_namespace &&\n      customElement.is &&\n      typeof customElement.is === 'string'\n    ) {\n      _namespace = customElement.is;\n    }\n    // if we get to this point without any name, just give up\n    if (!_namespace) {\n      throw new Error('Please a specify a name for custom element');\n    }\n    // check if not already defined\n    const alreadyExisting = window.customElements.get(_namespace);\n    if (alreadyExisting) {\n      // if it was, with the same element, everything is fine\n      if (alreadyExisting === customElement) return _namespace;\n      throw new Error('This name is already used by another component');\n    }\n    window.customElements.define(_namespace, customElement);\n    return _namespace;\n  },\n});\n\nexport default loadCustomElement;\n","import React, { memo, useEffect, useRef } from 'react';\n\nimport loadCustomElement from '../../../../../utils/load-custom-element';\n\nimport processIPScanResults from './process-ipscan-results';\n\nimport style from './style.module.css';\n\n// Keep elements out of any component, since they must be imported just once\nlet customElements = [];\n// This promise is further resolven when all protvista elements have finished the import process\nlet protvistaLoadedResolve;\nconst protvistaLoaded = new Promise(resolve => { protvistaLoadedResolve = resolve });\n\n// Load all protvista components together in a 'custom' way for them to work\nconst importProtVista = async () => {\n  if (customElements.length > 0) return;\n  customElements = [\n        // WARNING: We must make sure the manager is imported before the others\n        // Otherwise we get many errors of 'this.manager.register is not a function'\n        // The rest of components may be imported in any order\n        await loadCustomElement(() => import(\n            /* webpackChunkName: \"protvista-manager\" */ 'protvista-manager'),\n        ).as('protvista-manager'),\n        loadCustomElement(() => import(\n            /* webpackChunkName: \"protvista-sequence\" */ 'protvista-sequence'\n        )).as('protvista-sequence'),\n        loadCustomElement(() => import(\n            /* webpackChunkName: \"protvista-navigation\" */ 'protvista-navigation'\n        )).as('protvista-navigation'),\n        loadCustomElement(() => import(\n            /* webpackChunkName: \"protvista-coloured-sequence\" */ 'protvista-coloured-sequence'\n        )).as('protvista-coloured-sequence'),\n        loadCustomElement(() => import(\n            /* webpackChunkName: \"protvista-coloured-sequence\" */ 'protvista-coloured-sequence'\n        )).as('protvista-coloured-sequence'),\n        loadCustomElement(() => import(\n            /* webpackChunkName: \"protvista-interpro-track\" */ 'protvista-interpro-track'\n        )).as('protvista-interpro-track')\n  ];\n  // Wait until all protvista elements are loaded and then resolve the promise\n  await Promise.all(customElements);\n  protvistaLoadedResolve();\n};\n\n// Set the protvista interpro track independently, since it needs to keep its own reference\nconst InterproTrack = memo(({ match, length, shape, classAttr }) => {\n    // Set a reference to the protvista element\n    const protvistaRef = useRef();\n    // Update protvista element data after render\n    useEffect(() => {\n        const fillComponentWithData = async () => {\n            // Make sure the element has been imported already or it wont work\n            await protvistaLoaded;\n            // Load data in the reference\n            protvistaRef.current.data = [match];\n            protvistaRef.current.contributors = match.signatures || [];\n        }\n        fillComponentWithData();\n    }, []);\n    // Render the element\n    return (\n        <protvista-interpro-track\n            ref={protvistaRef}\n            length={length}\n            shape={shape}\n            class={classAttr}\n        />\n    );\n});\n\n// The result of this function is memoized since it is a heavy work\nconst ChainAnalyses = memo(({ data, firstResidueNumber }) => {\n    // Get the chain letter\n    const chain = data.name;\n    // Import protvista elements in their 'custom' way\n    useEffect(() => {\n        importProtVista();\n    }, []);\n    // Mine data\n    const sequence = data.sequence;\n    const sequenceLength = sequence.length;\n    const interproscanData = data.interproscan;\n    // It may happen that interproscan data is missing when we have a small sequence\n    if (!interproscanData) return 'No InterProScan data';\n    const matches = interproscanData.results[0].matches;\n    const processedMatches = processIPScanResults(matches, firstResidueNumber);\n    // Set the end residue to be displayed\n    const displayEnd = firstResidueNumber + sequenceLength;\n    // Set an shifted sequence by adding null values at the begining\n    // This is the only way I figured out to offset the sequence\n    // Apparently protvista sequence components have no argument for this\n    const shiftedSequence = ' '.repeat(firstResidueNumber) + sequence;\n    return (\n        <protvista-manager\n            attributes=\"length displaystart displayend\"\n            length={sequenceLength}\n            chain={chain}\n        >\n        <protvista-navigation\n            rulerstart={firstResidueNumber}\n            displaystart={firstResidueNumber}\n            displayend={displayEnd}\n        />\n        <div className={style.entries}>\n            <protvista-sequence\n                sequence={shiftedSequence}\n                height=\"37\"\n            />\n            <protvista-coloured-sequence\n                sequence={shiftedSequence}\n                scale=\"hydrophobicity-scale\"\n                height=\"15\"\n            />\n            { processedMatches.length\n            ? processedMatches.map((match, index) => {\n                return (\n                <div key={index} >\n                    <span className={style.label}>{match.accession}</span>\n                    <InterproTrack\n                    match={match}\n                    shape=\"roundRectangle\"\n                    classAttr={match.signatures ? style['has-signatures'] : undefined}\n                    />\n                </div>\n                )})\n            : 'No entry was found for this sequence'\n            }\n        </div>\n        </protvista-manager>\n    );\n});\n\nexport default ChainAnalyses;\n","const hashFromString = string => {\n  let hash = 0;\n  for (let i = 0; i < string.length; i++) {\n    hash = (hash << 5) - hash + string.charCodeAt(i);\n    hash |= 0;\n  }\n  return hash;\n};\n\nexport default hashFromString;\n","import hashFromString from '../hash-from-string';\n\nconst colorFromString = string => {\n  const hash = hashFromString(string);\n  const hue = Math.abs(hash % 360);\n  const saturation = Math.abs(hash % 20) + 40; // 50% give or take 10%\n  const lightness = Math.abs(hash % 10) + 45; // 50% give or take 5%\n  return `hsla(${hue}, ${saturation}%, ${lightness}%, 1)`;\n};\n\nexport default colorFromString;\n","const startAccessorDefault = (interval, value) =>\n  Number.isFinite(value) ? (interval[0] = value) : interval[0];\nconst endAccessorDefault = (interval, value) =>\n  Number.isFinite(value) ? (interval[1] = value) : interval[1];\n\nconst mergeIntervals = (\n  intervals,\n  startAccessor = startAccessorDefault,\n  endAccessor = endAccessorDefault,\n) => {\n  const sortedIntervals = Array.from(intervals).sort(\n    (a, b) => startAccessor(a) - startAccessor(b),\n  );\n  let output = [];\n  let current;\n  for (const interval of sortedIntervals) {\n    if (!current) {\n      // first loop\n      current = interval;\n    } else if (endAccessor(current) < startAccessor(interval)) {\n      // current is not within interval\n      output.push(current);\n      current = interval;\n    } else {\n      // current is within, or contiguous to interval\n      endAccessor(\n        current,\n        Math.max(endAccessor(current), endAccessor(interval)),\n      );\n    }\n  }\n  if (current) output.push(current);\n  return output;\n};\n\nexport default mergeIntervals;\n","import colorFromString from '../../../../../../utils/color-from-string';\nimport mergeIntervals from '../../../../../../utils/merge-intervals';\n\n// Renumerate residue numbers to make them match the actual chain they come from\nconst shiftLocations = (fragments, shift) => {\n  fragments.forEach(fragment => {\n    fragment.start += shift -1;\n    fragment.end += shift -1;\n  })\n  return fragments;\n}\n\nconst processLocations = (locations, firstResidueNumber = 1) =>\n  locations.map(location => ({\n    fragments: shiftLocations(location['location-fragments'], firstResidueNumber),\n  }));\n\nconst processIPScanResults = (matches, firstResidueNumber) => {\n  const processed = [];\n  // for all the matches\n  for (const match of matches || []) {\n    // if the match has an entry, consider it as a signature of the entry\n    if (match.signature.entry) {\n      let existing = processed.find(\n        m => m.accession === match.signature.entry.accession,\n      );\n      // if the entry hadn't been stored yet, create it now\n      if (!existing) {\n        existing = {\n          accession: match.signature.entry.accession,\n          db: 'InterPro',\n          signatures: [],\n          locations: [],\n          color: colorFromString(match.signature.entry.accession),\n        };\n        processed.push(existing);\n      }\n      const locations = processLocations(match.locations, firstResidueNumber);\n      existing.locations = mergeIntervals(\n        [...existing.locations, ...locations],\n        (interval, value) =>\n          Number.isFinite(value)\n            ? (interval.fragments[0].start = value)\n            : interval.fragments[0].start,\n        (interval, value) =>\n          Number.isFinite(value)\n            ? (interval.fragments[0].end = value)\n            : interval.fragments[0].end,\n      );\n      // add the match as a signature of that entry\n      existing.signatures.push({\n        accession: match.signature.accession,\n        db: match.signature.signatureLibraryRelease.library,\n        locations,\n        color: existing.color.replace(', 1)', ', 0.25)'),\n      });\n    } else {\n      // the match doesn't have entry, it is not integrated\n      processed.push({\n        accession: match.signature.accession,\n        db: match.signature.signatureLibraryRelease.library,\n        locations: processLocations(match.locations, firstResidueNumber),\n        color: colorFromString(match['model-ac']),\n      });\n    }\n  }\n\n  // sort them\n  processed\n    // secondary sort by start position\n    .sort((a, b) => a.locations[0].fragments[0].start - b.locations[0].fragments[0].start)\n    // primary sort by number of signatures\n    .sort((a, b) => (b.signatures || []).length - (a.signatures || []).length);\n\n  return processed;\n};\n\nexport default processIPScanResults;\n","import React, {\n    memo,\n    useContext,\n    useEffect,\n} from 'react';\n\n// Visual components\nimport { Typography } from '@mui/material';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleRight } from '@fortawesome/free-solid-svg-icons';\n\n// Recover the metadata saved in this context by the accession script\nimport { ProjectCtx } from '../../../../contexts';\n\n// The single chain analysis component, using protvista\nimport ChainAnalysis from './chain-analysis';\n\n// Check if reduced motion is requested\nimport reducedMotion from '../../../../utils/reduced-motion';\n\n// CSS style\nimport style from './style.module.css';\n\nconst dbMap = new Map([\n    ['InterPro', 'InterPro'],\n    // special cases\n    ['TIGRFAM', 'tigrfams'],\n    ['PROSITE_PROFILES', 'profile'],\n    ['PROSITE_PATTERNS', 'prosite'],\n    ['SUPERFAMILY', 'ssf'],\n    ['GENE3D', 'cathgene3d'],\n    // just the same, but lowercase\n    ['CDD', 'cdd'],\n    ['HAMAP', 'hamap'],\n    ['PANTHER', 'panther'],\n    ['PFAM', 'pfam'],\n    ['PIRSF', 'pirsf'],\n    ['PRINTS', 'prints'],\n    ['SFLD', 'sfld'],\n    ['SMART', 'smart'],\n]);\n\nconst ChainsAnalysis = memo(() => {\n    // Load chains references and the topology manager\n    const {\n        topology: topologyManager,\n        chainReferences,\n    } = useContext(ProjectCtx);\n    // Portals create a window where a web page is pre rendered without navigating to\n    // You can navigate to this web page by clicking on the portal\n    // NOTE: see https://web.dev/hands-on-portals for tutorial on Portals\n    useEffect(() => {\n        // bypass React for DOM alteration\n        // document.createElement is a different way to create React elements\n        const popup = document.createElement('div');\n        popup.className = style.popup;\n        let portal, portalContainer;\n        if ('HTMLPortalElement' in window) {\n            portalContainer = document.createElement('div');\n            portalContainer.className = style['portal-container'];\n            portal = document.createElement('portal');\n            portalContainer.appendChild(portal);\n            popup.appendChild(portalContainer);\n            portal.addEventListener('click', () => {\n            const bcr = portal.getBoundingClientRect();\n            portal.animate(\n                { transform: [`scale(1) translate(${-bcr.left}px, ${-bcr.top}px)`] },\n                {\n                    duration: reducedMotion() ? 0 : 1000,\n                    easing: 'cubic-bezier(.23,-0.26,0,1)',\n                    fill: 'both',\n                },\n            ).onfinish = () => {\n                // TODO: whenever the bug removing history when activating a portal is\n                // TODO: fixed, use this piece of code\n                // portal.activate();\n                // TODO: in the meantime... (yes, it does an ugly flash 🤷‍)\n                window.location.href = portal.src;\n            };\n            });\n        }\n    \n        const link = document.createElement('a');\n        link.rel = 'noopener';\n        link.target = '_blank';\n        popup.appendChild(link);\n    \n        let displayed = false;\n        let timeout;\n    \n        const clearPopup = () => {\n            link.textContent = '';\n            link.href = '';\n            if (portal) {\n                portalContainer.style.display = 'none';\n                portal.src = null;\n                portal.removeAttribute('src');\n            }\n            popup.style.visibility = 'hidden';\n            popup.style.transform = 'translate(0, 0)';\n        };\n    \n        const popupEnterHandle = () => clearTimeout(timeout);\n        const popupLeaveHandle = () => (timeout = setTimeout(clearPopup, 1000));\n    \n        popup.addEventListener('mouseenter', popupEnterHandle);\n        popup.addEventListener('mouseleave', popupLeaveHandle);\n    \n        // event handler for events emitted by the nightingale/protvista components\n        const handler = event => {\n            if (!event.detail) return;\n            let bcrTarget, bcrPopup, bcrTrack;\n            switch (event.detail.eventtype) {\n            case 'mouseover':\n                if (!event.detail.feature.accession) return;\n    \n                clearTimeout(timeout);\n    \n                const IP_DB = dbMap.get(event.detail.feature.db);\n                const href = IP_DB &&\n                    `https://www.ebi.ac.uk/interpro/entry/${IP_DB}/${event.detail.feature.accession}/`;\n                if (portal && IP_DB) portal.src = href;\n                link.textContent = `${event.detail.feature.db} - ${event.detail.feature.accession}`;\n                link.href = href;\n                if (IP_DB) {\n                if (portal) portalContainer.style.display = 'block';\n                } else {\n                if (portal) {\n                    portalContainer.style.display = 'none';\n                    portal.removeAttribute('src');\n                    portal.src = null;\n                }\n                link.removeAttribute('href');\n                }\n    \n                bcrTarget = event.detail.target.getBoundingClientRect();\n                bcrPopup = popup.getBoundingClientRect();\n                bcrTrack = event.detail.target\n                    .closest('protvista-interpro-track')\n                    .getBoundingClientRect();\n    \n                // x\n                const translateX = Math.min(\n                Math.max(\n                    // center the popup in the middle of the region\n                    bcrTarget.left + bcrTarget.width / 2 - bcrPopup.width / 2,\n                    // make sure the popup doesn't overflow to the left\n                    bcrTrack.left,\n                ),\n                // make sure the popup doesn't overflow to the right\n                bcrTrack.right - bcrPopup.width,\n                );\n                // y\n                const translateY = window.scrollY + bcrTarget.top - bcrPopup.height;\n    \n                popup.style.visibility = 'visible';\n                popup.style.transform = `translate(${translateX}px, ${translateY}px)`;\n    \n                displayed = true;\n                break;\n            case 'mouseout':\n                if (!displayed) return; // no need to do DOM operation, it's already invisible\n                timeout = setTimeout(clearPopup, 1000);\n    \n                displayed = false;\n                break;\n            default:\n            // ignore\n            }\n        };\n        document.body.appendChild(popup);\n        window.addEventListener('change', handler);\n        // clean-up logic\n        return () => {\n            window.removeEventListener('change', handler);\n            popup.removeEventListener('mouseenter', popupEnterHandle);\n            popup.removeEventListener('mouseleave', popupLeaveHandle);\n            document.body.removeChild(popup);\n        };\n    }, []);\n  \n    // Render the functional analysis with a brief introduction\n    // Here chainReferences contains the \"analysis\" data\n    if (chainReferences && chainReferences.length > 0) {\n        return (\n        <>\n            {/* Brief introduction */}\n            <Typography variant=\"h5\">Protein functional analysis</Typography>\n            <br />\n            <Typography variant=\"subtitle2\">\n            <strong>{chainReferences.length}</strong> chains were analysed.\n            </Typography>\n            <ul className={style['chain-analysis-list']}>\n            {/* Here, main data is displayed */}\n            {chainReferences.map(chainReference => {\n                const chainLetter = chainReference.name;\n                // Get some data using the topology manager when it is available\n                let name = '';\n                let firstResidueNumber = 1;\n                if (topologyManager) {\n                    const chain = topologyManager.getChainByName(chainLetter);\n                    name = chain.metadataChainName;\n                    firstResidueNumber = chain.residueNumbers[0];\n                }\n                return (\n                <li key={chainLetter}>\n                    <Typography variant=\"h6\">\n                    <FontAwesomeIcon icon={faAngleRight} />\n                    {` Chain ${chainLetter} ${name ? '(' + name + ')' : ''}`}\n                    </Typography>\n                    {/* the main visual asset */}\n                    <ChainAnalysis\n                        data={chainReference}\n                        firstResidueNumber={firstResidueNumber}\n                    />\n                </li>\n                );\n            })}\n            </ul>\n            <Typography variant=\"body2\">\n            Data generated using{' '}\n            <a\n                href=\"https://www.ebi.ac.uk/\"\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n            >\n                EBI\n            </a>\n            's{' '}\n            <a\n                href=\"https://www.ebi.ac.uk/interpro/about/interproscan/\"\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n            >\n                InterProScan service\n            </a>{' '}\n            and visualised using the{' '}\n            <a\n                href=\"https://ebi-webcomponents.github.io/nightingale/\"\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n            >\n                Nightingale visualisation library\n            </a>\n            .\n            </Typography>\n        </>\n        );\n    } else return 'No chain analyses available';\n});\n\nexport default ChainsAnalysis;","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"style_card__Ocl+v\",\"chips\":\"style_chips__40Fvj\",\"title\":\"style_title__tHkJW\"};","import React, {\n  useContext,\n  useState,\n  useMemo,\n  useEffect,\n  Suspense,\n} from 'react';\n\nimport Card from '../animated-card';\nimport { CardContent, Chip } from '@mui/material';\n\nimport { ProjectCtx } from '../../contexts';\n\nimport useDefaultRepresentations from '../ngl-viewer/use-default-representations';\nimport useMutationsRepresentations from '../ngl-viewer/use-mutations-representations';\nimport useEpitopesRepresentations from '../ngl-viewer/use-epitopes-representations';\n\nimport style from './style.module.css';\n\nimport Loading from '../loading';\n\nimport { rangedSelectionParser } from '../../utils/topology-manager';\n\n// Show floatting bubles with domain names\n// When a bubble is selected the domain is represented\nconst Domains = ({ setRepresentations, setInitialFocus }) => {\n  // Get the current project data\n  const {\n    metadata,\n    proteinReferences,\n    ligandReferences,\n    topology,\n    interactions\n  } = useContext(ProjectCtx);\n\n  // Set the first domain (the overall) as the default selected domain\n  const [selectedDomain, setSelectedDomain] = useState(0);\n  const [overlapedDomain, setOverlapedDomain] = useState(null);\n\n  // Get pre-build representations\n  const defaultRepresentations = useDefaultRepresentations();\n  const mutationsRepresentation = useMutationsRepresentations();\n  const epitopesRepresentation = useEpitopesRepresentations();\n\n  // The domains strucutre is:\n  // domains: [\n  //    {\n  //      \"name\" : \"Example domain name\",\n  //      \"description\": \"Example domain description\"\n  //      \"representations\" : [\n  //        {\n  //          \"name\" : \"Region 1\",\n  //          \"selection\" : \"16-316\",\n  //          \"type\": \"ball+stick\",\n  //          \"color\": \"element\",\n  //          \"opacity\": 0.5,\n  //          ...\n  //        },\n  //        {\n  //          \"name\" : \"Region 2\",\n  //          \"selection\" : \"418-439\"\n  //        }\n  //      ]\n  //    },\n  // ]\n  const domains = useMemo(() => {\n    if (!topology) return;\n    // Set the overall domain\n    const overallDomain = {\n      name: 'Overall',\n      representations: defaultRepresentations,\n    };\n    // Get custom domains in metadata\n    const customDomains = metadata.CUSTOMS || [];\n    // Get domains constructed from interactions\n    const interactionDomains = [];\n    if (interactions) {\n      interactions.forEach(interaction => {\n        if (interaction.failed) return;\n        // Add a new domain for each new agent and skip repeated agents\n        const agent1 = { name: interaction.agent_1, residues: interaction.residue_indices_1 };\n        const agent2 = { name: interaction.agent_2, residues: interaction.residue_indices_2 };\n        [agent1, agent2].forEach(agent => {\n          const current = interactionDomains.find(domain => domain.name === agent.name);\n          if (current) return;\n          const { rangedSelection: nglSelection } = topology.residueIndices2Ngl(agent.residues);\n          interactionDomains.push({\n            name: agent.name,\n            representations: [\n              {\n                name: agent.name,\n                selection: nglSelection,\n                type: 'licorice',\n              },\n            ],\n          });\n        });\n      });\n    }\n    // Get domains from protein references\n    // Skip those whose name matches with an interacting agent or custom domain\n    const referenceDomains = [];\n    proteinReferences && proteinReferences.forEach(proteinReference => {\n      const referenceId = proteinReference.uniprot;\n      // Collect all domains in protein reference data\n      let referenceDataDomains = [];\n      // Domains in the 'domains' filed are automatically mined from uniprot\n      if (proteinReference.domains) referenceDataDomains = referenceDataDomains.concat(proteinReference.domains);\n      // Domains in the 'custom_domains' filed are added by hand in the database and they are not common\n      if (proteinReference.custom_domains) referenceDataDomains = referenceDataDomains.concat(proteinReference.custom_domains);\n      // If there are not domains at all then stop here\n      if (referenceDataDomains.length === 0) return;\n      // ----------------------------------------------------------------------------------------\n      // These domains are only specified for the protein reference sequence\n      // Residue selections must be mapped back to the current topology for each domain\n      // Custom reference domains may contain a 'representations' field instead of a 'selection' field\n      referenceDataDomains.forEach(domain => {\n        const domainName = domain.name;\n        // Discard the domain if its name matches an already existing domain\n        if (customDomains.find(domain => domain.name === domainName)) return;\n        if (interactionDomains.find(domain => domain.name === domainName))\n          return;\n        // Discard the domain if its name matches the reference name\n        // This is quite usual: some references have domains which are basically the whole thing\n        // There may be a difference in the pole residues, but it is redundant anyway\n        if (proteinReference.name === domainName) return;\n        const mappedDomain = {\n          name: proteinReference.name + ' - ' + domainName,\n          description: domain.description, // It may not have description\n          representations: [],\n        };\n        // Set a function to modify a representation by parsing its selections to NGL\n        const parseRepresentationSelection = representation => {\n          const selection = representation.selection;\n          const parsedSelection = rangedSelectionParser(selection);\n          // WARNING: A single protein reference residue may correspond to multiple topology residues\n          const mappedSelection = topology.getReferenceResidueIndices(referenceId, parsedSelection);\n          // Representations with a selection not present in topology are discarded\n          if (!mappedSelection || mappedSelection.length === 0) return;\n          // Transform the residue indices to a NGL selection\n          const { rangedSelection: nglSelection, small } = topology.residueIndices2Ngl(mappedSelection);\n          const newRepresentation = { ...representation };\n          newRepresentation.selection = nglSelection;\n          // parsedSelectionRanger returns 'small' = true when there are series of 3 residues or less\n          // These small residue selections will be not represented in cartoon due to an NGL bug\n          // https://github.com/nglviewer/ngl/issues/223\n          if (small) newRepresentation.type = 'licorice';\n          mappedDomain.representations.push(newRepresentation);\n        };\n        if (domain.selection) {\n          const domainRepresentation = { name: domainName, selection: domain.selection };\n          parseRepresentationSelection(domainRepresentation);\n        }\n        if (domain.representations) {\n          domain.representations.forEach(parseRepresentationSelection);\n        }\n        // Domains whose representatios have been all discarded are also discarded\n        if (mappedDomain.representations.length > 0)\n          referenceDomains.push(mappedDomain);\n      });\n    });\n    // Create a new domains for every ligand reference\n    // Skip those whose name matches with an interacting agent or custom domain\n    ligandReferences && ligandReferences.forEach(ligandReference => {\n      // Set the ligand name as the domain name\n      const domainName = ligandReference.name;\n      // Discard the domain if its name matches an already existing domain\n      if (customDomains.find(domain => domain.name === domainName)) return;\n      if (interactionDomains.find(domain => domain.name === domainName))\n        return;\n      // Get the NGL selection for ligand residues\n      const residueIndices = topology.getReferenceResidueIndices(ligandReference.pubchem);\n      if (!residueIndices) throw new Error(`Ligand reference \"${ligandReference.pubchem}\" not found in topology`);\n      const { rangedSelection: nglSelection } = topology.residueIndices2Ngl(residueIndices);\n      // Set the ligand domain\n      const ligandDomain = {\n        name: domainName,\n        // description: \n        representations: [\n          {\n            name: domainName,\n            selection: nglSelection,\n            type: 'ball+stick',\n            color: 'element'\n          }\n        ],\n      };\n      // Add it to the reference domains list\n      referenceDomains.push(ligandDomain);\n    });\n    // Put all domains together\n    const domains = [\n      overallDomain,\n      ...customDomains,\n      ...referenceDomains,\n      ...interactionDomains,\n    ];\n    // Add the mutations domain if possible\n    if (mutationsRepresentation) {\n      const mutationsDomain = {\n        name: 'Mutations',\n        description:\n          'Show the entropies of each residue according to the bibliography',\n        representations: mutationsRepresentation,\n      };\n      domains.push(mutationsDomain);\n    }\n    if (epitopesRepresentation) {\n      const epitopesDomain = {\n        name: 'Epitopes',\n        description:\n          'Show regions considered as epitopes according to the bibliography',\n        representations: epitopesRepresentation,\n      };\n      domains.push(epitopesDomain);\n    }\n    // Reset the selected domain\n    setSelectedDomain(0);\n    return domains;\n  }, [\n    metadata,\n    defaultRepresentations,\n    mutationsRepresentation,\n    epitopesRepresentation,\n    topology,\n    proteinReferences,\n    interactions,\n  ]);\n\n  // Add the selected domain (if any) configuration to the viewer\n  useEffect(() => {\n    if (!domains) return;\n    const currentSelectedDomain = domains[selectedDomain];\n    const currentSelectedRepresentations = currentSelectedDomain.representations.map(\n      rep => {\n        return { ...rep };\n      },\n    );\n    const currentOverlapedDomain =\n      overlapedDomain !== null && domains[overlapedDomain];\n    const currentOverlapedRepresentations = currentOverlapedDomain\n      ? currentOverlapedDomain.representations.map(rep => {\n          return {\n            ...rep,\n            type: 'spacefill',\n            opacity: rep.opacity ? rep.opacity * 0.2 : 0.2,\n          };\n        })\n      : [];\n    // Set an NGL representation for each domain representation\n    const representations = [\n      ...currentSelectedRepresentations,\n      ...currentOverlapedRepresentations,\n    ];\n    // Add a representation with the whole strucutre in grey color and with the opacity reduced\n    if (currentSelectedDomain.name !== 'Overall')\n      representations.push({\n        name: 'Reference',\n        color: 'grey',\n        opacity: 0.1,\n      });\n\n    // Set the NGL selection for the focus\n    const focusSelection = `(${\n      currentSelectedDomain.representations\n        .map(rep => rep.selection)\n        .join(') or (')\n    })`;\n    const initialFocus = { sele: focusSelection };\n    setRepresentations(representations);\n    setInitialFocus(initialFocus);\n  }, [domains, selectedDomain, overlapedDomain, setRepresentations, setInitialFocus]);\n\n  // If project data is still loading then stop here\n  if (!domains) return <Loading />;\n\n  return (\n    <Suspense fallback={<Loading />}>\n      {domains && domains.length > 0 && (\n        <Card className={style.card}>\n          <CardContent>\n            <a className={style.title}>Domains</a>\n            {domains.map((dom, d) => (\n              <Chip\n                key={dom.name}\n                title={dom.description}\n                className={style.chips}\n                label={dom.name}\n                variant={\n                  selectedDomain === d || overlapedDomain === d\n                    ? undefined\n                    : 'outlined'\n                }\n                color={\n                  selectedDomain === d\n                    ? 'primary'\n                    : overlapedDomain === d\n                    ? 'secondary'\n                    : undefined\n                }\n                onClick={event => {\n                  // When the keys control, shift or command (ios) are hold while clicking\n                  const overlap =\n                    event.shiftKey || event.ctrlKey || event.metaKey;\n                  if (overlap)\n                    return setOverlapedDomain(previous => {\n                      if (previous === d) return null;\n                      if (selectedDomain === d) return null;\n                      return d;\n                    });\n                  else\n                    return setSelectedDomain(previous => {\n                      if (previous === d) return 0;\n                      if (overlapedDomain === d) setOverlapedDomain(null);\n                      return d;\n                    });\n                }}\n              />\n            ))}\n          </CardContent>\n        </Card>\n      )}\n    </Suspense>\n  );\n};\n\nexport default Domains;\n","import React, { useState } from 'react';\n// A hook to track whenever some element is on screen\nimport { useInView } from 'react-intersection-observer';\n\n// Visual components\nimport Card from '../../../components/animated-card';\nimport { CardContent } from '@mui/material';\n\n// Viewer available domains\nimport Domains from '../../../components/domains';\n// The molecular viewer\nimport ViewerWithControls from '../../../components/viewer-with-controls';\n// Component for the metadata table\nimport TrajectoryMetadata from './metadata';\n// Component for the chains analysis\nimport ChainsAnalysis from './chains';\n\n// CSS style\nimport style from './style.module.css';\n\n// Define permanent options for the \"useInView\"\nconst useInViewOptions = { triggerOnce: true, rootMargin: '100px' };\n\nconst Trajectory = () => {\n  // useInView acts as a React hook\n  // Track if the NGL viewer (nglRef) and the analyses (nightingaleRef) are on screen\n  // The status (e.g. isNglVisible) is returned true/false when the element is in/out the screen respectively\n  const [nglRef, isNglVisible] = useInView(useInViewOptions);\n  const [nightingaleRef, isNightingaleVisible] = useInView(useInViewOptions);\n\n  // Set the representations to be displayed in the viewer\n  const [ representations, setRepresentations ] = useState(null);\n\n  // Set the viewer initial focus\n  const [ initialFocus, setInitialFocus ] = useState(null);\n\n  return (\n    <>\n      <Domains setRepresentations={setRepresentations} setInitialFocus={setInitialFocus} />\n      <Card className={style['ngl-card']} ref={nglRef}>\n        {/* Render the NGL viewer when it is on screen*/}\n        {isNglVisible ? (\n          <ViewerWithControls\n            className={style.container}\n            representationsState={[ representations, setRepresentations ]}\n            initialFocus={initialFocus}\n          />\n        ) : (\n          <div style={{ height: '50vh' }} />\n        )}\n      </Card>\n      <Card className={style.card}>\n        <CardContent>\n          <details>\n            <summary className={style['trajectory-metadata-title']}>\n              Trajectory metadata\n            </summary>\n            <br />\n            <span>\n              {/* Renders the metadata table */}\n              <TrajectoryMetadata />\n            </span>\n          </details>\n        </CardContent>\n      </Card>\n      <Card className={style.card} ref={nightingaleRef}>\n        {isNightingaleVisible ? (\n          <CardContent>\n            {/* Render chain analyses */}\n            <ChainsAnalysis />\n          </CardContent>\n        ) : (\n          <div style={{ height: '50vh' }} />\n        )}\n      </Card>\n    </>\n  );\n};\n\nexport default Trajectory;\n","\nimport React, { useContext } from 'react';\n\n// Project metadata saved in this context by the accession component\nimport { ProjectCtx } from '../../../../contexts';\n\n// Visual components\nimport {\n    TextField,\n    InputAdornment,\n} from '@mui/material';\n\n// Import a function to round to cents\nimport { round2cents } from 'src/utils/auxiliar-functions';\n\n// CSS style\nimport style from './style.module.css';\n\n// Label to be shown when a metadata field is not available\nconst NA = 'Not available';\n\n// This component displays the trajectory metadata\nconst TrajectoryMetadata = () => {\n    // Load metadata from the project context\n    const { metadata } = useContext(ProjectCtx);\n    // When there is no metadata\n    if (!metadata) return 'No available metadata';\n    // Calculate frequency and multiply it by 1000 since it will be represented in picoseconds\n    const frequency = (metadata.FRAMESTEP && metadata.FRAMESTEP * 1000) || null;\n    // Render the whole metadata\n    return (<>\n        <fieldset>\n            <legend>Counts</legend>\n            <TextField\n                className={style['text-field']}\n                label=\"System atoms\"\n                title=\"Total number of atoms in the system\"\n                value={metadata.SYSTATS === null ? NA : metadata.SYSTATS}\n                disabled={metadata.SYSTATS === null}\n            />\n            <TextField\n                className={style['text-field']}\n                label=\"Proteins atoms\"\n                title=\"Number of protein atoms in the system\"\n                value={metadata.PROTATS === null ? NA : metadata.PROTATS}\n                disabled={metadata.PROTATS === null}\n            />\n            <TextField\n                className={style['text-field']}\n                label=\"Proteins residues\"\n                title=\"Number of protein residues in the system\"\n                value={metadata.PROT === null ? NA : metadata.PROT}\n                disabled={metadata.PROT === null}\n            />\n            <TextField\n                className={style['text-field']}\n                label=\"Solvent molecules\"\n                title=\"Number of solvent molecules in the system\"\n                value={metadata.SOL === null ? NA : metadata.SOL}\n                disabled={metadata.SOL === null}\n            />\n            <TextField\n                className={style['text-field']}\n                label=\"Positive ions\"\n                title=\"Number of positively charged ions in the system\"\n                value={metadata.NA === null ? NA : metadata.NA}\n                disabled={metadata.NA === null}\n            />\n            <TextField\n                className={style['text-field']}\n                label=\"Negative ions\"\n                title=\"Number of negatively charged ions in the system\"\n                value={metadata.CL === null ? NA : metadata.CL}\n                disabled={metadata.CL === null}\n            />\n        </fieldset>\n        <fieldset>\n            <legend>System box</legend>\n            <TextField\n                className={style['text-field']}\n                label=\"Type\"\n                title=\"Box type\"\n                value={metadata.BOXTYPE === null ? NA : metadata.BOXTYPE}\n                disabled={metadata.BOXTYPE === null}\n            />\n            <TextField\n                className={style['text-field']}\n                label=\"Size X\"\n                title=\"Simulated system box X dimension\"\n                value={\n                    metadata.BOXSIZEX === null\n                    ? NA\n                    : round2cents(metadata.BOXSIZEX)\n                }\n                disabled={metadata.BOXSIZEX === null}\n                InputProps={{\n                    endAdornment: (\n                    <InputAdornment variant=\"filled\" position=\"end\">\n                        nm\n                    </InputAdornment>\n                    ),\n                }}\n            />\n            <TextField\n                className={style['text-field']}\n                label=\"Size Y\"\n                title=\"Simulated system box Y dimension\"\n                value={\n                    metadata.BOXSIZEY === null\n                    ? NA\n                    : round2cents(metadata.BOXSIZEY)\n                }\n                disabled={metadata.BOXSIZEY === null}\n                InputProps={{\n                    endAdornment: (\n                    <InputAdornment variant=\"filled\" position=\"end\">\n                        nm\n                    </InputAdornment>\n                    ),\n                }}\n            />\n            <TextField\n                className={style['text-field']}\n                label=\"Size Z\"\n                title=\"Simulated system box Z dimension\"\n                value={\n                    metadata.BOXSIZEZ === null\n                    ? NA\n                    : round2cents(metadata.BOXSIZEZ)\n                }\n                disabled={metadata.BOXSIZEZ === null}\n                InputProps={{\n                    endAdornment: (\n                    <InputAdornment variant=\"filled\" position=\"end\">\n                        nm\n                    </InputAdornment>\n                    ),\n                }}\n            />\n            <TextField\n                className={style['text-field']}\n                label=\"Volume\"\n                title=\"Simulated system box volume\"\n                value={\n                    metadata.BOXSIZEX === null ||\n                    metadata.BOXSIZEY === null ||\n                    metadata.BOXSIZEZ === null\n                    ? NA\n                    : round2cents(\n                        metadata.BOXSIZEX * metadata.BOXSIZEY * metadata.BOXSIZEZ,\n                        )\n                }\n                disabled={\n                    !(metadata.BOXSIZEX && metadata.BOXSIZEY && metadata.BOXSIZEZ)\n                }\n                InputProps={{\n                    endAdornment: (\n                    <InputAdornment variant=\"filled\" position=\"end\">\n                        nm³\n                    </InputAdornment>\n                    ),\n                }}\n            />\n        </fieldset>\n        <fieldset>\n            <legend>Simulation</legend>\n            <TextField\n                className={style['text-field']}\n                label=\"Length\"\n                title=\"Simulation length\"\n                value={metadata.timeLength === null ? NA : round2cents(metadata.timeLength)}\n                disabled={metadata.timeLength === null}\n                InputProps={{\n                    endAdornment: (\n                    <InputAdornment variant=\"filled\" position=\"end\">\n                        ns\n                    </InputAdornment>\n                    ),\n                }}\n            />\n            <TextField\n                className={style['text-field']}\n                label=\"Timestep\"\n                title=\"Simulation timestep\"\n                value={metadata.TIMESTEP === null ? NA : metadata.TIMESTEP}\n                disabled={metadata.TIMESTEP === null}\n                InputProps={{\n                    endAdornment: (\n                    <InputAdornment variant=\"filled\" position=\"end\">\n                        fs\n                    </InputAdornment>\n                    ),\n                }}\n            />\n            <TextField\n                className={style['text-field']}\n                label=\"Snapshots\"\n                title=\"Number of snapshots\"\n                value={metadata.mdFrames === null ? NA : metadata.mdFrames}\n                disabled={metadata.mdFrames === null}\n            />\n            <TextField\n                className={style['text-field']}\n                label=\"Frequency\"\n                title=\"Frequency of snapshots\"\n                value={\n                    frequency === null\n                    ? NA\n                    : frequency\n                }\n                disabled={frequency === null}\n                InputProps={{\n                    endAdornment: (\n                    <InputAdornment variant=\"filled\" position=\"end\">\n                        ps\n                    </InputAdornment>\n                    ),\n                }}\n            />\n            <TextField\n                className={style['text-field']}\n                label=\"Force fields\"\n                title=\"Force fields\"\n                value={metadata.FF === null ? NA : metadata.FF.join(', ')}\n                disabled={metadata.FF === null}\n            />\n            <TextField\n                className={style['text-field']}\n                label=\"Temperature\"\n                title=\"Temperature\"\n                value={metadata.TEMP === null ? NA : metadata.TEMP}\n                disabled={metadata.TEMP === null}\n                InputProps={{\n                    endAdornment: (\n                    <InputAdornment variant=\"filled\" position=\"end\">\n                        K\n                    </InputAdornment>\n                    ),\n                }}\n            />\n            <TextField\n                className={style['text-field']}\n                label=\"Water type\"\n                title=\"Water type\"\n                value={metadata.WAT === null ? NA : metadata.WAT}\n                disabled={metadata.WAT === null}\n            />\n            <TextField\n                className={style['text-field']}\n                label=\"Ensemble\"\n                title=\"Simulation ensemble\"\n                value={metadata.ENSEMBLE === null ? NA : metadata.ENSEMBLE}\n                disabled={metadata.ENSEMBLE === null}\n            />\n            {/*\n            <TextField\n                className={style['text-field']}\n                label=\"Pressure coupling\"\n                title=\"Pressure coupling method\"\n                value={metadata.PCOUPLING === null ? NA : metadata.PCOUPLING}\n                disabled={metadata.PCOUPLING === null}\n            />\n            <TextField\n                className={style['text-field']}\n                label=\"Membrane\"\n                title=\"Membrane type\"\n                value={metadata.MEMBRANE === null ? NA : metadata.MEMBRANE}\n                disabled={metadata.MEMBRANE === null}\n            />*/}\n        </fieldset>\n    </>);\n};\n\nexport default TrajectoryMetadata;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getInputAdornmentUtilityClass(slot) {\n  return generateUtilityClass('MuiInputAdornment', slot);\n}\nconst inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'standard', 'outlined', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\nexport default inputAdornmentClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _span;\nconst _excluded = [\"children\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from '../utils/capitalize';\nimport Typography from '../Typography';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from './inputAdornmentClasses';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\nconst InputAdornmentRoot = styled('div', {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  height: '0.01em',\n  // Fix IE11 flexbox alignment. To remove at some point.\n  maxHeight: '2em',\n  alignItems: 'center',\n  whiteSpace: 'nowrap',\n  color: (theme.vars || theme).palette.action.active\n}, ownerState.variant === 'filled' && {\n  // Styles applied to the root element if `variant=\"filled\"`.\n  [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n    marginTop: 16\n  }\n}, ownerState.position === 'start' && {\n  // Styles applied to the root element if `position=\"start\"`.\n  marginRight: 8\n}, ownerState.position === 'end' && {\n  // Styles applied to the root element if `position=\"end\"`.\n  marginLeft: 8\n}, ownerState.disablePointerEvents === true && {\n  // Styles applied to the root element if `disablePointerEvents={true}`.\n  pointerEvents: 'none'\n}));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n  const {\n      children,\n      className,\n      component = 'div',\n      disablePointerEvents = false,\n      disableTypography = false,\n      position,\n      variant: variantProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n  const ownerState = _extends({}, props, {\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"text.secondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ? ( /* notranslate needed while Google Translate will not fix zero-width space issue */_span || (_span = /*#__PURE__*/_jsx(\"span\", {\n          className: \"notranslate\",\n          children: \"\\u200B\"\n        }))) : null, children]\n      })\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;","// extracted by mini-css-extract-plugin\nexport default {\"entries\":\"style_entries__T4f7r\",\"has-signatures\":\"style_has-signatures__4CW-U\",\"label\":\"style_label__UT0BE\"};","// extracted by mini-css-extract-plugin\nexport default {\"popup\":\"style_popup__-6ZHj\",\"portal-container\":\"style_portal-container__B70Nq\",\"chain-analysis-list\":\"style_chain-analysis-list__TzUHq\",\"trajectory-metadata-title\":\"style_trajectory-metadata-title__7GlAT\"};","// extracted by mini-css-extract-plugin\nexport default {\"text-field\":\"style_text-field__34cWZ\"};","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"style_card__T1Y+D\",\"ngl-card\":\"style_ngl-card__596lW\",\"container\":\"style_container__VwOAd\",\"trajectory-metadata-title\":\"style_trajectory-metadata-title__MQcG8\"};"],"names":["KEYFRAMES","opacity","reducedMotion","transform","ANIMATION_OPTIONS","fill","easing","duration","forwardRef","_ref","ref","overrideComponent","props","_objectWithoutProperties","_excluded","containerRef","useRef","useLayoutEffect","node","current","firstElementChild","animate","index","Array","from","document","querySelectorAll","findIndex","section","animation","_objectSpread","delay","cancel","Component","Card","_jsx","className","style","children","component","useEpitopesRepresentations","topology","useContext","ProjectCtx","useMemo","proteinReferences","some","reference","epitopes","mappedResiduesPerReference","map","referenceId","uniprot","referenceEpitopes","epitopeResidues","Object","values","epitope","residues","allResidues","concat","apply","uniqueResidues","Set","mappedResidues","getReferenceResidueIndices","allMappedResidues","rangedSelection","small","residueIndices2Ngl","name","selection","type","color","greyColorPlan","useMutationsRepresentations","topologyManager","entropies","entropiesPerReference","logarithmicEntropies","entropy","Math","log","allEntropies","max","min","colorScale","scaleLinear","range","domain","customScheme","ColormakerRegistry","addScheme","params","this","atomColor","atom","residueIndex","residue","getResidueByIndex","parseInt","referenceData","length","referenceNumber","hexColor","d3color","formatHex","substring","importer","as","namespace","_namespace","customElement","default","is","Error","alreadyExisting","window","customElements","get","define","protvistaLoadedResolve","protvistaLoaded","Promise","resolve","InterproTrack","memo","match","shape","classAttr","protvistaRef","useEffect","async","data","contributors","signatures","fillComponentWithData","class","_ref2","firstResidueNumber","chain","loadCustomElement","all","importProtVista","sequence","sequenceLength","interproscanData","interproscan","matches","results","processedMatches","processIPScanResults","displayEnd","shiftedSequence","repeat","_jsxs","attributes","rulerstart","displaystart","displayend","entries","height","scale","label","accession","undefined","string","hash","i","charCodeAt","hashFromString","hue","abs","saturation","lightness","startAccessorDefault","interval","value","Number","isFinite","endAccessorDefault","intervals","startAccessor","arguments","endAccessor","sortedIntervals","sort","a","b","output","push","processLocations","locations","location","fragments","shift","forEach","fragment","start","end","shiftLocations","processed","signature","entry","existing","find","m","db","colorFromString","mergeIntervals","signatureLibraryRelease","library","replace","dbMap","Map","chainReferences","popup","createElement","portal","portalContainer","appendChild","addEventListener","bcr","getBoundingClientRect","left","top","onfinish","href","src","link","rel","target","timeout","displayed","clearPopup","textContent","display","removeAttribute","visibility","popupEnterHandle","clearTimeout","popupLeaveHandle","setTimeout","handler","event","detail","bcrTarget","bcrPopup","bcrTrack","eventtype","feature","IP_DB","closest","translateX","width","right","translateY","scrollY","body","removeEventListener","removeChild","_Fragment","Typography","variant","chainReference","chainLetter","getChainByName","metadataChainName","residueNumbers","FontAwesomeIcon","icon","faAngleRight","ChainAnalysis","setRepresentations","setInitialFocus","metadata","ligandReferences","interactions","selectedDomain","setSelectedDomain","useState","overlapedDomain","setOverlapedDomain","defaultRepresentations","useDefaultRepresentations","mutationsRepresentation","epitopesRepresentation","domains","overallDomain","representations","customDomains","CUSTOMS","interactionDomains","interaction","failed","agent_1","residue_indices_1","agent_2","residue_indices_2","agent","nglSelection","referenceDomains","proteinReference","referenceDataDomains","custom_domains","domainName","mappedDomain","description","parseRepresentationSelection","representation","parsedSelection","rangedSelectionParser","mappedSelection","newRepresentation","ligandReference","residueIndices","pubchem","ligandDomain","mutationsDomain","epitopesDomain","currentSelectedDomain","currentSelectedRepresentations","rep","currentOverlapedDomain","initialFocus","sele","join","Suspense","fallback","Loading","CardContent","dom","d","Chip","title","onClick","shiftKey","ctrlKey","metaKey","previous","useInViewOptions","triggerOnce","rootMargin","Trajectory","nglRef","isNglVisible","useInView","nightingaleRef","isNightingaleVisible","Domains","ViewerWithControls","container","representationsState","card","TrajectoryMetadata","ChainsAnalysis","NA","frequency","FRAMESTEP","TextField","SYSTATS","disabled","PROTATS","PROT","SOL","CL","BOXTYPE","BOXSIZEX","round2cents","InputProps","endAdornment","InputAdornment","position","BOXSIZEY","BOXSIZEZ","timeLength","TIMESTEP","mdFrames","FF","TEMP","WAT","ENSEMBLE","getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","CardRoot","styled","Paper","overridesResolver","styles","root","overflow","React","inProps","useDefaultProps","raised","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","clsx","elevation","getInputAdornmentUtilityClass","_span","InputAdornmentRoot","capitalize","disablePointerEvents","theme","maxHeight","alignItems","whiteSpace","vars","palette","action","active","inputAdornmentClasses","positionStart","hiddenLabel","marginTop","marginRight","marginLeft","pointerEvents","disableTypography","variantProp","muiFormControl","useFormControl","size","slots","FormControlContext","Provider"],"sourceRoot":""}