"use strict";(self.webpackChunkmdposit=self.webpackChunkmdposit||[]).push([[7689,8870],{54519:(e,s,n)=>{n.r(s),n.d(s,{default:()=>y});var t=n(65043),i=n(26494),a=n(85865),r=n(8939),d=n(24056),l=n(58338),o=n(10939),c=n(17545),u=n(34088),f=n(29449),h=n(95747),m=n(507),x=n(24310),_=n(58870),g=n(70579);const p={r:0,g:0,b:255},b={r:255,g:0,b:0},y=()=>{const{accessionAndMdNumber:e,topology:s,interactions:n}=(0,t.useContext)(f.f),[y,A]=(0,t.useState)(0),[R,v]=(0,t.useState)("interface_indices"),[C,j]=(0,t.useState)(null),[D,S]=(0,t.useState)("mean"),I="".concat(h.nP,"/").concat(e,"/analyses/dist-perres/"),{loading:T,payload:k,error:w}=(0,l.A)(I),{heatmapData:N,residuesX:O,residuesY:V,xTitle:L,yTitle:z,isReduced:B}=(0,t.useMemo)((()=>{if(T||w||!k||!s||!n)return{};const e=n[y],t=k.data.find((s=>s.name===e.name)),i="mean"===D?t.means:t.stdvs;let a;const r=i[0].length,d=i.length;if(d===e.residue_indices_2.length&&r===e.residue_indices_1.length)a=!1;else{if(d!==e.interface_indices_2.length||r!==e.interface_indices_1.length)throw new Error("The numbers of values in data does not match any number of residues in the interaction (neither all or interface)");a=!0}const l=e[R+"_1"],o=e[R+"_2"];let c=[];if(a)if("interface_indices"===R)c=i;else{const s=e.interface_indices_1,n=e.interface_indices_2;for(const e of o){const t=n.indexOf(e);let a;if(-1!==t){a=[];for(const e of l){const n=s.indexOf(e);-1!==n?a.push(i[t][n]):a.push(10)}c.push(a)}else{const e=l.length;a=new Array(e).fill(10),c.push(a)}}}else if("residue_indices"===R)c=i;else{const s=e.residue_indices_1,n=e.residue_indices_2;for(const e of o){const t=n.indexOf(e),a=[];for(const e of l){const n=s.indexOf(e);a.push(i[t][n])}c.push(a)}}const[u,f]=[l,o].map((e=>e.map((e=>s.getResidueByIndex(e).standardLabel))));return{heatmapData:{data:c,xLabels:u,yLabels:f},residuesX:l,residuesY:o,xTitle:e.agent_1,yTitle:e.agent_2,isReduced:a}}),[T,w,k,s,n,y,R,D]),M=(0,t.useCallback)((e=>{const n=s.getResidueByIndex(e);return{forResidue:e,forDistance:n.hasCAlpha?n.number.toString()+":"+n.chainName+".CA":null}}),[s]),E=(0,t.useCallback)((e=>{let{value:s,xAxisValue:n,yAxisValue:t}=e;return n+" - "+t+"\n"+Math.round(100*s)/100+" \xc5"}),[]),H=(0,t.useCallback)((e=>{let{xIndex:s,yIndex:n}=e;const t=M(O[s]),i=M(V[n]);j({residues:[t.forResidue,i.forResidue],distance:t.forDistance&&i.forDistance&&[[t.forDistance,i.forDistance]]})}),[O,V,M]);if(T)return(0,g.jsx)(c.A,{});if(w)return w.toString();if(!k)return"Something bad happened";if(!s||!n)return(0,g.jsx)(c.A,{});return(0,g.jsxs)(g.Fragment,{children:[(0,g.jsx)(o.A,{children:(0,g.jsxs)(i.A,{className:_.default.horizontal,children:[(0,g.jsx)(a.A,{variant:"h6",children:"Residues selection:"}),(0,g.jsx)(m.A,{interactions:n,selectedInteraction:y,setSelectedInteraction:A,selectedResidues:R,setSelectedResidues:v,interfaceOnly:B})]})}),(0,g.jsx)(o.A,{className:_.default.margined,id:"heatmap",children:(0,g.jsxs)(i.A,{children:[(0,g.jsxs)(r.A,{value:D,variant:"fullWidth",indicatorColor:"primary",textColor:"primary",onChange:(e,s)=>{S(s)},className:_.default["margined-bottom"],children:[(0,g.jsx)(d.A,{value:"mean",label:"Residues distance averages"}),(0,g.jsx)(d.A,{value:"stdv",label:"Residues distance standard deviations"})]}),(0,g.jsx)(x.A,{inputData:N,onTooltip:E,onClick:H,legendTitle:"mean"===D?"Distance average (\xc5)":"Distance standard deviation (\xc5)",maxValueColor:p,minValueColor:b,totalHeight:1===N.yLabels.length?30:void 0,xTitle:L,yTitle:z})]})}),(0,g.jsx)(u.A,{newViewer:C?{selectedResidueIndices:C.residues,selectedDistances:C.distance}:null,onNail:e=>j((s=>s&&s.residues===e.selectedResidueIndices?null:s)),onClose:e=>j((s=>s&&s.residues===e.selectedResidueIndices?null:s))})]})}},58870:(e,s,n)=>{n.r(s),n.d(s,{default:()=>t});const t={margined:"style_margined__JbZJ6","margined-bottom":"style_margined-bottom__WRBwE",horizontal:"style_horizontal__NH+ZS"}}}]);
//# sourceMappingURL=7689.16a9bae4.chunk.js.map