{"version":3,"file":"static/js/8400.7c6069ef.chunk.js","mappings":"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","sources":["webpack://mdposit/./src/components/animated-card/style.module.css?d4d9","components/animated-card/index.js","webpack://mdposit/./src/components/ligand-selector/style.module.css?2aaf","components/ligand-selector/index.js","pages/accession/ligand-descriptors/index.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","../node_modules/@mui/material/InputAdornment/inputAdornmentClasses.js","../node_modules/@mui/material/InputAdornment/InputAdornment.js","../node_modules/@mui/material/TableFooter/tableFooterClasses.js","../node_modules/@mui/material/TableFooter/TableFooter.js","webpack://mdposit/./src/pages/accession/ligand-descriptors/style.module.css?f9ba"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"style_container__M9GCG\"};","import React, { useLayoutEffect, useRef, forwardRef } from 'react';\nimport { Card } from '@mui/material';\n\nimport reducedMotion from '../../utils/reduced-motion';\n\nimport style from './style.module.css';\n\nconst KEYFRAMES = { opacity: [0, 1] };\n\nif (!reducedMotion()) {\n  KEYFRAMES.transform = ['translateY(50px)', 'translateY(0)'];\n}\n\nconst ANIMATION_OPTIONS = {\n  fill: 'both',\n  easing: 'cubic-bezier(0, .99, .56, 1.1)',\n  duration: 500,\n};\n\n// Make the card appear and slide softly from down to up when the page is loaded\nconst AnimatedCard = forwardRef(({ overrideComponent, ...props }, ref) => {\n  const containerRef = useRef(null);\n\n  useLayoutEffect(() => {\n    const node = containerRef.current && containerRef.current.firstElementChild;\n    if (!(node && node.animate)) return;\n\n    const index = Array.from(\n      document.querySelectorAll('main section'),\n    ).findIndex(section => node === section);\n\n    const animation = node.animate(KEYFRAMES, {\n      ...ANIMATION_OPTIONS,\n      delay: index * 150,\n    });\n\n    return () => animation.cancel();\n  }, []);\n\n  const Component = overrideComponent ? 'section' : Card;\n\n  return (\n    <div ref={containerRef} className={style.container}>\n      <Component component=\"section\" {...props} ref={ref} />\n    </div>\n  );\n});\n\nexport default AnimatedCard;\n","// extracted by mini-css-extract-plugin\nexport default {\"horizontal-margined\":\"style_horizontal-margined__EuJYg\"};","import React, { Suspense } from 'react';\n\nimport { Select, MenuItem } from '@mui/material';\n\nimport Loading from '../loading';\n\nimport style from './style.module.css';\n\n//import style from './style.module.css';\n\n// Render a panel which allows to select the desired ligand\n// If the user selects a new ligand then the 'setSelectedLigand' is set as its index\n// Ligands have the following structure:\n// { name: string, label: string, ... }\n// The 'label' field will replace the 'name' in the selector labels if exists\nconst LigandSelector = ({ ligandReferences, selectedLigand, setSelectedLigand }) => {\n  const changeLigand = event => {\n    setSelectedLigand(event.target.value);\n  };\n\n  // Render\n  return (\n    <Suspense fallback={<Loading />}>\n      <Select\n        value={selectedLigand}\n        onChange={changeLigand}\n        className={style['horizontal-margined']}\n      >\n        {ligandReferences.map((ligand, i) => (\n          <MenuItem key={i} value={i}>\n            {ligand.name}\n          </MenuItem>\n        ))}\n      </Select>\n    </Suspense>\n  );\n};\n\nexport default LigandSelector;\n","import React, { useContext, useState } from 'react';\n\nimport {\n  CardContent,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TablePagination,\n  TableFooter,\n  Typography,\n} from '@mui/material';\n\nimport Card from '../../../components/animated-card';\nimport Loading from '../../../components/loading';\nimport LigandSelector from '../../../components/ligand-selector';\nimport { ProjectCtx } from '../../../contexts';\n\nimport style from './style.module.css';\n\nimport { InputAdornment, TextField } from '@mui/material';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\n\n// Define the columns for the table: Mordred Data\nconst columns = [\n  { id: 'key', label: 'Mordred Submodules', minWidth: 170 },\n  { id: 'value', label: 'Value', minWidth: 100, format: (value) => value.toLocaleString('en-US'), },\n];\n// Define the default rows per page and the options\nconst rowsPerPageDefault = 10;\nconst rowsPerPageOptions = [10, 25, 50, 100, { label: 'All', value: -1 }];\n\n// Define the non-changing props\nconst inputProps = {\n  'aria-label': 'Search projects by text',\n  startAdornment: (\n    <InputAdornment position=\"start\">\n      <FontAwesomeIcon\n        icon={faSearch}\n        size=\"2x\"\n        className={style['searchbar-icon']}\n      />\n    </InputAdornment>\n  ),\n  classes: {\n    input: style['searchbar-letters'],\n  },\n};\n\n// Render the ligand descriptors page\nconst LigandDescriptors = () => {\n  // Import the ligandReferences from the ProjectCtx\n  const { ligandReferences } = useContext(ProjectCtx);\n  // Define the state variables for the table pagination and the selected ligand\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(rowsPerPageDefault);\n  const [selectedLigand, setSelectedLigand] = useState(0);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  // If we still are loading the ligand references then show a loading spinner\n  if (ligandReferences === null) return <Loading />;\n  // If there are no ligand references then show a message\n  if (ligandReferences.length === 0) return 'There are no ligand references';\n\n  // Get the selected ligand (could be more than one) and the ligand data: mordred and morgan\n  const ligand = ligandReferences[selectedLigand];\n  const mordredData = ligand.mordred;\n  const morgan = ligand.morgan;\n\n  // Create the rows for the table\n  const rows = Object.entries(mordredData).map(([key, value]) => (\n    <TableRow key={key}>\n      <TableCell>{key}</TableCell>\n      <TableCell>{value.toFixed(2)}</TableCell>\n    </TableRow>\n  ));\n\n  // Filter the rows based on the search term\n  const filteredRows = rows.filter((row) => {\n    // Extract the text content from each child component of the row\n    const rowData = Object.values(row.props.children).map(child => child.props.children).join(' ');\n    // Check if the extracted text contains the search term (case-insensitive)\n    return rowData.toLowerCase().includes(searchTerm.toLowerCase());\n  });\n\n// This function is called when the search input value changes\nconst handleSearch = (event) => {\n  // Extract the value of the search input from the event object and assign it to the searchTerm variable\n  const searchTerm = event.target.value;\n  // This function is responsible for updating the state variable that stores the search term\n  setSearchTerm(searchTerm);\n  // Call the setPage function and pass 0 as an argument, updating the state variable that stores the current page number\n  setPage(0);\n};\n\n// This function is called when the page number changes\nconst handleChangePage = (event, newPage) => {\n  // It receives two parameters: an event object and the new page number\n  // Update the state variable that stores the current page number to the new page number\n  setPage(newPage);\n};\n\n// This function is called when the number of rows per page changes.\nconst handleChangeRowsPerPage = (event) => {\n  // Extract the value of the rows per page input from the event object, convert it to an integer using parseInt,\n  // and assign it to the rowsPerPage variable.\n  setRowsPerPage(parseInt(event.target.value, 10));\n  // Call the setPage function and pass 0 as an argument to update the state variable that stores the current page number.\n  setPage(0);\n};\n  return (\n    <>\n      <Card style={{ width: '100%' }}>\n        <CardContent className={style.horizontal}>\n          <Typography variant=\"h6\" align=\"center\">Ligand selection:</Typography>\n          <LigandSelector\n            ligandReferences={ligandReferences}\n            selectedLigand={selectedLigand}\n            setSelectedLigand={setSelectedLigand}\n          />\n        </CardContent>\n      </Card>\n      <Card className={style.tablecard}>\n        <CardContent style={{ height: '100%' }}>\n        <TextField\n              type=\"text\"\n              placeholder=\"Search...\"\n              value={searchTerm}\n              onChange={handleSearch}\n              className={style.searchbar}\n              InputProps={inputProps}\n            />\n          <Table stickyHeader size=\"small\" className={style.table}>\n            <TableHead>\n              <TableRow>\n                {columns.map((column) => (\n                  <TableCell\n                    key={column.id}\n                    style={{ minWidth: column.minWidth }}\n                  >\n                    {column.label}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {filteredRows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)}\n            </TableBody>\n            <TableFooter>\n              <TableRow>\n                <TablePagination\n                  rowsPerPageOptions={rowsPerPageOptions}\n                  colSpan={4}\n                  count={filteredRows.length}\n                  rowsPerPage={rowsPerPage}\n                  page={page}\n                  slotProps={{\n                    select: {\n                      'aria-label': 'rows per page',\n                    },\n                    actions: {\n                      showFirstButton: true,\n                      showLastButton: true,\n                    },\n                  }}\n                  onPageChange={handleChangePage}\n                  onRowsPerPageChange={handleChangeRowsPerPage}\n                />\n              </TableRow>\n            </TableFooter>\n          </Table>\n        </CardContent>\n      </Card>\n      <Card style={{ width: '100%' }}>\n        <CardContent style={{ overflowWrap: 'break-word' }}>\n          <Typography variant=\"h6\" align=\"left\">Morgan Data:</Typography>\n            <div className={style.morganData}>\n              {morgan.map((value, index) => (\n                <span key={index} className={style.morganValue}>{value}</span>\n              ))}\n            </div>\n        </CardContent>\n      </Card>\n    </>\n  );\n};\nexport default LigandDescriptors;\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getInputAdornmentUtilityClass(slot) {\n  return generateUtilityClass('MuiInputAdornment', slot);\n}\nconst inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'standard', 'outlined', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\nexport default inputAdornmentClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _span;\nconst _excluded = [\"children\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from '../utils/capitalize';\nimport Typography from '../Typography';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from './inputAdornmentClasses';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\nconst InputAdornmentRoot = styled('div', {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  height: '0.01em',\n  // Fix IE11 flexbox alignment. To remove at some point.\n  maxHeight: '2em',\n  alignItems: 'center',\n  whiteSpace: 'nowrap',\n  color: (theme.vars || theme).palette.action.active\n}, ownerState.variant === 'filled' && {\n  // Styles applied to the root element if `variant=\"filled\"`.\n  [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n    marginTop: 16\n  }\n}, ownerState.position === 'start' && {\n  // Styles applied to the root element if `position=\"start\"`.\n  marginRight: 8\n}, ownerState.position === 'end' && {\n  // Styles applied to the root element if `position=\"end\"`.\n  marginLeft: 8\n}, ownerState.disablePointerEvents === true && {\n  // Styles applied to the root element if `disablePointerEvents={true}`.\n  pointerEvents: 'none'\n}));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n  const {\n      children,\n      className,\n      component = 'div',\n      disablePointerEvents = false,\n      disableTypography = false,\n      position,\n      variant: variantProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n  const ownerState = _extends({}, props, {\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"text.secondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ? ( /* notranslate needed while Google Translate will not fix zero-width space issue */_span || (_span = /*#__PURE__*/_jsx(\"span\", {\n          className: \"notranslate\",\n          children: \"\\u200B\"\n        }))) : null, children]\n      })\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableFooterUtilityClass(slot) {\n  return generateUtilityClass('MuiTableFooter', slot);\n}\nconst tableFooterClasses = generateUtilityClasses('MuiTableFooter', ['root']);\nexport default tableFooterClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled from '../styles/styled';\nimport { getTableFooterUtilityClass } from './tableFooterClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableFooterUtilityClass, classes);\n};\nconst TableFooterRoot = styled('tfoot', {\n  name: 'MuiTableFooter',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-footer-group'\n});\nconst tablelvl2 = {\n  variant: 'footer'\n};\nconst defaultComponent = 'tfoot';\nconst TableFooter = /*#__PURE__*/React.forwardRef(function TableFooter(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTableFooter'\n  });\n  const {\n      className,\n      component = defaultComponent\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableFooterRoot, _extends({\n      as: component,\n      className: clsx(classes.root, className),\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableFooter.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableFooter;","// extracted by mini-css-extract-plugin\nexport default {\"tablecard\":\"style_tablecard__Tcn7J\",\"table\":\"style_table__+89g8\",\"horizontal\":\"style_horizontal__bE7FS\",\"searchbar\":\"style_searchbar__GS0mD\",\"searchbar-icon\":\"style_searchbar-icon__y1OY3\",\"searchbar-letters\":\"style_searchbar-letters__G8TwW\"};"],"names":["KEYFRAMES","opacity","reducedMotion","transform","ANIMATION_OPTIONS","fill","easing","duration","forwardRef","_ref","ref","overrideComponent","props","containerRef","useRef","useLayoutEffect","node","current","firstElementChild","animate","index","Array","from","document","querySelectorAll","findIndex","section","animation","delay","cancel","Component","Card","_jsx","className","style","children","component","ligandReferences","selectedLigand","setSelectedLigand","Suspense","fallback","Loading","Select","value","onChange","event","target","map","ligand","i","MenuItem","name","columns","id","label","minWidth","format","toLocaleString","rowsPerPageOptions","inputProps","startAdornment","InputAdornment","position","FontAwesomeIcon","icon","faSearch","size","classes","input","LigandDescriptors","useContext","ProjectCtx","page","setPage","React","rowsPerPage","setRowsPerPage","useState","searchTerm","setSearchTerm","length","mordredData","mordred","morgan","filteredRows","Object","entries","key","_jsxs","TableRow","TableCell","toFixed","filter","row","values","child","join","toLowerCase","includes","_Fragment","width","CardContent","horizontal","Typography","variant","align","LigandSelector","tablecard","height","TextField","type","placeholder","searchbar","InputProps","Table","stickyHeader","table","TableHead","column","TableBody","slice","TableFooter","TablePagination","colSpan","count","slotProps","select","actions","showFirstButton","showLastButton","onPageChange","handleChangePage","newPage","onRowsPerPageChange","parseInt","overflowWrap","morganData","morganValue","getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardRoot","styled","Paper","overridesResolver","styles","root","overflow","inProps","useDefaultProps","raised","other","_objectWithoutPropertiesLoose","ownerState","_extends","composeClasses","useUtilityClasses","clsx","elevation","undefined","getInputAdornmentUtilityClass","_span","InputAdornmentRoot","capitalize","disablePointerEvents","theme","display","maxHeight","alignItems","whiteSpace","color","vars","palette","action","active","inputAdornmentClasses","positionStart","hiddenLabel","marginTop","marginRight","marginLeft","pointerEvents","disableTypography","variantProp","muiFormControl","useFormControl","slots","FormControlContext","Provider","as","getTableFooterUtilityClass","TableFooterRoot","tablelvl2","defaultComponent","Tablelvl2Context","role"],"sourceRoot":""}