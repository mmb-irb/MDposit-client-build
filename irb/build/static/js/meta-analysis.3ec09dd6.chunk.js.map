{"version":3,"file":"static/js/meta-analysis.3ec09dd6.chunk.js","mappings":"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","sources":["webpack://mdposit/./src/pages/meta-analysis/style.module.css?6f1d","pages/meta-analysis/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"horizontal\":\"style_horizontal__Wxlxf\",\"menu\":\"style_menu__tGHGe\",\"text\":\"style_text__aAi8s\",\"paragraph\":\"style_paragraph__Tffit\",\"header\":\"style_header__YQJqa\",\"hr\":\"style_hr__dkWiz\",\"section\":\"style_section__2Kr9+\",\"summary\":\"style_summary__o-X6i\",\"space\":\"style_space__mBdIB\",\"piechart\":\"style_piechart__R-aya\",\"legend\":\"style_legend__y7PwV\"};","// React logic\nimport React, { useRef, useEffect, createRef } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\n// This allows to render markdown\nimport ReactMarkdown from 'react-markdown'\n\n// Visual assets\nimport { MenuList, MenuItem, Typography } from '@mui/material';\n\nimport style from './style.module.css';\n\nimport { BASE_PATH } from '../../utils/constants';\n\n// Set the URL to the github repo which sources the binder\nconst githubRepoBaseUrl = 'https://github.com/bioexcel/bioexcel_covid19_workflows'\n// Set the URL to the github jupyer notebook viewer\nconst githubJupyterViewer = githubRepoBaseUrl + '/blob/main/notebooks/';\n// Set the base URL to the repository where the binder enviornment and the workflows are stored\nconst binderRepoBaseUrl = 'https://mybinder.org/v2/gh/bioexcel/bioexcel_covid19_workflows/HEAD?labpath=notebooks%2F';\n\n// Set some markdown badges\nconst githubBadge = '![GitHub repository](https://badgen.net/badge/icon/github?icon=github&label)';\nconst jupyterBadge = '![Jupyter Notebook](https://img.shields.io/badge/jupyter-%23FA0F00.svg?style=for-the-badge&logo=jupyter&logoColor=white)';\nconst binderBadge = '![Binder](https://mybinder.org/badge_logo.svg)';\n\n// Set the available analyses, their introduction and the name of the notebook in the binder repository\n// Include also an id for further reference. Note that this id may be visible in the URL\nconst availableAnalyses = [\n  {\n    id: 'tutorials',\n    title: 'Tutorials',\n    isSection : true,\n  },\n  {\n    id: 'browsing',\n    title: 'Browsing projects',\n    docs:(\n      <>\n        This tutorial shows an example of how to browse among the different entries (projects). \n        Each project contains metadata such as names of the authors, parameters of the simulation, etc.\n      </>\n    ),\n    notebook: 'browse_tutorial.ipynb'\n  },\n  {\n    id: 'projects',\n    title: 'Mining project data',\n    docs:(\n      <>\n        This tutorial shows an example of how to mine data from a specific project. \n        The project is the main entry in the database and it contains mostly metadata, \n        but it is also an index of additional data which may be requested as well.\n      </>\n    ),\n    notebook: 'project_tutorial.ipynb'\n  },\n  {\n    id: 'trajectory',\n    title: 'Visualizing trajectory data',\n    docs:(\n      <>\n        This tutorial shows an example of how to download structure and trajectory data \n        from a specific project. Then data is loaded into a molecular viewer and displayed.\n      </>\n    ),\n    notebook: 'trajectory_tutorial.ipynb'\n  },\n  {\n    id: 'precalculated',\n    title: 'Pre-calculated analyses',\n    isSection : true,\n  },\n  {\n    id: 'rmsd',\n    title: 'RMSD analysis',\n    docs:(\n      <>\n        In this example we reproduce the pre-calculated root mean squared deviation analysis (RMSD) performed by the data processing workflow.\n      </>\n    ),\n    notebook: 'rmsd_analysis.ipynb'\n  },\n  {\n    id: 'rmsf',\n    title: 'Fluctuation analysis',\n    docs:(\n      <>\n        In this example we reproduce the pre-calculated atom fluctuation analysis (RMSF) performed by the data processing workflow.\n      </>\n    ),\n    notebook: 'rmsf_analysis.ipynb'\n  },\n  {\n    id: 'rgyr',\n    title: 'Radius of gyration analysis',\n    docs:(\n      <>\n        In this example we reproduce the pre-calculated radius of gyrations analysis (RGYR) performed by the data processing workflow.\n      </>\n    ),\n    notebook: 'rgyr_analysis.ipynb'\n  },\n  {\n    id: 'usecases',\n    title: 'Meta-analysis use cases',\n    isSection : true,\n  },\n  {\n    id: 'protein_ligands',\n    title: 'Protein-ligands interaction analysis',\n    docs:(\n      <>\n        In this example we intend to analyze simulations of ACE2 protein with different ligands (drugs).\n        We aim to compare, for each ligand, how both electrostatic and Van de Waals energies change.\n        For this test we are using 78 atomistic MD trajectories from D. E. Shaw already loaded in the BioExcel-Covid19 database.\n      </>\n    ),\n    notebook: 'ace2_ligands_analysis.ipynb'\n  },\n  {\n    id: 'protein_protein',\n    title: 'Protein-protein interaction analysis',\n    docs:(\n      <>\n        In this example we intend to analyze the interaction between human angiotensin converting enzyme 2 (ACE2) \n        and the SARS-CoV-2 spike RBD domain. We want to compare, for the N501Y mutation, how electrostatic energies, \n        Van der Waals energies and hydrogen bonds change on this residue and its surrounding residues.\n        <br />\n        <br />\n        For this test we will use RBD-ACE2 atomistic MD trajectories already loaded in the BioExcel-Covid19 database. \n        Specifically, we will use a group of simulations from Mary Hongying Cheng including different varaints of the virus.\n      </>\n    ),\n    notebook: 'ace2_rbd_interaction_analysis.ipynb'\n  },\n  {\n    id: 'protein_nucleic',\n    title: 'Protein-nucleic acid interaction analysis',\n    docs:(\n      <>\n        In this example we intend to analyze the interaction between the SARS-CoV-2 polymerase complex and a fragment of RNA. \n        We want to find and visualize the aminoacid with the highest electrostatic and Van der Waals energies and thus the one \n        which is carrying the interaction.\n        <br />\n        <br />\n        For this test we will use Polymerase atomistic MD trajectories already loaded in the BioExcel-Covid19 database from \n        different groups.\n      </>\n    ),\n    notebook: 'polymerase_analysis.ipynb'\n  }\n];\n\n// Set a simpler TextLink component\nconst TextLink = ({ name, url }) => (\n  <>\n    <a href={url} target=\"_blank\" rel=\"noreferrer noopener\" >\n      {name}\n    </a>\n  </>\n);\n\nconst MetaAnalysis = () => {\n  // Get the location\n  const location = useLocation();\n\n  // References to all documentation blocks will be stored here\n  const containerRefs = useRef();\n  const analysisRefs = useRef(Array(availableAnalyses.length).fill(createRef()));\n\n  // Scroll down to the asked reference\n  useEffect(() => {\n    const container = containerRefs.current;\n    for (const ref of analysisRefs.current) {\n      if (location.hash !== '#' + ref.id) continue;\n      //window.scrollTo(0, container.offsetTop);\n      container.scrollTop = ref.offsetTop - container.offsetTop;\n      break;\n    }\n  }, [location.hash]);\n\n  return (\n    <div className={style.horizontal}>\n      <MenuList className={style.menu}>\n        {availableAnalyses.map((analysis, index) => (\n          <MenuItem\n            key={index}\n            component={Link}\n            to={`/meta#${analysis.id}`}\n            style={{\n              whiteSpace: 'normal',\n              fontWeight: analysis.isSection ? 'bold' : 'normal',\n              fontSize: analysis.isSection ? 'larger' : 'normal'\n            }}\n          >\n            {analysis.title}\n          </MenuItem>\n        ))}\n      </MenuList>\n      <div className={style.text} ref={containerRefs}>\n        <Typography variant={'h5'} className={style.header}>\n          Meta-analysis\n        </Typography>\n        In this page we have prepared <span style={{ color: 'green' }}>tutorials</span>{' '}\n        and <span style={{ color: 'green' }}>use cases</span> of meta-analyses.\n        <br />\n        <br />\n        Meta-analyses are analyses which use several MDs as input. This database is specially suited for this task \n        since it is endowed with a <TextLink name={'REST API'} url={BASE_PATH + 'docs/'} />. \n        Programmatic access to the database allows to automatize data requests and thus build powerful meta-analyses.\n        The following examples are supported by <TextLink name={'Binder'} url={'https://mybinder.org/'} />, \n        which opens interactive <span style={{ color: 'green' }}>Jupyter Notebooks</span>.\n        Note that you can edit code or run the analysis online with no need to install any software.\n        Here we suggest some meta-analyses but you are very welcome to make your own ones!\n        <br />\n        <br />\n        Original notebooks and the environment setup to run the examples are available here:\n        <ReactMarkdown\n          children={`[${githubBadge}](${githubRepoBaseUrl})`}\n          linkTarget=\"_blank\"\n        />\n        <hr className={style.hr} />\n        {availableAnalyses.map((analysis, index) => (\n          <div\n            key={index}\n            id={analysis.id}\n            ref={r => (analysisRefs.current[index] = r)}\n            className={style.paragraph}\n          >\n            <Typography variant={analysis.isSection ? 'h5' : 'h6'} className={style.header}>\n              {analysis.title}\n            </Typography>\n            {!analysis.isSection && <>\n              <div key={'text'}>{analysis.docs}</div>\n              <ReactMarkdown\n                children={`[${jupyterBadge}](${githubJupyterViewer}${analysis.notebook})`}\n                linkTarget=\"_blank\"\n              />\n              <ReactMarkdown\n                children={`[${binderBadge}](${binderRepoBaseUrl}${analysis.notebook})`}\n                linkTarget=\"_blank\"\n              />\n            </>}\n            <hr className={style.hr} />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default MetaAnalysis;\n"],"names":["githubRepoBaseUrl","githubJupyterViewer","availableAnalyses","id","title","isSection","docs","_jsx","_Fragment","children","notebook","_jsxs","TextLink","_ref","name","url","href","target","rel","MetaAnalysis","location","useLocation","containerRefs","useRef","analysisRefs","Array","length","fill","createRef","useEffect","container","current","ref","hash","scrollTop","offsetTop","className","style","MenuList","map","analysis","index","MenuItem","component","Link","to","concat","whiteSpace","fontWeight","fontSize","Typography","variant","color","BASE_PATH","ReactMarkdown","linkTarget","r"],"sourceRoot":""}