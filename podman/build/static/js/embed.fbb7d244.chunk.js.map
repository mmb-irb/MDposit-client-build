{"version":3,"file":"static/js/embed.fbb7d244.chunk.js","mappings":"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","sources":["webpack://mdposit/./src/components/animated-card/style.module.css?d4d9","components/animated-card/index.js","contexts/index.js","hooks/use-api/index.js","hooks/use-ngl-file/index.js","webpack://mdposit/./src/pages/embed/style.module.css?241c","pages/embed/index.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"style_container__M9GCG\"};","import React, { useLayoutEffect, useRef, forwardRef } from 'react';\nimport { Card } from '@mui/material';\n\nimport reducedMotion from '../../utils/reduced-motion';\n\nimport style from './style.module.css';\n\nconst KEYFRAMES = { opacity: [0, 1] };\n\nif (!reducedMotion()) {\n  KEYFRAMES.transform = ['translateY(50px)', 'translateY(0)'];\n}\n\nconst ANIMATION_OPTIONS = {\n  fill: 'both',\n  easing: 'cubic-bezier(0, .99, .56, 1.1)',\n  duration: 500,\n};\n\n// Make the card appear and slide softly from down to up when the page is loaded\nconst AnimatedCard = forwardRef(({ overrideComponent, ...props }, ref) => {\n  const containerRef = useRef(null);\n\n  useLayoutEffect(() => {\n    const node = containerRef.current && containerRef.current.firstElementChild;\n    if (!(node && node.animate)) return;\n\n    const index = Array.from(\n      document.querySelectorAll('main section'),\n    ).findIndex(section => node === section);\n\n    const animation = node.animate(KEYFRAMES, {\n      ...ANIMATION_OPTIONS,\n      delay: index * 150,\n    });\n\n    return () => animation.cancel();\n  }, []);\n\n  const Component = overrideComponent ? 'section' : Card;\n\n  return (\n    <div ref={containerRef} className={style.container}>\n      <Component component=\"section\" {...props} ref={ref} />\n    </div>\n  );\n});\n\nexport default AnimatedCard;\n","import { createContext } from 'react';\n\n// These 3 context are used by React hooks\n// They are accessed from different scripts (e.g. the accession page)\nexport const ProjectCtx = createContext(null);\nexport const PdbCtx = createContext(null);\n","import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// Empty response\nconst blank = {\n  loading: false,\n  payload: null,\n  error: null,\n};\n\n// Loading response\nconst loading = {\n  loading: true,\n};\n\n// Get data from the API\nconst useAPI = url => {\n  // Set the 'data' state object, which is returned at the end of this function\n  const [data, setData] = useState(blank);\n\n  // This react hook is responisble for sending the request to the API\n  // This react hook has 'url' dependencies, so it is only runned once per request\n  useEffect(() => {\n    // In case there is no valid url\n    // This may be useful as a workaround to not call the API, since hooks can not be called conditionally\n    if (!url) {\n      setData(blank);\n      return;\n    }\n    // This is axios (https://www.npmjs.com/package/axios)\n    // Set a cancel option (token). If a request includes this cancel token in its options, the request can be cancelled\n    // In order to cancel the request, the same token must be used through axios\n    const source = axios.CancelToken.source();\n    let didCancel = false;\n    // Make a request in a Promise/await way\n    axios(url, {\n      // This token allows us to further cancel the request if necessary\n      cancelToken: source.token,\n      // Send the start time so we can calculate the response time when we get the response\n      startTime: new Date()\n    })\n      // (.then is async) If the request has succeed\n      .then(response => {\n        if (didCancel) return;\n        // Calculate the response time\n        const endTime = new Date();\n        const startTime = response.config.startTime;\n        const responseTime = endTime - startTime; // In ms\n        // Return response data\n        const responseData = {\n          url: url,\n          loading: false,\n          payload: response.data,\n          error: null,\n          time: responseTime\n        };\n        setData(responseData);\n      })\n      // Otherwise\n      .catch(error => {\n        if (didCancel) return;\n        const responseData = {\n          url: url,\n          loading: false,\n          payload: null,\n          error: error,\n        };\n        setData(responseData);\n      });\n\n    return () => {\n      // Cancel the request\n      source.cancel();\n      didCancel = true;\n    };\n\n    // 'useEffect' will only be called when the url changes\n  }, [url]);\n  // If there is no url then return the blank response\n  if (!url) return blank;\n  // Data is returned this way\n  // Data is returned only if the data.url matches the url from this request\n  // These urls do not macth each first time 'useAPI' is called\n  // 'data' is not reset each time 'useAPI' is called so the url is fro, the previous request\n  if (data.url === url) return data;\n  // The first time 'useAPI' is called only { loading: true } is returned\n  else return loading;\n};\n\nexport default useAPI;\n","import { useEffect, useReducer } from 'react';\nimport { autoLoad } from 'ngl';\n\n// This logic is used by the \"useReducer\" and executed by a \"dispatch\", whcih provides a type (action.type)\n// This function expects an initial state and an action which will be used to calculate a new state\n// In addition, other variables are calculated and sent back\nconst nglFileReducer = (state, action) => {\n  switch (action.type) {\n    case 'INIT':\n      // Here both file and error must be explicitly set to null or a previous result may remain\n      return { ...state, loading: true, file: null, error: null };\n    case 'SUCCESS':\n      return { ...state, loading: false, file: action.file };\n    case 'ERROR':\n      return { ...state, loading: false, error: action.error };\n    // An error is sent when the state type is not one of the previous 3 options\n    default:\n      throw new Error(`\"${action.type}\" is not a valid action`);\n  }\n};\n\n// Get data from a specific directory in the API\n// The difference between this hook and useAPI hook is the use of 'autoLoad' instead of 'axios'\n// 'autoLoad' is the built in function from NGL to load data\nconst useNGLFile = (url, { defaultRepresentation, ext }) => {\n  // useReducer is a react hook\n  const [state, dispatch] = useReducer(nglFileReducer, {\n    loading: !!url,\n    file: null,\n    error: null,\n  });\n\n  useEffect(() => {\n    if (!url) {\n      dispatch({ type: 'SUCCESS' });\n      return;\n    }\n\n    dispatch({ type: 'INIT' });\n\n    let didCancel = false;\n\n    // Load data from the API\n    autoLoad(url, { defaultRepresentation, ext })\n      .then(file => !didCancel && dispatch({ type: 'SUCCESS', file }))\n      .catch(error => !didCancel && dispatch({ type: 'ERROR', error }));\n\n    return () => (didCancel = true);\n  }, [url, defaultRepresentation, ext]);\n\n  return state;\n};\n\nexport default useNGLFile;\n","// extracted by mini-css-extract-plugin\nexport default {\"ngl-card\":\"style_ngl-card__dSFfi\",\"container\":\"style_container__sVFS+\"};","import React, { useState } from 'react';\n\nimport useAPI from '../../hooks/use-api';\nimport useNGLFile from '../../hooks/use-ngl-file';\n\nimport ErrorBoundary from '../../components/error-boundary';\n\nimport { ProjectCtx, PdbCtx } from '../../contexts';\n\nimport Card from '../../components/animated-card';\nimport ViewerWithControls from '../../components/viewer-with-controls';\nimport Loading from '../../components/loading';\n\nimport style from './style.module.css';\n\nimport { BASE_PATH_PROJECTS, MAIN_STRUCTURE_FILENAME } from '../../utils/constants';\n\n// Load the project class\nimport { Project } from '../../utils/project-manager';\nimport { useParams } from 'react-router-dom';\n\nconst Embed = () => {\n  const { accession: accessionAndMdNumber } = useParams();\n  const [project, setProject] = useState(null);\n\n  // Get project data from the API if the current context data is wrong. 'payload' contains the main data.\n  const projectRequest = useAPI(`${BASE_PATH_PROJECTS}/${accessionAndMdNumber}/`);\n\n  // Load the structure data form the API\n  const pdbData = useNGLFile(\n    `${BASE_PATH_PROJECTS}/${accessionAndMdNumber}/files/${MAIN_STRUCTURE_FILENAME}`,\n    // This attribute was included before: defaultRepresentation: false\n    { defaultRepresentation: false, ext: 'pdb' },\n  );\n\n  // While loading\n  if (projectRequest.loading) return <Loading />;\n  if (projectRequest.error) return projectRequest.error.toString();\n  // This should never happen\n  if (!projectRequest.payload) return null;\n\n  // Set the final project data to be loaded in context\n  const projectData = new Project(projectRequest.payload);\n  if (!project) {\n    setProject(projectData);\n    return;\n  }\n\n  if (pdbData.loading) return <Loading />;\n  else if (pdbData.error) return pdbData.error.toString();\n  else if (!pdbData.file) return 'Something bad happened with the pdb data';\n\n  // Make some modifications to the project data once loaded\n  // If accession is missing then set the identifier as the accession\n  if (!project.accession) project.accession = project.identifier;\n  // Order chain indices by alphabetic number when we have new project data\n  if (project.chains) project.chains.sort();\n\n  return (\n    <ErrorBoundary>\n      <ProjectCtx.Provider value={project}>\n        <PdbCtx.Provider value={pdbData}>\n          <Card className={style['ngl-card']}>\n            <ViewerWithControls className={style.container} />\n          </Card>\n        </PdbCtx.Provider>\n      </ProjectCtx.Provider>\n    </ErrorBoundary>\n  );\n};\n\nexport default Embed;\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;"],"names":["KEYFRAMES","opacity","reducedMotion","transform","ANIMATION_OPTIONS","fill","easing","duration","forwardRef","_ref","ref","overrideComponent","props","_objectWithoutProperties","_excluded","containerRef","useRef","useLayoutEffect","node","current","firstElementChild","animate","index","Array","from","document","querySelectorAll","findIndex","section","animation","_objectSpread","delay","cancel","Component","Card","_jsx","className","style","children","component","ProjectCtx","createContext","PdbCtx","blank","loading","payload","error","url","data","setData","useState","useEffect","source","axios","didCancel","cancelToken","token","startTime","Date","then","response","responseTime","config","responseData","time","catch","nglFileReducer","state","action","type","file","Error","concat","useNGLFile","defaultRepresentation","ext","dispatch","useReducer","autoLoad","Embed","accession","accessionAndMdNumber","useParams","project","setProject","projectRequest","useAPI","BASE_PATH_PROJECTS","pdbData","MAIN_STRUCTURE_FILENAME","Loading","toString","projectData","Project","identifier","chains","sort","ErrorBoundary","Provider","value","ViewerWithControls","getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","CardRoot","styled","Paper","name","overridesResolver","styles","root","overflow","React","inProps","useDefaultProps","raised","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","clsx","elevation","undefined"],"sourceRoot":""}