{"version":3,"file":"static/js/3171.f71f4702.chunk.js","mappings":"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","sources":["utils/load-custom-element/index.js","pages/accession/trajectory/chains/chain-analysis/index.js","utils/hash-from-string/index.js","utils/color-from-string/index.js","utils/merge-intervals/index.js","pages/accession/trajectory/chains/chain-analysis/process-ipscan-results/index.js","pages/accession/trajectory/chains/index.js","webpack://mdposit/./src/pages/accession/trajectory/chains/chain-analysis/style.module.css?b840","webpack://mdposit/./src/pages/accession/trajectory/chains/style.module.css?611e"],"sourcesContent":["const loadCustomElement = importer => ({\n  async as(namespace) {\n    let _namespace = namespace;\n    // load custom element script\n    let customElement = await importer();\n    if (customElement.default) customElement = customElement.default;\n    // if no name was specified, use default provided by the custom element\n    if (\n      !_namespace &&\n      customElement.is &&\n      typeof customElement.is === 'string'\n    ) {\n      _namespace = customElement.is;\n    }\n    // if we get to this point without any name, just give up\n    if (!_namespace) {\n      throw new Error('Please a specify a name for custom element');\n    }\n    // check if not already defined\n    const alreadyExisting = window.customElements.get(_namespace);\n    if (alreadyExisting) {\n      // if it was, with the same element, everything is fine\n      if (alreadyExisting === customElement) return _namespace;\n      throw new Error('This name is already used by another component');\n    }\n    window.customElements.define(_namespace, customElement);\n    return _namespace;\n  },\n});\n\nexport default loadCustomElement;\n","import React, { memo, useEffect, useRef } from 'react';\n\nimport loadCustomElement from '../../../../../utils/load-custom-element';\n\nimport processIPScanResults from './process-ipscan-results';\n\nimport style from './style.module.css';\n\n// Keep elements out of any component, since they must be imported just once\nlet customElements = [];\n// This promise is further resolven when all protvista elements have finished the import process\nlet protvistaLoadedResolve;\nconst protvistaLoaded = new Promise(resolve => { protvistaLoadedResolve = resolve });\n\n// Load all protvista components together in a 'custom' way for them to work\nconst importProtVista = async () => {\n  if (customElements.length > 0) return;\n  customElements = [\n        // WARNING: We must make sure the manager is imported before the others\n        // Otherwise we get many errors of 'this.manager.register is not a function'\n        // The rest of components may be imported in any order\n        await loadCustomElement(() => import(\n            /* webpackChunkName: \"protvista-manager\" */ 'protvista-manager'),\n        ).as('protvista-manager'),\n        loadCustomElement(() => import(\n            /* webpackChunkName: \"protvista-sequence\" */ 'protvista-sequence'\n        )).as('protvista-sequence'),\n        loadCustomElement(() => import(\n            /* webpackChunkName: \"protvista-navigation\" */ 'protvista-navigation'\n        )).as('protvista-navigation'),\n        loadCustomElement(() => import(\n            /* webpackChunkName: \"protvista-coloured-sequence\" */ 'protvista-coloured-sequence'\n        )).as('protvista-coloured-sequence'),\n        loadCustomElement(() => import(\n            /* webpackChunkName: \"protvista-coloured-sequence\" */ 'protvista-coloured-sequence'\n        )).as('protvista-coloured-sequence'),\n        loadCustomElement(() => import(\n            /* webpackChunkName: \"protvista-interpro-track\" */ 'protvista-interpro-track'\n        )).as('protvista-interpro-track')\n  ];\n  // Wait until all protvista elements are loaded and then resolve the promise\n  await Promise.all(customElements);\n  protvistaLoadedResolve();\n};\n\n// Set the protvista interpro track independently, since it needs to keep its own reference\nconst InterproTrack = memo(({ match, length, shape, classAttr }) => {\n    // Set a reference to the protvista element\n    const protvistaRef = useRef();\n    // Update protvista element data after render\n    useEffect(() => {\n        const fillComponentWithData = async () => {\n            // Make sure the element has been imported already or it wont work\n            await protvistaLoaded;\n            // Load data in the reference\n            protvistaRef.current.data = [match];\n            protvistaRef.current.contributors = match.signatures || [];\n        }\n        fillComponentWithData();\n    }, []);\n    // Render the element\n    return (\n        <protvista-interpro-track\n            ref={protvistaRef}\n            length={length}\n            shape={shape}\n            class={classAttr}\n        />\n    );\n});\n\n// The result of this function is memoized since it is a heavy work\nconst ChainAnalyses = memo(({ data, firstResidueNumber }) => {\n    // Get the chain letter\n    const chain = data.name;\n    // Import protvista elements in their 'custom' way\n    useEffect(() => {\n        importProtVista();\n    }, []);\n    // Mine data\n    const sequence = data.sequence;\n    const sequenceLength = sequence.length;\n    const interproscanData = data.interproscan;\n    // It may happen that interproscan data is missing when we have a small sequence\n    if (!interproscanData) return 'No InterProScan data';\n    const matches = interproscanData.results[0].matches;\n    const processedMatches = processIPScanResults(matches, firstResidueNumber);\n    // Set the end residue to be displayed\n    const displayEnd = firstResidueNumber + sequenceLength;\n    // Set an shifted sequence by adding null values at the begining\n    // This is the only way I figured out to offset the sequence\n    // Apparently protvista sequence components have no argument for this\n    const shiftedSequence = ' '.repeat(firstResidueNumber) + sequence;\n    return (\n        <protvista-manager\n            attributes=\"length displaystart displayend\"\n            length={sequenceLength}\n            chain={chain}\n        >\n        <protvista-navigation\n            rulerstart={firstResidueNumber}\n            displaystart={firstResidueNumber}\n            displayend={displayEnd}\n        />\n        <div className={style.entries}>\n            <protvista-sequence\n                sequence={shiftedSequence}\n                height=\"37\"\n            />\n            <protvista-coloured-sequence\n                sequence={shiftedSequence}\n                scale=\"hydrophobicity-scale\"\n                height=\"15\"\n            />\n            { processedMatches.length\n            ? processedMatches.map((match, index) => {\n                return (\n                <div key={index} >\n                    <span className={style.label}>{match.accession}</span>\n                    <InterproTrack\n                    match={match}\n                    shape=\"roundRectangle\"\n                    classAttr={match.signatures ? style['has-signatures'] : undefined}\n                    />\n                </div>\n                )})\n            : 'No entry was found for this sequence'\n            }\n        </div>\n        </protvista-manager>\n    );\n});\n\nexport default ChainAnalyses;\n","const hashFromString = string => {\n  let hash = 0;\n  for (let i = 0; i < string.length; i++) {\n    hash = (hash << 5) - hash + string.charCodeAt(i);\n    hash |= 0;\n  }\n  return hash;\n};\n\nexport default hashFromString;\n","import hashFromString from '../hash-from-string';\n\nconst colorFromString = string => {\n  const hash = hashFromString(string);\n  const hue = Math.abs(hash % 360);\n  const saturation = Math.abs(hash % 20) + 40; // 50% give or take 10%\n  const lightness = Math.abs(hash % 10) + 45; // 50% give or take 5%\n  return `hsla(${hue}, ${saturation}%, ${lightness}%, 1)`;\n};\n\nexport default colorFromString;\n","const startAccessorDefault = (interval, value) =>\n  Number.isFinite(value) ? (interval[0] = value) : interval[0];\nconst endAccessorDefault = (interval, value) =>\n  Number.isFinite(value) ? (interval[1] = value) : interval[1];\n\nconst mergeIntervals = (\n  intervals,\n  startAccessor = startAccessorDefault,\n  endAccessor = endAccessorDefault,\n) => {\n  const sortedIntervals = Array.from(intervals).sort(\n    (a, b) => startAccessor(a) - startAccessor(b),\n  );\n  let output = [];\n  let current;\n  for (const interval of sortedIntervals) {\n    if (!current) {\n      // first loop\n      current = interval;\n    } else if (endAccessor(current) < startAccessor(interval)) {\n      // current is not within interval\n      output.push(current);\n      current = interval;\n    } else {\n      // current is within, or contiguous to interval\n      endAccessor(\n        current,\n        Math.max(endAccessor(current), endAccessor(interval)),\n      );\n    }\n  }\n  if (current) output.push(current);\n  return output;\n};\n\nexport default mergeIntervals;\n","import colorFromString from '../../../../../../utils/color-from-string';\nimport mergeIntervals from '../../../../../../utils/merge-intervals';\n\n// Renumerate residue numbers to make them match the actual chain they come from\nconst shiftLocations = (fragments, shift) => {\n  fragments.forEach(fragment => {\n    fragment.start += shift;\n    fragment.end += shift;\n  })\n  return fragments;\n}\n\nconst processLocations = (locations, firstResidueNumber = 1) =>\n  locations.map(location => ({\n    fragments: shiftLocations(location['location-fragments'], firstResidueNumber),\n  }));\n\nconst processIPScanResults = (matches, firstResidueNumber) => {\n  const processed = [];\n  // for all the matches\n  for (const match of matches || []) {\n    // if the match has an entry, consider it as a signature of the entry\n    if (match.signature.entry) {\n      let existing = processed.find(\n        m => m.accession === match.signature.entry.accession,\n      );\n      // if the entry hadn't been stored yet, create it now\n      if (!existing) {\n        existing = {\n          accession: match.signature.entry.accession,\n          db: 'InterPro',\n          signatures: [],\n          locations: [],\n          color: colorFromString(match.signature.entry.accession),\n        };\n        processed.push(existing);\n      }\n      const locations = processLocations(match.locations, firstResidueNumber);\n      existing.locations = mergeIntervals(\n        [...existing.locations, ...locations],\n        (interval, value) =>\n          Number.isFinite(value)\n            ? (interval.fragments[0].start = value)\n            : interval.fragments[0].start,\n        (interval, value) =>\n          Number.isFinite(value)\n            ? (interval.fragments[0].end = value)\n            : interval.fragments[0].end,\n      );\n      // add the match as a signature of that entry\n      existing.signatures.push({\n        accession: match.signature.accession,\n        db: match.signature.signatureLibraryRelease.library,\n        locations,\n        color: existing.color.replace(', 1)', ', 0.25)'),\n      });\n    } else {\n      // the match doesn't have entry, it is not integrated\n      processed.push({\n        accession: match.signature.accession,\n        db: match.signature.signatureLibraryRelease.library,\n        locations: processLocations(match.locations, firstResidueNumber),\n        color: colorFromString(match['model-ac']),\n      });\n    }\n  }\n\n  // sort them\n  processed\n    // secondary sort by start position\n    .sort((a, b) => a.locations[0].fragments[0].start - b.locations[0].fragments[0].start)\n    // primary sort by number of signatures\n    .sort((a, b) => (b.signatures || []).length - (a.signatures || []).length);\n\n  return processed;\n};\n\nexport default processIPScanResults;\n","import React, {\n    memo,\n    useContext,\n    useEffect,\n} from 'react';\n\n// Visual components\nimport { Typography } from '@mui/material';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleRight } from '@fortawesome/free-solid-svg-icons';\n\n// Recover the metadata saved in this context by the accession script\nimport { ProjectCtx } from '../../../../contexts';\n\n// The single chain analysis component, using protvista\nimport ChainAnalysis from './chain-analysis';\n\n// Check if reduced motion is requested\nimport reducedMotion from '../../../../utils/reduced-motion';\n\n// CSS style\nimport style from './style.module.css';\n\nconst dbMap = new Map([\n    ['InterPro', 'InterPro'],\n    // special cases\n    ['TIGRFAM', 'tigrfams'],\n    ['PROSITE_PROFILES', 'profile'],\n    ['PROSITE_PATTERNS', 'prosite'],\n    ['SUPERFAMILY', 'ssf'],\n    ['GENE3D', 'cathgene3d'],\n    // just the same, but lowercase\n    ['CDD', 'cdd'],\n    ['HAMAP', 'hamap'],\n    ['PANTHER', 'panther'],\n    ['PFAM', 'pfam'],\n    ['PIRSF', 'pirsf'],\n    ['PRINTS', 'prints'],\n    ['SFLD', 'sfld'],\n    ['SMART', 'smart'],\n]);\n\nconst ChainsAnalysis = memo(() => {\n    // Load chains references and the topology manager\n    const {\n        topology: topologyManager,\n        chainReferences,\n    } = useContext(ProjectCtx);\n    // Portals create a window where a web page is pre rendered without navigating to\n    // You can navigate to this web page by clicking on the portal\n    // NOTE: see https://web.dev/hands-on-portals for tutorial on Portals\n    useEffect(() => {\n        // bypass React for DOM alteration\n        // document.createElement is a different way to create React elements\n        const popup = document.createElement('div');\n        popup.className = style.popup;\n        let portal, portalContainer;\n        if ('HTMLPortalElement' in window) {\n            portalContainer = document.createElement('div');\n            portalContainer.className = style['portal-container'];\n            portal = document.createElement('portal');\n            portalContainer.appendChild(portal);\n            popup.appendChild(portalContainer);\n            portal.addEventListener('click', () => {\n            const bcr = portal.getBoundingClientRect();\n            portal.animate(\n                { transform: [`scale(1) translate(${-bcr.left}px, ${-bcr.top}px)`] },\n                {\n                    duration: reducedMotion() ? 0 : 1000,\n                    easing: 'cubic-bezier(.23,-0.26,0,1)',\n                    fill: 'both',\n                },\n            ).onfinish = () => {\n                // TODO: whenever the bug removing history when activating a portal is\n                // TODO: fixed, use this piece of code\n                // portal.activate();\n                // TODO: in the meantime... (yes, it does an ugly flash 🤷‍)\n                window.location.href = portal.src;\n            };\n            });\n        }\n    \n        const link = document.createElement('a');\n        link.rel = 'noopener';\n        link.target = '_blank';\n        popup.appendChild(link);\n    \n        let displayed = false;\n        let timeout;\n    \n        const clearPopup = () => {\n            link.textContent = '';\n            link.href = '';\n            if (portal) {\n                portalContainer.style.display = 'none';\n                portal.src = null;\n                portal.removeAttribute('src');\n            }\n            popup.style.visibility = 'hidden';\n            popup.style.transform = 'translate(0, 0)';\n        };\n    \n        const popupEnterHandle = () => clearTimeout(timeout);\n        const popupLeaveHandle = () => (timeout = setTimeout(clearPopup, 1000));\n    \n        popup.addEventListener('mouseenter', popupEnterHandle);\n        popup.addEventListener('mouseleave', popupLeaveHandle);\n    \n        // event handler for events emitted by the nightingale/protvista components\n        const handler = event => {\n            if (!event.detail) return;\n            let bcrTarget, bcrPopup, bcrTrack;\n            switch (event.detail.eventtype) {\n            case 'mouseover':\n                if (!event.detail.feature.accession) return;\n    \n                clearTimeout(timeout);\n    \n                const IP_DB = dbMap.get(event.detail.feature.db);\n                const href = IP_DB &&\n                    `https://www.ebi.ac.uk/interpro/entry/${IP_DB}/${event.detail.feature.accession}/`;\n                if (portal && IP_DB) portal.src = href;\n                link.textContent = `${event.detail.feature.db} - ${event.detail.feature.accession}`;\n                link.href = href;\n                if (IP_DB) {\n                if (portal) portalContainer.style.display = 'block';\n                } else {\n                if (portal) {\n                    portalContainer.style.display = 'none';\n                    portal.removeAttribute('src');\n                    portal.src = null;\n                }\n                link.removeAttribute('href');\n                }\n    \n                bcrTarget = event.detail.target.getBoundingClientRect();\n                bcrPopup = popup.getBoundingClientRect();\n                bcrTrack = event.detail.target\n                    .closest('protvista-interpro-track')\n                    .getBoundingClientRect();\n    \n                // x\n                const translateX = Math.min(\n                Math.max(\n                    // center the popup in the middle of the region\n                    bcrTarget.left + bcrTarget.width / 2 - bcrPopup.width / 2,\n                    // make sure the popup doesn't overflow to the left\n                    bcrTrack.left,\n                ),\n                // make sure the popup doesn't overflow to the right\n                bcrTrack.right - bcrPopup.width,\n                );\n                // y\n                const translateY = window.scrollY + bcrTarget.top - bcrPopup.height;\n    \n                popup.style.visibility = 'visible';\n                popup.style.transform = `translate(${translateX}px, ${translateY}px)`;\n    \n                displayed = true;\n                break;\n            case 'mouseout':\n                if (!displayed) return; // no need to do DOM operation, it's already invisible\n                timeout = setTimeout(clearPopup, 1000);\n    \n                displayed = false;\n                break;\n            default:\n            // ignore\n            }\n        };\n        document.body.appendChild(popup);\n        window.addEventListener('change', handler);\n        // clean-up logic\n        return () => {\n            window.removeEventListener('change', handler);\n            popup.removeEventListener('mouseenter', popupEnterHandle);\n            popup.removeEventListener('mouseleave', popupLeaveHandle);\n            document.body.removeChild(popup);\n        };\n    }, []);\n  \n    // Render the functional analysis with a brief introduction\n    // Here chainReferences contains the \"analysis\" data\n    if (chainReferences && chainReferences.length > 0) {\n        return (\n        <>\n            {/* Brief introduction */}\n            <Typography variant=\"h5\">Protein functional analysis</Typography>\n            <br />\n            <Typography variant=\"subtitle2\">\n            <strong>{chainReferences.length}</strong> chains were analysed.\n            </Typography>\n            <ul className={style['chain-analysis-list']}>\n            {/* Here, main data is displayed */}\n            {chainReferences.map(chainReference => {\n                const chainLetter = chainReference.name;\n                // Get some data using the topology manager when it is available\n                let name = '';\n                let firstResidueNumber = 1;\n                if (topologyManager) {\n                    const chain = topologyManager.getChainByName(chainLetter);\n                    name = chain.metadataChainName;\n                    firstResidueNumber = chain.residueNumbers[0];\n                }\n                return (\n                <li key={chainLetter}>\n                    <Typography variant=\"h6\">\n                    <FontAwesomeIcon icon={faAngleRight} />\n                    {` Chain ${chainLetter} ${name ? '(' + name + ')' : ''}`}\n                    </Typography>\n                    {/* the main visual asset */}\n                    <ChainAnalysis\n                        data={chainReference}\n                        firstResidueNumber={firstResidueNumber}\n                    />\n                </li>\n                );\n            })}\n            </ul>\n            <Typography variant=\"body2\">\n            Data generated using{' '}\n            <a\n                href=\"https://www.ebi.ac.uk/\"\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n            >\n                EBI\n            </a>\n            's{' '}\n            <a\n                href=\"https://www.ebi.ac.uk/interpro/about/interproscan/\"\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n            >\n                InterProScan service\n            </a>{' '}\n            and visualised using the{' '}\n            <a\n                href=\"https://ebi-webcomponents.github.io/nightingale/\"\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n            >\n                Nightingale visualisation library\n            </a>\n            .\n            </Typography>\n        </>\n        );\n    } else return 'No chain analyses available';\n});\n\nexport default ChainsAnalysis;","// extracted by mini-css-extract-plugin\nexport default {\"entries\":\"style_entries__T4f7r\",\"has-signatures\":\"style_has-signatures__4CW-U\",\"label\":\"style_label__UT0BE\"};","// extracted by mini-css-extract-plugin\nexport default {\"popup\":\"style_popup__-6ZHj\",\"portal-container\":\"style_portal-container__B70Nq\",\"chain-analysis-list\":\"style_chain-analysis-list__TzUHq\",\"trajectory-metadata-title\":\"style_trajectory-metadata-title__7GlAT\"};"],"names":["importer","as","namespace","_namespace","customElement","default","is","Error","alreadyExisting","window","customElements","get","define","protvistaLoadedResolve","protvistaLoaded","Promise","resolve","InterproTrack","memo","_ref","match","length","shape","classAttr","protvistaRef","useRef","useEffect","async","current","data","contributors","signatures","fillComponentWithData","_jsx","ref","class","_ref2","firstResidueNumber","chain","name","loadCustomElement","all","importProtVista","sequence","sequenceLength","interproscanData","interproscan","matches","results","processedMatches","processIPScanResults","displayEnd","shiftedSequence","repeat","_jsxs","attributes","children","rulerstart","displaystart","displayend","className","style","entries","height","scale","map","index","label","accession","undefined","string","hash","i","charCodeAt","hashFromString","Math","abs","startAccessorDefault","interval","value","Number","isFinite","endAccessorDefault","intervals","startAccessor","arguments","endAccessor","sortedIntervals","Array","from","sort","a","b","output","push","max","processLocations","locations","location","fragments","shift","forEach","fragment","start","end","shiftLocations","processed","signature","entry","existing","find","m","db","color","colorFromString","mergeIntervals","signatureLibraryRelease","library","replace","dbMap","Map","topology","topologyManager","chainReferences","useContext","ProjectCtx","popup","document","createElement","portal","portalContainer","appendChild","addEventListener","bcr","getBoundingClientRect","animate","transform","left","top","duration","reducedMotion","easing","fill","onfinish","href","src","link","rel","target","timeout","displayed","clearPopup","textContent","display","removeAttribute","visibility","popupEnterHandle","clearTimeout","popupLeaveHandle","setTimeout","handler","event","detail","bcrTarget","bcrPopup","bcrTrack","eventtype","feature","IP_DB","closest","translateX","min","width","right","translateY","scrollY","body","removeEventListener","removeChild","_Fragment","Typography","variant","chainReference","chainLetter","getChainByName","metadataChainName","residueNumbers","FontAwesomeIcon","icon","faAngleRight","ChainAnalysis"],"sourceRoot":""}