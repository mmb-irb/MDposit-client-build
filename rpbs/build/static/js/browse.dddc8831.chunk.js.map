{"version":3,"file":"static/js/browse.dddc8831.chunk.js","mappings":"wJACA,QAA4B,yB,eCM5B,MAAMA,EAAY,CAAEC,QAAS,CAAC,EAAG,KAE5BC,EAAAA,EAAAA,OACHF,EAAUG,UAAY,CAAC,mBAAoB,kBAG7C,MAAMC,EAAoB,CACxBC,KAAM,OACNC,OAAQ,iCACRC,SAAU,KAgCZ,GA5BqBC,EAAAA,EAAAA,aAAW,CAAAC,EAAkCC,KAAS,IAA1C,kBAAEC,KAAsBC,GAAOH,EAC9D,MAAMI,GAAeC,EAAAA,EAAAA,QAAO,OAE5BC,EAAAA,EAAAA,kBAAgB,KACd,MAAMC,EAAOH,EAAaI,SAAWJ,EAAaI,QAAQC,kBAC1D,IAAMF,IAAQA,EAAKG,QAAU,OAE7B,MAAMC,EAAQC,MAAMC,KAClBC,SAASC,iBAAiB,iBAC1BC,WAAUC,GAAWV,IAASU,IAE1BC,EAAYX,EAAKG,QAAQnB,EAAW,IACrCI,EACHwB,MAAe,IAARR,IAGT,MAAO,IAAMO,EAAUE,QAAQ,GAC9B,IAEH,MAAMC,EAAYnB,EAAoB,UAAYoB,EAAAA,EAElD,OACEC,EAAAA,EAAAA,KAAA,OAAKtB,IAAKG,EAAcoB,UAAWC,EAAgBC,UACjDH,EAAAA,EAAAA,KAACF,EAAS,CAACM,UAAU,aAAcxB,EAAOF,IAAKA,KAC3C,G,wTC3CV,QAAgC,6B,eCMhC,MAAM2B,EAAS,MAETC,GAAcC,EAAAA,EAAAA,IAClBC,GACE,IAAIC,OACF,IAAID,EACDE,WACAC,OACAC,MAAMP,GAENQ,IAAIC,EAAAA,GACJC,KAAK,QACR,OAUAC,EAAYC,EAAAA,MAAWxC,IAA8B,IAA7B,UAAE+B,EAAS,SAAEL,GAAU1B,EAEnD,GAAIY,MAAM6B,QAAQf,GAChB,OAAOA,EAASU,KAAI,CAACM,EAAOC,KAC1BpB,EAAAA,EAAAA,KAACgB,EAAS,CAACR,UAAWA,EAAUL,SAC7BgB,GADmCC,KAQ1C,IACGZ,IACAL,GACqB,kBAAbA,IAAyBkB,OAAOC,SAASnB,GAElD,OAAOA,GAAY,KAIrB,MAAMoB,EAAKjB,EAAYE,GAEvB,OACER,EAAAA,EAAAA,KAAA,QAAMC,UAAWC,EAAoBC,SAClCA,EACEO,WACAE,MAAMW,GACNC,OAAOC,SACPZ,KAAI,CAACa,EAAOtC,IACX6B,EAAAA,cAIEM,EAAGI,KAAKD,GAAS,OAAS,OAC1B,CAAEE,IAAKxC,GACPsC,MAGD,IAIX,I,qCCvEA,QAA6B,0BAA7B,EAAyE,+BAAzE,EAAqH,0BAArH,EAA+J,6BAA/J,EAAqM,sBAArM,EAA6O,+BAA7O,EAAwR,yBAAxR,EAAmU,+BAAnU,EAA6W,wBAA7W,EAAqd,qBAArd,EAAuf,0BAAvf,EAA4hB,wBAA5hB,EAAikB,0B,8FCAjkB,SAA4B,yBAA5B,GAAsE,8BAAtE,GAAwH,iCCiBlHG,GAAa,CACjB,aAAc,0BACdC,gBACE9B,EAAAA,EAAAA,KAAC+B,EAAAA,EAAc,CAACC,SAAS,QAAO7B,UAC9BH,EAAAA,EAAAA,KAACiC,GAAAA,EAAe,CACdC,KAAMC,GAAAA,IACNC,KAAK,KACLnC,UAAWC,OAIjBmC,QAAS,CACPC,MAAOpC,KA4BLqC,IAA0BC,EAAAA,EAAAA,IAvBFC,CAACC,EAAUC,EAASC,KAChD,MAAM,OAAEC,KAAWC,IAAqBC,EAAAA,EAAAA,OAAML,EAASG,OAAQ,CAC7DG,mBAAmB,IAIfC,EAAgBxB,QAAQoB,KAAYpB,QAAQmB,GAC9CA,IAAOE,EAAiBD,OAASD,GACjCC,IAAWD,IAGfE,EAAiBI,UAAOC,EAExBR,EAAQ,IACHD,EACHG,QAAQO,EAAAA,EAAAA,WAAUN,GAClBO,QAASJ,IACT,GArCmB,KA+EvB,GAjCeK,KAEb,MAAMZ,GAAWa,EAAAA,EAAAA,MACXZ,GAAUa,EAAAA,EAAAA,OAGTZ,EAAOa,IAAYC,EAAAA,EAAAA,WACxBX,EAAAA,EAAAA,OAAML,EAASG,OAAQ,CAAEG,mBAAmB,IAAQH,SAGtDc,EAAAA,EAAAA,YAAU,IAAMpB,GAAwB1C,QAAQ,IAEhD,MAAM+D,GAAeC,EAAAA,EAAAA,cACnBpF,IAA4B,IAAzBqF,QAAQ,MAAElB,IAASnE,EACpBgF,EAASb,GACTL,GAAwBG,EAAUC,EAASC,EAAM,GAEnD,CAACF,EAAUC,IAEPoB,EAAMC,GAAAA,EAAKC,MAAKF,GAAkB,YAAXA,EAAIG,KAEjC,OACElE,EAAAA,EAAAA,KAACmE,EAAAA,EAAS,CACRC,MAAOL,EAAIM,KACXzB,MAAOA,GAAS,GAChB0B,SAAUV,EACV3D,UAAWC,GACXqE,WAAY1C,GACZ2C,YAAaC,EAAAA,GAAYC,eACzB,ECtBAC,GAAM,cAGNC,GAAqB,CAAC,EAAG,GAAI,GAAI,IACjCC,GAAsB,CAAET,MAAO,iBAC/BU,GAAsB,CAAEV,MAAO,aAI/BW,GAAY,CAChB9G,QAAS,CAAC,EAAG,KAKVC,EAAAA,EAAAA,OACH6G,GAAU5G,UAAY,CAAC,mBAAoB,kBAG7C,MAAM6G,GAAMvG,IAAoD,IAAnD,YAAEwG,EAAW,UAAEzE,EAAS,MAAEpB,EAAK,WAAE8F,GAAYzG,EAExD,MAAM0G,EAAU,IAAIC,EAAAA,EAAQH,IAEtB,WACJI,EAAU,UACVC,EAAS,UACTC,EAAS,QACTC,EAAO,SACPC,EAAQ,QACRC,EAAO,WACPC,GACER,EAEEzG,GAAMI,EAAAA,EAAAA,QAAO,MAkBnB,OAfAC,EAAAA,EAAAA,kBAAgB,KACd,IAAML,EAAIO,UAAWP,EAAIO,QAAQE,QAAU,OAE3C,MAAMQ,EAAYjB,EAAIO,QAAQE,QAAQ4F,GAAW,CAC/C1G,KAAM,OACNC,OAAQ,0CACRC,SAAU,IAEVqB,MAAO,IAAc,GAARR,IAGf,MAAO,IAAMO,EAAUE,QAAQ,GAC9B,CAACT,IAGA+F,EAAQS,OACVC,EAAAA,EAAAA,MAACC,EAAAA,EAAQ,CAACpH,IAAKA,EAAKuB,UAAWC,EAAuBC,SAAA,EAEpDH,EAAAA,EAAAA,KAAC+F,EAAAA,EAAS,CAAC9F,UAAWC,EAAaC,SAAC,qBAEpC0F,EAAAA,EAAAA,MAACE,EAAAA,EAAS,CAAC9F,UAAWC,EAAaC,SAAA,CAAC,IAAEgF,EAAQS,MAAM,QAEpD5F,EAAAA,EAAAA,KAAC+F,EAAAA,EAAS,CAAC9F,UAAWC,EAAaC,SAAC,SAEpCH,EAAAA,EAAAA,KAAC+F,EAAAA,EAAS,CAAC9F,UAAWC,EAAaC,SAAC,YAOtC0F,EAAAA,EAAAA,MAACC,EAAAA,EAAQ,CACPpH,IAAKA,EACLuB,UAAW+F,IAAG,CAAE,CAAC9F,IAA0BqF,IAAapF,SAAA,EAGxD0F,EAAAA,EAAAA,MAACE,EAAAA,EAAS,CAAC9F,UAAWC,EAAaC,SAAA,EACjCH,EAAAA,EAAAA,KAACiG,EAAAA,GAAI,CACHC,GAAI,CACFC,SAAU,OAAOb,GAAaD,aAE9Be,MAAO,CAAEnB,YAAaE,IACtBhF,UAEF0F,EAAAA,EAAAA,MAAC7E,EAAS,CAACR,UAAWA,EAAUL,SAAA,CAC7BmF,GAAaD,GACZE,IAAavF,EAAAA,EAAAA,KAAA,OAAAG,SAAK,yBAGvBuF,EAAU,IAAK1F,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAYC,SAAE,GAAGuF,cAGnD1F,EAAAA,EAAAA,KAAC+F,EAAAA,EAAS,CAAC9F,UAAWC,EAAaC,UACjCH,EAAAA,EAAAA,KAACgB,EAAS,CAACR,UAAWA,EAAUL,SAC7BsF,GAAYA,EAASY,KAClBZ,EAASY,KACTb,GAAWA,EAAQc,SACnBd,EAAQc,SA/FX,qBAoGLtG,EAAAA,EAAAA,KAAC+F,EAAAA,EAAS,CAAC9F,UAAWC,EAAaC,UACjCH,EAAAA,EAAAA,KAACuG,EAAAA,EAAO,CACNC,IAAKtB,EACLuB,MAAM,MACNC,OAAO,MACPC,QAAQ,OACRC,IAAK,uBAIT5G,EAAAA,EAAAA,KAAC+F,EAAAA,EAAS,CAAC9F,UAAWC,EAAaC,SAChC0G,OAAOC,QAAQnB,GAEbnE,QAAOuF,IAAA,IAAEC,EAAWC,GAAUF,EAAA,OAAKE,CAAS,IAE5CpG,KAAIqG,IAAA,IAAEF,EAAWC,GAAUC,EAAA,OAC1BlH,EAAAA,EAAAA,KAACmH,EAAAA,EAAI,CAEHC,WAAS,EACTnH,UAAWC,EACXE,UAAW6F,EAAAA,GACXC,GAAI,CACFC,SAAU,OAAOb,GAAaD,KAAc2B,IAE5CZ,MAAO,CAAEnB,YAAaE,IAExBkC,MAAOC,EAAAA,GAAWC,IAAIP,IAAcA,EACpCQ,QAAQ,YAVHR,EAWL,QAGC,EAkOf,GA9NeS,KAEb,MAAM/E,GAAWa,EAAAA,EAAAA,MACXZ,GAAUa,EAAAA,EAAAA,MAMVkE,EAAUC,mBAAmBjF,EAASG,QACtCA,GAASE,EAAAA,EAAAA,OAAM2E,EAAS,CAC5B1E,mBAAmB,EACnB4E,QAASC,GAAKA,KAIRC,EAAgBC,IAAsBrE,EAAAA,EAAAA,UAASb,EAAOmF,QAAUrD,IAGlEf,GAAeC,EAAAA,EAAAA,cACnBoE,IAA4B,IAAzBnE,QAAQ,MAAElB,IAASqF,EAEpBtF,EAAQ,IACHD,EACHG,QAAQO,EAAAA,EAAAA,WAAU,CAChBP,OAAQA,EAAOA,OACfqF,MAAOrF,EAAOqF,MAGdF,OAAQpF,GAASA,IAAU+B,GAAM/B,OAAQO,MAI7C4E,EAAkBnF,EAAM,GACvB,CAACF,EAAUG,EAAQkF,IAIlBI,EAAe1D,EAAAA,GAAY0D,aAE3BC,EAAuBN,GAAkBA,IAAmBnD,IAAO,GAAGwD,MAAiBL,IAGvFO,GAAejF,EAAAA,EAAAA,WAAU,CAC7BP,OAAQA,EAAOA,OACfqF,MAAOrF,EAAOqF,MACdxJ,IAAKmE,EAAOnE,IACZwE,KAAML,EAAOK,MAxLI,EAyLjBoF,MAAOzF,EAAOyF,OAxLI,GAyLlB9G,OAAQ4G,KAIVzE,EAAAA,EAAAA,YAAU,KACR4E,OAAOC,SAAS,EAAG,EAAE,GACpB,CAAC3F,EAAOK,OAIX,MAAMuF,GAAkB3J,EAAAA,EAAAA,QAAO,MAGzB4J,EAAaP,EAAe,GAAGQ,EAAAA,yBAAyCR,IAAiB,MACvFS,QAASC,EAAgBjD,MAAOkD,IAAiBC,EAAAA,EAAAA,GAAOL,GAI1DM,GAAmBC,EAAAA,EAAAA,UAAQ,KAC/B,IAAIC,EAAe,GAGnB,OAFIL,IACFK,EAAerC,OAAOsC,KAAKN,EAAeV,IAAe3G,QAAOI,GAAe,SAARA,KAClE,CAAE+C,MAAQuE,EAAc,GAC9B,CAACL,IAGEO,EAAW,GAAGT,EAAAA,MAAsBN,KAClC1B,QAAS0C,EAAcT,QAASU,EAAc1D,MAAO2D,IAAeR,EAAAA,EAAAA,GAAOK,GAInF,GAAIC,IAAiBZ,EAAgBxJ,QAAS,OAAOe,EAAAA,EAAAA,KAACwJ,EAAAA,EAAO,IAI7D,GAAID,EAAY,OAAOA,EAAW7I,WAClC,GAAIoI,EAAc,OAAOA,EAAapI,WAMtC,IAAI+I,EACAC,EAAa,EACbJ,GACFG,EAAUH,EAAaK,SACvBD,EAAaJ,EAAaM,cAC1BnB,EAAgBxJ,QAAUqK,GACjBb,EAAgBxJ,SACzBwK,EAAUhB,EAAgBxJ,QAAQ0K,SAClCD,EAAajB,EAAgBxJ,QAAQ2K,eAChCH,EAAU,GAGjB,MAAMI,EAAkBJ,EAAQ5I,KAC9BsE,GAAW,GAAGwD,EAAAA,MAAsBxD,EAAQE,oBAAoByE,EAAAA,OAIlE,OACE9J,EAAAA,EAAAA,KAACD,EAAAA,EAAI,CAAAI,UACH0F,EAAAA,EAAAA,MAACkE,EAAAA,EAAW,CAAC9J,UAAWC,EAAgBC,SAAA,EACtC0F,EAAAA,EAAAA,MAAA,OAAK5F,UAAWC,EAAiBC,SAAA,EAC/BH,EAAAA,EAAAA,KAACsD,GAAM,IACN6E,IAAgBtC,EAAAA,EAAAA,MAACmE,EAAAA,EAAW,CAAC/J,UAAWC,EAAeC,SAAA,EACtDH,EAAAA,EAAAA,KAACiK,EAAAA,EAAU,CAAA9J,SAAEsE,EAAAA,GAAYyF,gBACzBlK,EAAAA,EAAAA,KAACmK,EAAAA,EAAM,CACL9C,MAAO5C,EAAAA,GAAYyF,aACnBtH,MAAOkF,IAAmBnD,GAAMmD,EAAiB,GACjDxD,SAAUV,EACV3D,UAAWC,EAAiBC,SAE3B6I,EAAiBnI,KAAI,CAAC+B,EAAOxB,KAC5BpB,EAAAA,EAAAA,KAACoK,EAAAA,EAAQ,CAASxH,MAAOA,EAAMzC,SAC5BsE,EAAAA,GAAY4F,iBAAiBzH,IAAUA,GAD3BxB,aAUrBiI,GAAiBC,EAMf,IALFtJ,EAAAA,EAAAA,KAACD,EAAAA,EAAI,CAACE,UAAWC,EAAyBC,UACxCH,EAAAA,EAAAA,KAACsK,EAAAA,EAAU,CAAC9C,QAAQ,KAAKvH,UAAWC,EAAyBC,SAAC,6BAKlE0F,EAAAA,EAAAA,MAAC0E,EAAAA,EAAK,CAAApK,SAAA,EAGJH,EAAAA,EAAAA,KAACwK,EAAAA,EAAS,CAACvK,UAAWC,EAAoBC,UACxC0F,EAAAA,EAAAA,MAACC,EAAAA,EAAQ,CAAA3F,SAAA,EACPH,EAAAA,EAAAA,KAAC+F,EAAAA,EAAS,CAAC9F,UAAWC,EAAaC,SAAC,eACpCH,EAAAA,EAAAA,KAAC+F,EAAAA,EAAS,CAAC9F,UAAWC,EAAaC,SAAC,UACpCH,EAAAA,EAAAA,KAAC+F,EAAAA,EAAS,CAAC9F,UAAWC,EAAaC,SAAC,aACpCH,EAAAA,EAAAA,KAAC+F,EAAAA,EAAS,CAAC9F,UAAWC,EAAaC,SAAC,mBAKxCH,EAAAA,EAAAA,KAACyK,EAAAA,EAAS,CACRxK,UAAWqJ,EACPtD,IAAG9F,GACH8F,IAAG9F,EAAqBA,GAC3BC,SAGAsJ,EAAQ5I,KAAI,CAACsE,EAAS/F,KACrBY,EAAAA,EAAAA,KAACgF,GACC,CACAC,YAAaE,EACb3E,UAAWqC,EAAOA,OAClBzD,MAAOA,EACP8F,WAAY2E,EAAgBzK,IACvBA,QAIXY,EAAAA,EAAAA,KAAC0K,EAAAA,EAAW,CAAAvK,UACVH,EAAAA,EAAAA,KAAC8F,EAAAA,EAAQ,CAAA3F,UAEPH,EAAAA,EAAAA,KAAC2K,EAAAA,EAEC,CACA/F,mBAAoBA,GACpBgG,QAAS,EACTC,MAAOnB,EACPoB,aAAcjI,EAAOyF,OA3Tf,GA4TNpF,OAAQL,EAAOK,MA7TV,GA6TkC,EACvC6H,aAAcA,CAACC,EAAG9H,KAEhBP,EAAQ,IACHD,EAEHG,QAAQO,EAAAA,EAAAA,WAAU,CAChBP,OAAQA,EAAOA,OACfqF,MAAOrF,EAAOqF,MACdF,OAAQnF,EAAOmF,OACf9E,KAAMA,EAAO,IAvUd,OAuUmCC,EAAYD,EAAO,EACrDoF,MACGzF,EAAOyF,OAxUV,MAwUoBzF,EAAOyF,OAEpBzF,EAAOyF,WADRnF,KAGR,EAEJ8H,oBAAqBC,IAA4B,IAAzBpH,QAAQ,MAAElB,IAASsI,EAEzCvI,EAAQ,IACHD,EAEHG,QAAQO,EAAAA,EAAAA,WAAU,CAChBP,OAAQA,EAAOA,OACfqF,MAAOrF,EAAOqF,MACdF,OAAQnF,EAAOmF,OACfM,MAvVA,MAuVQ1F,OAA0BO,EAAYP,KAEhD,EAEJiC,oBAAqBA,GACrBC,oBAAqBA,gBAM1B,C","sources":["webpack://mdposit/./src/components/animated-card/style.module.css?d4d9","components/animated-card/index.js","webpack://mdposit/./src/components/highlight/style.module.css?2fb6","components/highlight/index.js","webpack://mdposit/./src/pages/browse/style.module.css?1eb9","webpack://mdposit/./src/pages/browse/search/style.module.css?d5c5","pages/browse/search/index.js","pages/browse/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"style_container__M9GCG\"};","import React, { useLayoutEffect, useRef, forwardRef } from 'react';\nimport { Card } from '@mui/material';\n\nimport reducedMotion from '../../utils/reduced-motion';\n\nimport style from './style.module.css';\n\nconst KEYFRAMES = { opacity: [0, 1] };\n\nif (!reducedMotion()) {\n  KEYFRAMES.transform = ['translateY(50px)', 'translateY(0)'];\n}\n\nconst ANIMATION_OPTIONS = {\n  fill: 'both',\n  easing: 'cubic-bezier(0, .99, .56, 1.1)',\n  duration: 500,\n};\n\n// Make the card appear and slide softly from down to up when the page is loaded\nconst AnimatedCard = forwardRef(({ overrideComponent, ...props }, ref) => {\n  const containerRef = useRef(null);\n\n  useLayoutEffect(() => {\n    const node = containerRef.current && containerRef.current.firstElementChild;\n    if (!(node && node.animate)) return;\n\n    const index = Array.from(\n      document.querySelectorAll('main section'),\n    ).findIndex(section => node === section);\n\n    const animation = node.animate(KEYFRAMES, {\n      ...ANIMATION_OPTIONS,\n      delay: index * 150,\n    });\n\n    return () => animation.cancel();\n  }, []);\n\n  const Component = overrideComponent ? 'section' : Card;\n\n  return (\n    <div ref={containerRef} className={style.container}>\n      <Component component=\"section\" {...props} ref={ref} />\n    </div>\n  );\n});\n\nexport default AnimatedCard;\n","// extracted by mini-css-extract-plugin\nexport default {\"highlightable\":\"style_highlightable__biB77\"};","import React from 'react';\nimport { escapeRegExp, memoize } from 'lodash-es';\n\nimport style from './style.module.css';\n\n// A fragment of text is converted to a specific RegExp format\n// The generated RexExp matches each word from the original text (highlight)\nconst spaces = /\\s+/;\n// Memoize saves the result of the function when the properties are the same\nconst getRegExFor = memoize(\n  highlight =>\n    new RegExp(\n      `(${highlight\n        .toString() // Convert it into a string\n        .trim() // Remove spaces\n        .split(spaces) // Split by a previously defined RegExp\n        // escapeRegExp returns a string which \"escapes\" RegExp special characters\n        .map(escapeRegExp) // It is equivalent to adding \"\\\" before each special character\n        .join('|')})`, // Finally, join all split fragments separated by \"|\"\n      'i', // \"i\" is a RegExp flag called \"ignore case\"\n    ),\n);\n\n// This function finds text fragments inside a text input which must be highlighted\n// This function expects to recieve 2 propierties: \"highlight\" and \"children\"\n// \"highlight\" is a text search provided by the user\n// \"children\" is all the text where the highlight must be serached\n// Propierties are delcared as <Highlight highlight={highlight}> children </Highlight>\n// This function returns multiple reacts elements which contain text chunks tagged to be marked or not\nconst Highlight = React.memo(({ highlight, children }) => {\n  // If multiple childs are requested then apply highlight to each of them separatedly\n  if (Array.isArray(children)) {\n    return children.map((child, i) => (\n      <Highlight highlight={highlight} key={i}>\n        {child}\n      </Highlight>\n    ));\n  }\n\n  // If there is no text to highlight or selected children, send the children back\n  // If children is not a string or a finite number, send the children back\n  if (\n    !highlight ||\n    !children ||\n    !(typeof children === 'string' || Number.isFinite(children))\n  ) {\n    return children || null; // If children is falsy (undefined or similar) returns null instead, which is supported by React\n  }\n\n  // Generates a RegExp pattern that matches each word from the provided text search (highlight)\n  const re = getRegExFor(highlight);\n\n  return (\n    <span className={style.highlightable}>\n      {children\n        .toString() // Convert it into a string\n        .split(re) // Split the children by the previously generated RegExp pattern\n        .filter(Boolean) // Save only non empty (\"\") strings\n        .map((chunk, index) =>\n          React.createElement(\n            // Create a new React element for each chunk\n            // Since children has been split by the \"re\" RegExp pattern, the half of the chunks should match this pattern\n            // Chunks wich match \"re\" are tagged as \"mark\" and chunk which do not match are tagged as \"span\"\n            re.test(chunk) ? 'mark' : 'span',\n            { key: index }, // Save the array index as \"key\" attribute of an object\n            chunk, // save the chunk itself\n          ),\n        )}\n    </span>\n  );\n});\n\nexport default Highlight;\n","// extracted by mini-css-extract-plugin\nexport default {\"table-body\":\"style_table-body__UaSDI\",\"invalid-results\":\"style_invalid-results__xfJgr\",\"table-head\":\"style_table-head__tmuYe\",\"not-published\":\"style_not-published__KTvNz\",\"center\":\"style_center__5C2Uk\",\"no-results-card\":\"style_no-results-card__hJ248\",\"minheight\":\"style_minheight__Qpr-9\",\"no-results-text\":\"style_no-results-text__PtOSj\",\"analysis\":\"style_analysis__M4Th0\",\"reduced-margin\":\"style_reduced-margin__XWbYA\",\"tab\":\"style_tab__4zoWO\",\"small\":\"style_small__QxCJm\",\"horizontal\":\"style_horizontal__f42Xi\",\"selector\":\"style_selector__XVrF1\",\"fillheight\":\"style_fillheight__1UWvV\"};","// extracted by mini-css-extract-plugin\nexport default {\"searchbar\":\"style_searchbar__L3fSk\",\"searchbar-icon\":\"style_searchbar-icon__o1zED\",\"searchbar-letters\":\"style_searchbar-letters__NY7xQ\"};","import React, { useState, useEffect, useCallback } from 'react';\nimport { parse, stringify } from 'qs';\nimport { debounce } from 'lodash-es';\n\nimport { InputAdornment, TextField } from '@mui/material';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\n\nimport { docs } from '../../help/documentation';\n\nimport style from './style.module.css';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { HOST_CONFIG } from '../../../utils/constants';\n\n// Half second delay (500 ms) to process changes in the search bar\nconst DEBOUNCE_DELAY = 500;\n\n// Define the non-changing props\nconst inputProps = {\n  'aria-label': 'Search projects by text',\n  startAdornment: (\n    <InputAdornment position=\"start\">\n      <FontAwesomeIcon\n        icon={faSearch}\n        size=\"2x\"\n        className={style['searchbar-icon']}\n      />\n    </InputAdornment>\n  ),\n  classes: {\n    input: style['searchbar-letters'],\n  },\n};\n\n// This function is never called directly, but it is called indirectly by calling \"debouncedUpdateLocation\"\nexport const updateLocation = (location, history, value) => {\n  const { search, ...nextSearchObject } = parse(location.search, {\n    ignoreQueryPrefix: true,\n  });\n  // If should replace it would be like a history.replace\n  // Otheriwse it would be like a history.push\n  const shouldReplace = Boolean(search) === Boolean(value);\n  if (value) nextSearchObject.search = value;\n  if (search === value) return;\n  // If this search is different to the previous search\n  // Reset page to the first page\n  nextSearchObject.page = undefined;\n  // Update history\n  history({\n    ...location,\n    search: stringify(nextSearchObject),\n    replace: shouldReplace,\n  });\n};\n\n// \"debounce\" is a method from the \"lodash\" library that invokes a function after a time delay\n// debounced functions are cancellable before the time delay has passed\n// debounced function, to avoid changing the URL too much while typing\nconst debouncedUpdateLocation = debounce(updateLocation, DEBOUNCE_DELAY);\n\n// This function is called each time that a letter is typed in the search bar\nconst Search = () => {\n  // Get the history and the location\n  const location = useLocation();\n  const history = useNavigate();\n  // Here, parse converts a query formatted search (e.g. \"?search=x\") in a string only with the text search (e.g. \"x\")\n  // Return the parsed searh text (value) and a function to change this value (SetValue)\n  const [value, setValue] = useState(\n    parse(location.search, { ignoreQueryPrefix: true }).search,\n  );\n  // Cancel the last debouncedUpdateLocation if it has not been executed yet because there is a new change\n  useEffect(() => debouncedUpdateLocation.cancel, []);\n  // Update the state and the query search in the URL with the new searched value\n  const handleChange = useCallback(\n    ({ target: { value } }) => {\n      setValue(value);\n      debouncedUpdateLocation(location, history, value);\n    },\n    [location, history],\n  );\n  const doc = docs.find(doc => doc.id === 'browser');\n\n  return (\n    <TextField\n      title={doc.text}\n      value={value || ''}\n      onChange={handleChange}\n      className={style.searchbar}\n      InputProps={inputProps}\n      placeholder={HOST_CONFIG.searchExample}\n    />\n  );\n};\n\nexport default Search;\n","// React logic\nimport React, {\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState\n} from 'react';\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\n\n// String managers\nimport { parse, stringify } from 'qs';\n\n// Classnames\nimport cn from 'classnames';\n\n// Visual assets\nimport {\n  CardContent,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TablePagination,\n  TableFooter,\n  Typography,\n  Chip,\n  Select,\n  MenuItem,\n  InputLabel,\n  FormControl\n} from '@mui/material';\n\nimport LazyImg from '../../components/lazy-img';\n\n// Additional components\nimport Card from '../../components/animated-card'; // The exceled parcels in which almost all features are based\nimport Highlight from '../../components/highlight'; // Used to underline text\nimport Loading from '../../components/loading'; // Displays an animated \"loading\" circle\n\n// API acces\nimport useAPI from '../../hooks/use-api';\n\n// Constants\nimport {\n  BASE_PATH_PROJECTS,\n  HOST_CONFIG,\n  NICE_NAMES,\n} from '../../utils/constants';\n\n// CSS styles\nimport style from './style.module.css';\n\n// It is used to check if the user has the reduced motion setting active\nimport reducedMotion from '../../utils/reduced-motion';\nimport { SCREENSHOT_FILENAME } from '../../utils/constants';\n// Project manager\nimport { Project } from '../../utils/project-manager';\n\n// The search bar\nimport Search from'./search';\n\nconst DEFAULT_PAGE = 1;\nconst DEFAULT_LIMIT = 10;\nconst na = 'Not available';\n// Placeholder for when there is no option selected\nconst all = 'All results';\n\n// Define non-changing props used by the table footer\nconst rowsPerPageOptions = [5, 10, 25, 50];\nconst backIconButtonProps = { title: 'Previous page' };\nconst nextIconButtonProps = { title: 'Next page' };\n\n// These keyframes are used for an animate()\n// An image opacity is iterated between 0 (invisible) and 1 (visible)\nconst keyframes = {\n  opacity: [0, 1],\n};\n\n// Same image vertical position is iterated between 0 and 50 pixels (It may have no effect)\n// This is only set when user has not activated the reduced motion option from the navigator\nif (!reducedMotion()) {\n  keyframes.transform = ['translateX(2.5%)', 'translateX(0)'];\n}\n\nconst Row = ({ projectData, highlight, index, previewUrl }) => {\n  // Parse the project data using the project manager\n  const project = new Project(projectData);\n  // Harvest data from the project object\n  const {\n    identifier,\n    accession,\n    published,\n    pdbInfo,\n    metadata,\n    mdCount,\n    directions\n  } = project;\n  // Declare a hook from a type called \"useRef\"\n  const ref = useRef(null);\n  // This type of hook is like an \"useEfect\" but it is runned after the layout is calculated and before it is painted\n  // useEffect here would re-render the whole page, thus creating \"load hesitation\" and a delay\n  useLayoutEffect(() => {\n    if (!(ref.current && ref.current.animate)) return;\n    // Animate the rows to move from right to left when they appear\n    const animation = ref.current.animate(keyframes, {\n      fill: 'both',\n      easing: 'cubic-bezier(0.175, 0.885, 0.32, 1.275)',\n      duration: 750,\n      // Set a delay which depends on the index to create a cascade effect\n      delay: 100 + index * 75,\n    });\n\n    return () => animation.cancel();\n  }, [index]);\n\n  // In case we retrieve an errored entry\n  if (project.error) return (\n    <TableRow ref={ref} className={style['not-published']}>\n      {/* accession */}\n      <TableCell className={style.center}> Errored entry </TableCell>\n      {/* name */}\n      <TableCell className={style.center}> {project.error} </TableCell>\n      {/* groups */}\n      <TableCell className={style.center}> - </TableCell>\n      {/* analyses */}\n      <TableCell className={style.center}> - </TableCell>\n    </TableRow>\n  );\n\n  // Returns a table with multiple rows\n  // The 3 first rows: accession, PDB accession and name are searchable. Search text is highlighted when found\n  return (\n    <TableRow\n      ref={ref} // \"ref\" is a method from TableRow and many other rendered elements\n      className={cn({ [style['not-published']]: !published })}\n    >\n      {/* accession */}\n      <TableCell className={style.center}>\n        <Link\n          to={{\n            pathname: `/id/${accession || identifier}/overview`,\n            // We pass the selected project data so there is no need to query it again\n            state: { projectData: project },\n          }}\n        >\n          <Highlight highlight={highlight}>\n            {accession || identifier}\n            {!published && <div>(not published)</div>}\n          </Highlight>\n        </Link>\n        {mdCount > 1 && <div className={style.small}>{`${mdCount} MDs`}</div>}\n      </TableCell>\n      {/* name */}\n      <TableCell className={style.center}>\n        <Highlight highlight={highlight}>\n          {metadata && metadata.NAME\n            ? metadata.NAME\n            : pdbInfo && pdbInfo.compound\n            ? pdbInfo.compound\n            : na}\n        </Highlight>\n      </TableCell>\n      {/* preview */}\n      <TableCell className={style.center}>\n        <LazyImg\n          src={previewUrl}\n          width=\"110\"\n          height=\"110\"\n          loading=\"lazy\"\n          alt={`Project preview`}\n        />\n      </TableCell>\n      {/* analyses */}\n      <TableCell className={style.center}>\n        {Object.entries(directions)\n          // Display only available directions\n          .filter(([direction, available]) => available)\n          // For each direction create a clickable button which links to the direction route\n          .map(([direction, available]) => (\n            <Chip\n              key={direction}\n              clickable\n              className={style.analysis}\n              component={Link}\n              to={{\n                pathname: `/id/${accession || identifier}/${direction}`,\n                // We pass the selected project data so there is no need to query it again\n                state: { projectData: project },\n              }}\n              label={NICE_NAMES.get(direction) || direction}\n              variant=\"outlined\"\n            />\n          ))}\n      </TableCell>\n    </TableRow>\n  );\n};\n\nconst Browse = () => {\n  // Get the location and the history\n  const location = useLocation();\n  const history = useNavigate();\n  // Convert the URL string into an object\n  // This \"parse\" comes from the \"qs\" library\n  // WARNING: The default \"parse\" decoding behaviour has a strong conflict between '+' and blank space character\n  // This workaround first decodes and then parses without decoding\n  // The 'decoder' option is necessary for not decoding\n  const decoded = decodeURIComponent(location.search);\n  const search = parse(decoded, {\n    ignoreQueryPrefix: true,\n    decoder: c => c,\n  });\n\n  // State of the selected option\n  const [ selectedOption, setSelectedOption ] = useState(search.option || all);\n\n  // Handle when user clicks on the option selector\n  const handleChange = useCallback(\n    ({ target: { value } }) => {\n      // Update the history (which does not rerender the page)\n      history({\n        ...location,\n        search: stringify({\n          search: search.search,\n          query: search.query,\n          // Do not keep the page\n          // Thus if option is changed then the page is reset\n          option: value && value !== all ? value : undefined,\n        }),\n      });\n      // Update the actual value thus rerendering the page\n      setSelectedOption(value);\n    }, [location, search, setSelectedOption]\n  );\n  \n  // Get the options field from the host configuration\n  const optionsField = HOST_CONFIG.optionsField;\n  // Set the selected option filter\n  const selectedOptionFilter = selectedOption && selectedOption !== all && `${optionsField}+*${selectedOption}`;\n\n  // Convert the specified object back to a single encoded string\n  const searchString = stringify({\n    search: search.search,\n    query: search.query,\n    ref: search.ref,\n    page: search.page || DEFAULT_PAGE,\n    limit: search.limit || DEFAULT_LIMIT,\n    filter: selectedOptionFilter\n  });\n\n  // Scroll up when the page is changed\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [search.page]);\n\n  // Save the previous query payload\n  // It is rendered in low opacity when the new query payload is empty\n  const previousPayload = useRef(null);\n\n  // Options data from the API\n  const optionsUrl = optionsField ? `${BASE_PATH_PROJECTS}/options?projection=${optionsField}` : null;\n  const { payload: optionsPayload, error: optionsError } = useAPI(optionsUrl);\n\n  // Add the all flag at the begining as default value\n  // Remove null values since they are not queryable\n  const availableOptions = useMemo(() => {\n    let actualOptons = [];\n    if (optionsPayload)\n      actualOptons = Object.keys(optionsPayload[optionsField]).filter(key => key !== 'null');\n    return [ all, ...actualOptons ];\n  }, [optionsPayload]);\n\n  // Projects data from the API\n  const queryUrl = `${BASE_PATH_PROJECTS}?${searchString}`;\n  const { loading: queryLoading, payload: queryPayload, error: queryError } = useAPI(queryUrl);\n\n  // While loading\n  // Code above is runned multiple times (around 5) each time the browser is loaded\n  if (queryLoading && !previousPayload.current) return <Loading />;\n\n  // When error\n  // This usually happens when the API does not work properly\n  if (queryError) return queryError.toString();\n  if (optionsError) return optionsError.toString();\n\n  // Download project screenshots\n  // First set the URLs for the API\n  \n  // Define the results for the final render since it won't support 'null's\n  let results;\n  let matchCount = 0;\n  if (queryPayload) {\n    results = queryPayload.projects;\n    matchCount = queryPayload.filteredCount;\n    previousPayload.current = queryPayload;\n  } else if (previousPayload.current) {\n    results = previousPayload.current.projects;\n    matchCount = previousPayload.current.filteredCount;\n  } else results = [];\n\n  // Set the screenshot URLs for the API\n  const screenshotsUrls = results.map(\n    project => `${BASE_PATH_PROJECTS}/${project.identifier}/files/${SCREENSHOT_FILENAME}`\n  );\n\n  // When success\n  return (\n    <Card>\n      <CardContent className={style.minheight}>\n        <div className={style.horizontal}>\n          <Search/>\n          {optionsField && <FormControl className={style.selector}>\n            <InputLabel>{HOST_CONFIG.optionsLabel}</InputLabel>\n            <Select\n              label={HOST_CONFIG.optionsLabel}\n              value={selectedOption !== all ? selectedOption : ''}\n              onChange={handleChange}\n              className={style.fillheight}\n            >\n              {availableOptions.map((value, i) => (\n                <MenuItem key={i} value={value}>\n                  {HOST_CONFIG.optionsNiceNames[value] || value}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n            \n          }          \n        </div>\n        {/* Render a 'no results' card when there are no results for the last search */}\n        {!queryLoading && !queryPayload ? (\n          <Card className={style['no-results-card']}>\n            <Typography variant=\"h5\" className={style['no-results-text']}>\n              No results were found\n            </Typography>\n          </Card>\n        ) : []}\n        <Table>\n          {/*className={cn({ [style['invalid-results']]: !queryPayload })} */}\n          {/* Table head with the names of each colum */}\n          <TableHead className={style['table-head']}>\n            <TableRow>\n              <TableCell className={style.center}>accession</TableCell>\n              <TableCell className={style.center}>name</TableCell>\n              <TableCell className={style.center}>preview</TableCell>\n              <TableCell className={style.center}>analyses</TableCell>\n            </TableRow>\n          </TableHead>\n          {/* Table body with the content, which is defined above in the Row constant */}\n          {/* When the search has no results the table gets an opacity of 0.25 */}\n          <TableBody\n            className={queryPayload\n              ? cn(style['table-body'])\n              : cn(style['table-body'], style['invalid-results'])\n            }\n          >\n            {/* Create a row for each project in the query payload*/}\n            {results.map((project, index) => (\n              <Row\n                // Load the propierties (inputs) that the class \"Row\" is expecting\n                projectData={project} // Load identifier, accession, published, pdbInfo and analyses\n                highlight={search.search} // Load the highlight\n                index={index} // Load the index\n                previewUrl={screenshotsUrls[index]}\n                key={index} // Add a key for react to do not complain\n              />\n            ))}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              {/* Table footer used to change the page to see more results */}\n              <TablePagination\n                // IMPORTANT: Pagination is controled through the 'history', which may be updated from 'search'\n                // Many of the following variables are methods from TablePagination (They are tagged as MTP). https://material-ui.com/api/table-pagination/\n                rowsPerPageOptions={rowsPerPageOptions} // (MTP) Optional numbers of rows displayed in each page. It can be modified by the user.\n                colSpan={6} // Set the anchor of columns which is taken as a reference for the horizontal position of the footer\n                count={matchCount} // (MTP) Total number of rows\n                rowsPerPage={+search.limit || DEFAULT_LIMIT} // (MTP) The actual number of rows displayed\n                page={(+search.page || DEFAULT_PAGE) - 1} // (MTP) The actual page\n                onPageChange={(_, page) => {\n                  // (MTP) When the page is changed\n                  history({\n                    ...location, // Load all location variables: hast, pathname, search and state\n                    // Convert into a single encoded string all parameters listed below\n                    search: stringify({\n                      search: search.search,\n                      query: search.query,\n                      option: search.option,\n                      page: page + 1 === DEFAULT_PAGE ? undefined : page + 1,\n                      limit:\n                        !search.limit || +search.limit === DEFAULT_LIMIT\n                          ? undefined\n                          : +search.limit,\n                    }),\n                  });\n                }}\n                onRowsPerPageChange={({ target: { value } }) => {\n                  // (MTP) When the rowsPerPage is modified by the user\n                  history({\n                    ...location, // Load all location variables: hast, pathname, search and state\n                    // Convert into a single encoded string all parameters listed below\n                    search: stringify({\n                      search: search.search,\n                      query: search.query,\n                      option: search.option,\n                      limit: +value === DEFAULT_LIMIT ? undefined : value,\n                    }),\n                  });\n                }}\n                backIconButtonProps={backIconButtonProps} // (MTP) Non-changing propierties of the back page button\n                nextIconButtonProps={nextIconButtonProps} // (MTP) Non-changing propierties of the next page button\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default Browse;\n"],"names":["KEYFRAMES","opacity","reducedMotion","transform","ANIMATION_OPTIONS","fill","easing","duration","forwardRef","_ref","ref","overrideComponent","props","containerRef","useRef","useLayoutEffect","node","current","firstElementChild","animate","index","Array","from","document","querySelectorAll","findIndex","section","animation","delay","cancel","Component","Card","_jsx","className","style","children","component","spaces","getRegExFor","memoize","highlight","RegExp","toString","trim","split","map","escapeRegExp","join","Highlight","React","isArray","child","i","Number","isFinite","re","filter","Boolean","chunk","test","key","inputProps","startAdornment","InputAdornment","position","FontAwesomeIcon","icon","faSearch","size","classes","input","debouncedUpdateLocation","debounce","updateLocation","location","history","value","search","nextSearchObject","parse","ignoreQueryPrefix","shouldReplace","page","undefined","stringify","replace","Search","useLocation","useNavigate","setValue","useState","useEffect","handleChange","useCallback","target","doc","docs","find","id","TextField","title","text","onChange","InputProps","placeholder","HOST_CONFIG","searchExample","all","rowsPerPageOptions","backIconButtonProps","nextIconButtonProps","keyframes","Row","projectData","previewUrl","project","Project","identifier","accession","published","pdbInfo","metadata","mdCount","directions","error","_jsxs","TableRow","TableCell","cn","Link","to","pathname","state","NAME","compound","LazyImg","src","width","height","loading","alt","Object","entries","_ref2","direction","available","_ref3","Chip","clickable","label","NICE_NAMES","get","variant","Browse","decoded","decodeURIComponent","decoder","c","selectedOption","setSelectedOption","option","_ref4","query","optionsField","selectedOptionFilter","searchString","limit","window","scrollTo","previousPayload","optionsUrl","BASE_PATH_PROJECTS","payload","optionsPayload","optionsError","useAPI","availableOptions","useMemo","actualOptons","keys","queryUrl","queryLoading","queryPayload","queryError","Loading","results","matchCount","projects","filteredCount","screenshotsUrls","SCREENSHOT_FILENAME","CardContent","FormControl","InputLabel","optionsLabel","Select","MenuItem","optionsNiceNames","Typography","Table","TableHead","TableBody","TableFooter","TablePagination","colSpan","count","rowsPerPage","onPageChange","_","onRowsPerPageChange","_ref5"],"sourceRoot":""}