{"version":3,"file":"static/js/protvista-navigation.ccf44325.chunk.js","mappings":"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","sources":["../node_modules/protvista-navigation/src/protvista-navigation.js","../node_modules/protvista-utils/src/Region.js","../node_modules/protvista-utils/src/TrackHighlighter.js","../node_modules/protvista-utils/src/ColorScaleParser.js","../node_modules/protvista-utils/src/String2Object.js","../node_modules/protvista-utils/src/withMargin.js","../node_modules/protvista-utils/src/index.js","../node_modules/protvista-utils/src/ScrollFilter.js"],"sourcesContent":["import {\n  scaleLinear,\n  axisBottom,\n  brushX,\n  format,\n  select,\n  event as d3Event,\n} from \"d3\";\n\nimport { withMargin } from \"protvista-utils\";\n\nclass ProtVistaNavigation extends HTMLElement {\n  constructor() {\n    super();\n    this._x = null;\n    this._padding = 0;\n    this.height = 40;\n    this.dontDispatch = false;\n  }\n\n  _refreshWidth() {\n    this.style.display = \"block\";\n    this.style.width = \"100%\";\n    this.width = this.offsetWidth - this.margin.left - this.margin.right;\n    if (this.width > 0) {\n      this._padding = 10;\n    }\n  }\n\n  connectedCallback() {\n    this._refreshWidth();\n    if (this.closest(\"protvista-manager\")) {\n      this.manager = this.closest(\"protvista-manager\");\n      this.manager.register(this);\n    }\n    this._length = parseFloat(this.getAttribute(\"length\"));\n    this._displaystart = parseFloat(this.getAttribute(\"displaystart\")) || 1;\n    this._displayend =\n      parseFloat(this.getAttribute(\"displayend\")) || this._length;\n    this._highlightStart = parseFloat(this.getAttribute(\"highlightStart\"));\n    this._highlightEnd = parseFloat(this.getAttribute(\"highlightEnd\"));\n    this._rulerstart = parseFloat(this.getAttribute(\"rulerStart\")) || 1;\n\n    this._onResize = this._onResize.bind(this);\n\n    this._createNavRuler();\n  }\n\n  disconnectedCallback() {\n    if (this.manager) {\n      this.manager.unregister(this);\n    }\n    if (this._ro) {\n      this._ro.unobserve(this);\n    }\n    window.removeEventListener(\"resize\", this._onResize);\n  }\n\n  static get observedAttributes() {\n    return [\n      \"length\",\n      \"displaystart\",\n      \"displayend\",\n      \"highlightStart\",\n      \"highlightEnd\",\n      \"width\",\n      \"rulerstart\",\n    ];\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (oldValue !== newValue) {\n      this[`_${name}`] = parseFloat(newValue);\n      this._updateNavRuler();\n    }\n  }\n\n  get width() {\n    return this._width;\n  }\n\n  set width(width) {\n    this._width = width;\n  }\n\n  _createNavRuler() {\n    this._x = scaleLinear().range([this._padding, this.width - this._padding]);\n    this._x.domain([this._rulerstart, this._rulerstart + this._length - 1]);\n\n    select(this).selectAll(\"div\").remove();\n    this._container = select(this).append(\"div\").attr(\"class\", \"container\");\n\n    this._svg = this._container\n      .append(\"svg\")\n      .attr(\"id\", \"\")\n      .attr(\"width\", this.width)\n      .attr(\"height\", this.height);\n\n    this._xAxis = axisBottom(this._x);\n\n    this._displaystartLabel = this._svg\n      .append(\"text\")\n      .attr(\"class\", \"start-label\")\n      .attr(\"x\", 0)\n      .attr(\"y\", this.height - this._padding);\n\n    this._displayendLabel = this._svg\n      .append(\"text\")\n      .attr(\"class\", \"end-label\")\n      .attr(\"x\", this.width)\n      .attr(\"y\", this.height - this._padding)\n      .attr(\"text-anchor\", \"end\");\n    this._axis = this._svg\n      .append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .call(this._xAxis);\n\n    this._viewport = brushX()\n      .extent([\n        [this._padding, 0],\n        [this.width - this._padding, this.height * 0.51],\n      ])\n      .on(\"brush\", () => {\n        if (d3Event.selection) {\n          this._displaystart = format(\"d\")(\n            this._x.invert(d3Event.selection[0])\n          );\n          this._displayend = format(\"d\")(this._x.invert(d3Event.selection[1]));\n          if (!this.dontDispatch)\n            this.dispatchEvent(\n              new CustomEvent(\"change\", {\n                detail: {\n                  displayend: this._displayend,\n                  displaystart: this._displaystart,\n                  extra: { transform: d3Event.transform },\n                },\n                bubbles: true,\n                cancelable: true,\n              })\n            );\n          this._updateLabels();\n          this._updatePolygon();\n        }\n      });\n\n    this._brushG = this._svg\n      .append(\"g\")\n      .attr(\"class\", \"brush\")\n      .call(this._viewport);\n\n    this._brushG.call(this._viewport.move, [\n      this._x(this._displaystart),\n      this._x(this._displayend),\n    ]);\n\n    this.polygon = this._svg\n      .append(\"polygon\")\n      .attr(\"class\", \"zoom-polygon\")\n      .attr(\"fill\", \"#777\")\n      .attr(\"fill-opacity\", \"0.3\");\n    this._updateNavRuler();\n\n    if (\"ResizeObserver\" in window) {\n      this._ro = new ResizeObserver(this._onResize);\n      this._ro.observe(this);\n    }\n    window.addEventListener(\"resize\", this._onResize);\n  }\n\n  _onResize() {\n    this._refreshWidth();\n    this._x = this._x.range([this._padding, this.width - this._padding]);\n    this._svg.attr(\"width\", this.width);\n    this._viewport.extent([\n      [this._padding, 0],\n      [this.width - this._padding, this.height * 0.51],\n    ]);\n    this._brushG.call(this._viewport);\n    this._updateNavRuler();\n  }\n\n  _updateNavRuler() {\n    if (this._x) {\n      this._container\n        .style(\"padding-left\", `${this.margin.left}px`)\n        .style(\"padding-right\", `${this.margin.right}px`)\n        .style(\"padding-top\", `${this.margin.top}px`)\n        .style(\"padding-bottom\", `${this.margin.bottom}px`);\n      this._x.domain([this._rulerstart, this._rulerstart + this._length - 1]);\n      this._axis.call(this._xAxis);\n      this._updatePolygon();\n      this._updateLabels();\n      if (this._brushG) {\n        this.dontDispatch = true;\n        this._brushG.call(this._viewport.move, [\n          this._x(this._displaystart),\n          this._x(this._displayend),\n        ]);\n        this.dontDispatch = false;\n      }\n    }\n  }\n\n  _updateLabels() {\n    if (this._displaystartLabel)\n      this._displaystartLabel.text(this._displaystart);\n    if (this._displayendLabel)\n      this._displayendLabel.attr(\"x\", this.width).text(this._displayend);\n  }\n\n  _updatePolygon() {\n    if (this.polygon)\n      this.polygon.attr(\n        \"points\",\n        `${this._x(this._displaystart)},${this.height / 2}\n        ${this._x(this._displayend)},${this.height / 2}\n        ${this.width},${this.height}\n        0,${this.height}`\n      );\n  }\n}\n\nexport default withMargin(ProtVistaNavigation);\n","export default class Region {\n  constructor({ min = -Infinity, max = Infinity } = {}) {\n    this.segments = [];\n    this.max = max;\n    this.min = min;\n    this.regionString = null;\n  }\n\n  encode(full = false) {\n    return this.segments\n      .map(({ start, end, color }) => {\n        if (full) return `${start}:${end}${color ? `:${color}` : \"\"}`;\n        const s = start === this.min ? \"\" : start;\n        const e = end === this.max ? \"\" : end;\n        return `${s}:${e}${color ? `:${color}` : \"\"}`;\n      })\n      .join(\",\");\n  }\n\n  decode(regionString) {\n    if (typeof regionString !== \"undefined\") this.regionString = regionString;\n    if (!this.regionString) {\n      this.segments = [];\n      return;\n    }\n    this.segments = this.regionString.split(\",\").map((region) => {\n      const [_start, _end, _color, _] = region.split(\":\");\n      if (typeof _ !== \"undefined\")\n        throw new Error(\n          `there should be at most 2 ':' per region. Region: ${region}`\n        );\n      let start = _start ? Number(_start) : this.min;\n      let end = _end ? Number(_end) : this.max;\n      const color = _color !== \"\" ? _color : undefined;\n      if (start > end) [start, end] = [end, start];\n      if (start < this.min) start = this.min;\n      if (end > this.max) end = this.max;\n      if (Number.isNaN(start))\n        throw new Error(\n          `The parsed value of ${_start} is NaN. Region: ${region}`\n        );\n      if (Number.isNaN(end))\n        throw new Error(\n          `The parsed value of ${_end} is NaN. Region: ${region}`\n        );\n      if (color && !color.match(/^#[0-9a-f]{6,8}$/i))\n        throw new Error(\n          `The parsed value of ${_color} is not a color in hex format. Region: ${region}`\n        );\n\n      return {\n        start,\n        end,\n        color,\n      };\n    });\n  }\n}\n","import Region from \"./Region\";\n\nconst DEFAULT_HIGLIGHT_COLOR = \"#FFEB3B66\";\n\nconst combineRegions = (region1, region2) => {\n  if (!region1) return region2;\n  if (!region2) return region1;\n  return `${region1},${region2}`;\n};\nexport default class TrackHighlighter {\n  constructor({ element, min, max }) {\n    this.element = element;\n    this.element._highlightcolor = DEFAULT_HIGLIGHT_COLOR;\n    this.region = new Region({ min, max });\n    this.fixedHighlight = null;\n  }\n\n  set max(max) {\n    this.region.max = max;\n  }\n\n  setAttributesInElement() {\n    this.region.decode(this.element.getAttribute(\"highlight\"));\n    if (this.region.segments.length === 0) {\n      this.element._highlightstart = Number(\n        this.element.getAttribute(\"highlightstart\")\n      );\n      this.element._highlightend = Number(\n        this.element.getAttribute(\"highlightend\")\n      );\n      this.element._highlightcolor =\n        this.element.getAttribute(\"highlightcolor\") || DEFAULT_HIGLIGHT_COLOR;\n      if (\n        this.element._highlightstart !== null &&\n        this.element._highlightend !== null &&\n        typeof this.element._highlightstart === \"number\" &&\n        typeof this.element._highlightend === \"number\"\n      ) {\n        this.element._highlight = `${this.element._highlightstart}:${this.element._highlightend}`;\n        this.region.decode(\n          combineRegions(this.fixedHighlight, this.element._highlight)\n        );\n      }\n    }\n  }\n\n  setFloatAttribute(name, strValue) {\n    const value = parseFloat(strValue);\n    this.element[`_${name}`] = Number.isNaN(value) ? strValue : value;\n  }\n\n  changedCallBack(name, newValue) {\n    switch (name) {\n      case \"highlightstart\":\n      case \"highlightend\":\n        this.setFloatAttribute(name, newValue);\n        this.element._highlight =\n          Number.isNaN(this.element._highlightstart) ||\n          Number.isNaN(this.element._highlightend) ||\n          this.element._highlightstart === undefined ||\n          this.element._highlightend === undefined ||\n          this.element._highlightstart === null ||\n          this.element._highlightend === null\n            ? \"\"\n            : `${Math.max(\n                this.region.min,\n                this.element._highlightstart\n              )}:${Math.min(this.region.max, this.element._highlightend)}`;\n        break;\n      default:\n        this.element._highlight = newValue;\n    }\n    this.region.decode(\n      combineRegions(this.fixedHighlight, this.element._highlight)\n    );\n    this.element.refresh();\n  }\n\n  setFixedHighlight(region) {\n    this.fixedHighlight = region;\n    this.region.decode(combineRegions(region, this.element._highlight));\n    this.element.refresh();\n  }\n\n  appendHighlightTo(svg) {\n    this.highlighted = svg.append(\"g\").attr(\"class\", \"highlighted\");\n  }\n\n  updateHighlight() {\n    const highlighs = this.highlighted\n      .selectAll(\"rect\")\n      .data(this.region.segments);\n    highlighs\n      .enter()\n      .append(\"rect\")\n      .style(\"pointer-events\", \"none\")\n      .merge(highlighs)\n      .attr(\"fill\", (d) => (d.color ? d.color : this.element._highlightcolor))\n      .attr(\"height\", this.element._height)\n      .attr(\"x\", (d) => this.element.getXFromSeqPosition(d.start))\n      .attr(\n        \"width\",\n        (d) => this.element.getSingleBaseWidth() * (d.end - d.start + 1)\n      );\n    highlighs.exit().remove();\n  }\n}\n","export function isColorValid(color) {\n  const fakeElement = document.createElement(\"div\");\n  fakeElement.style.borderColor = \"\";\n  fakeElement.style.borderColor = color;\n  if (fakeElement.style.borderColor === \"\") return false;\n  return true;\n}\n\nexport default (text = null) => {\n  let range = [];\n  let domain = [];\n  if (text !== null && typeof text !== \"string\")\n    throw new Error(\"The attribute text has to be of type string\");\n  if (text && text.trim() !== \"\") {\n    const blocks = text.split(\",\").map(bl => bl.split(\":\"));\n    if (blocks.length < 2)\n      throw new Error(\"There should be at least 2 points to create a scale\");\n\n    range = blocks.map(bl => {\n      const color = bl[0].trim().toUpperCase();\n      if (!isColorValid(color)) {\n        throw new Error(`The color '${color} is not valid'`);\n      }\n      return color;\n    });\n    domain = blocks.map((bl, i) => {\n      const number = parseFloat(bl[1]);\n      if (Number.isNaN(number))\n        throw new Error(\n          `The second part of every point should be a number. Error in point ${i}: ${bl}`\n        );\n      return number;\n    });\n  }\n  return {\n    range,\n    domain\n  };\n};\n","const identity = x => x;\n\nexport default (\n  string = null,\n  { keyFormatter = identity, valueFormatter = identity } = {}\n) => {\n  if (string !== null && typeof string !== \"string\")\n    throw new Error(\"The attribute text has to be of type string\");\n  if (string && string.trim() !== \"\") {\n    const blocks = string.split(\",\").map(bl => bl.split(\":\"));\n    const obj = {};\n    blocks.forEach(bl => {\n      if (bl.length !== 2)\n        throw new Error(\n          `Bad block: ${bl.join(\n            \":\"\n          )}\\n The blocks of the string should follow the format KEY:VALUE`\n        );\n      obj[keyFormatter(bl[0])] = valueFormatter(bl[1]);\n    });\n    return obj;\n  }\n  return {};\n};\n","const sides = [\"left\", \"right\", \"top\", \"bottom\"];\nconst marginSides = sides.map((side) => `margin${side}`);\n\nconst withMargin = (\n  Element,\n  options = {\n    initialValue: {\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n    },\n  }\n) => {\n  class ElementWithMargin extends Element {\n    constructor() {\n      super();\n      this.margin = options.initialValue;\n    }\n\n    static get observedAttributes() {\n      return [...super.observedAttributes, ...marginSides];\n    }\n\n    attributeChangedCallback(name, oldValue, newValue) {\n      if (oldValue !== newValue) {\n        if (marginSides.includes(name)) {\n          this[name] = newValue;\n        }\n      }\n      super.attributeChangedCallback(name, oldValue, newValue);\n    }\n  }\n  for (const side of sides) {\n    Object.defineProperty(ElementWithMargin.prototype, `margin${side}`, {\n      get() {\n        return this.margin[side] || 0;\n      },\n      set(value) {\n        this.margin[side] = +value;\n      },\n    });\n  }\n  return ElementWithMargin;\n};\n\nexport default withMargin;\n","import _Region from \"./Region\";\nimport _th from \"./TrackHighlighter\";\nimport _csp from \"./ColorScaleParser\";\nimport _s2o from \"./String2Object\";\nimport _sf from \"./ScrollFilter\";\nimport _withMargin from \"./withMargin\";\n\nexport const Region = _Region;\nexport const TrackHighlighter = _th;\nexport const ColorScaleParser = _csp;\nexport const String2Object = _s2o;\nexport const ScrollFilter = _sf;\nexport const withMargin = _withMargin;\n","export default class ScrollFilter {\n  constructor(element, scrollDelay = 400) {\n    this.element = element;\n    this.timeStampWheelOutside = 0;\n    this.resetScrollableTimeout = null;\n    this.scrollDelay = scrollDelay;\n  }\n\n  setElementScrollable(scrollable) {\n    this.element.setAttribute(\"scrollable\", scrollable);\n  }\n\n  startResetScrollableTimer() {\n    if (this.resetScrollableTimeout) {\n      clearTimeout(this.resetScrollableTimeout);\n    }\n    // Reset scrollable to true after a small period of time\n    this.resetScrollableTimeout = setTimeout(() => {\n      this.setElementScrollable(true);\n      this.resetScrollableTimeout = null;\n    }, this.scrollDelay);\n  }\n\n  blockScroll(timeStamp) {\n    this.timeStampWheelOutside = timeStamp;\n    this.setElementScrollable(false);\n    this.startResetScrollableTimer();\n  }\n\n  wheel({ target, timeStamp }) {\n    if (this.element.contains(target)) {\n      if (timeStamp < this.timeStampWheelOutside + this.scrollDelay) {\n        // Count this as an outside scroll as it's within the delay and it's\n        // inferred the user is doing a continuous scroll past the component\n        this.blockScroll(timeStamp);\n      } else {\n        this.setElementScrollable(true);\n      }\n    } else {\n      // Block scrolling and remember the time when the last scroll outside occurred.\n      this.blockScroll(timeStamp);\n    }\n  }\n}\n"],"names":["ProtVistaNavigation","HTMLElement","constructor","super","this","_x","_padding","height","dontDispatch","_refreshWidth","style","display","width","offsetWidth","margin","left","right","connectedCallback","closest","manager","register","_length","parseFloat","getAttribute","_displaystart","_displayend","_highlightStart","_highlightEnd","_rulerstart","_onResize","bind","_createNavRuler","disconnectedCallback","unregister","_ro","unobserve","window","removeEventListener","observedAttributes","attributeChangedCallback","name","oldValue","newValue","_updateNavRuler","_width","scaleLinear","range","domain","select","selectAll","remove","_container","append","attr","_svg","_xAxis","axisBottom","_displaystartLabel","_displayendLabel","_axis","call","_viewport","brushX","extent","on","d3Event","selection","format","invert","dispatchEvent","CustomEvent","detail","displayend","displaystart","extra","transform","bubbles","cancelable","_updateLabels","_updatePolygon","_brushG","move","polygon","ResizeObserver","observe","addEventListener","top","bottom","text","withMargin","Region","min","Infinity","max","arguments","length","undefined","segments","regionString","encode","full","map","_ref","start","end","color","join","decode","split","region","_start","_end","_color","_","Error","Number","isNaN","match","DEFAULT_HIGLIGHT_COLOR","combineRegions","region1","region2","identity","x","sides","marginSides","side","Element","options","initialValue","ElementWithMargin","includes","Object","defineProperty","prototype","get","set","value","TrackHighlighter","element","_highlightcolor","fixedHighlight","setAttributesInElement","_highlightstart","_highlightend","_highlight","setFloatAttribute","strValue","changedCallBack","Math","refresh","setFixedHighlight","appendHighlightTo","svg","highlighted","updateHighlight","highlighs","data","enter","merge","d","_height","getXFromSeqPosition","getSingleBaseWidth","exit","ColorScaleParser","trim","blocks","bl","toUpperCase","fakeElement","document","createElement","borderColor","isColorValid","i","number","String2Object","string","keyFormatter","valueFormatter","obj","forEach","ScrollFilter","scrollDelay","timeStampWheelOutside","resetScrollableTimeout","setElementScrollable","scrollable","setAttribute","startResetScrollableTimer","clearTimeout","setTimeout","blockScroll","timeStamp","wheel","target","contains","_withMargin"],"sourceRoot":""}